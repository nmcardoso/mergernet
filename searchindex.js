Search.setIndex({"docnames": ["api/mergernet.core", "api/mergernet.core.constants", "api/mergernet.core.experiment", "api/mergernet.core.experiment.Experiment", "api/mergernet.core.experiment.backup_model", "api/mergernet.core.hp", "api/mergernet.core.hp.CategoricalHyperParameter", "api/mergernet.core.hp.ConstantHyperParameter", "api/mergernet.core.hp.FloatHyperParameter", "api/mergernet.core.hp.HP", "api/mergernet.core.hp.HyperParameter", "api/mergernet.core.hp.HyperParameterSet", "api/mergernet.core.hp.IntHyperParameter", "api/mergernet.core.logging", "api/mergernet.core.logging.configure_root_logger", "api/mergernet.core.utils", "api/mergernet.core.utils.CachedDataFrame", "api/mergernet.core.utils.SingletonMeta", "api/mergernet.core.utils.Timming", "api/mergernet.core.utils.array_fallback", "api/mergernet.core.utils.classproperty", "api/mergernet.core.utils.deep_update", "api/mergernet.core.utils.find_by_value", "api/mergernet.core.utils.heading", "api/mergernet.core.utils.iauname", "api/mergernet.core.utils.iauname_relative_path", "api/mergernet.core.utils.load_image", "api/mergernet.core.utils.load_table", "api/mergernet.core.utils.not_in", "api/mergernet.core.utils.save_table", "api/mergernet.core.utils.serialize", "api/mergernet.core.utils.unique_path", "api/mergernet.data", "api/mergernet.data.dataset", "api/mergernet.data.dataset.Dataset", "api/mergernet.data.dataset_config", "api/mergernet.data.dataset_config.DatasetConfig", "api/mergernet.data.dataset_config.DatasetRegistry", "api/mergernet.data.image", "api/mergernet.data.image.ImageTransform", "api/mergernet.data.image.LegacyRGB", "api/mergernet.data.image.LuptonRGB", "api/mergernet.data.image.asinh_map", "api/mergernet.data.image.asinh_map2", "api/mergernet.data.kfold", "api/mergernet.data.kfold.DistributionKFold", "api/mergernet.data.kfold.StratifiedDistributionKFold", "api/mergernet.data.match", "api/mergernet.data.match.CrossMatch", "api/mergernet.data.match.CrossMatchResult", "api/mergernet.data.match.XTable", "api/mergernet.data.preprocessing", "api/mergernet.data.preprocessing.load_jpg", "api/mergernet.data.preprocessing.load_png", "api/mergernet.data.preprocessing.normalize_rgb", "api/mergernet.data.preprocessing.one_hot_factory", "api/mergernet.data.preprocessing.standardize_rgb", "api/mergernet.data.rgb", "api/mergernet.data.rgb.RGB", "api/mergernet.data.sanitization", "api/mergernet.data.sanitization.DatasetSanitization", "api/mergernet.data.trilogy", "api/mergernet.data.trilogy.MakeImg", "api/mergernet.data.trilogy.RGB2im", "api/mergernet.data.trilogy.adjust_saturation", "api/mergernet.data.trilogy.da", "api/mergernet.data.trilogy.get_clip", "api/mergernet.data.trilogy.get_levels", "api/mergernet.data.trilogy.imscale", "api/mergernet.data.trilogy.meanstd", "api/mergernet.data.trilogy.rms", "api/mergernet.data.trilogy.satK2m", "api/mergernet.data.trilogy.setLevel", "api/mergernet.estimators", "api/mergernet.estimators.automl", "api/mergernet.estimators.automl.OptunaEstimator", "api/mergernet.estimators.base", "api/mergernet.estimators.base.Estimator", "api/mergernet.estimators.base.EstimatorConfig", "api/mergernet.estimators.base.EstimatorRegistry", "api/mergernet.estimators.decals", "api/mergernet.estimators.decals.ZoobotEstimator", "api/mergernet.estimators.parametric", "api/mergernet.estimators.parametric.ParametricEstimator", "api/mergernet.jobs", "api/mergernet.jobs.j001", "api/mergernet.jobs.j001.Job", "api/mergernet.jobs.j002", "api/mergernet.jobs.j002.Job", "api/mergernet.jobs.j003", "api/mergernet.jobs.j003.Job", "api/mergernet.jobs.j004", "api/mergernet.jobs.j004.Job", "api/mergernet.jobs.j005", "api/mergernet.jobs.j005.Job", "api/mergernet.model", "api/mergernet.model.automl", "api/mergernet.model.automl.optuna_train", "api/mergernet.model.baseline", "api/mergernet.model.baseline.finetune_train", "api/mergernet.model.callbacks", "api/mergernet.model.callbacks.DeltaStopping", "api/mergernet.model.callbacks.MWandbCallback", "api/mergernet.model.callbacks.MyWandbCallback", "api/mergernet.model.callbacks.PruneCallback", "api/mergernet.model.callbacks.SaveBestTrialCallback", "api/mergernet.model.inference", "api/mergernet.model.inference.Predictor", "api/mergernet.model.utils", "api/mergernet.model.utils.get_conv_arch", "api/mergernet.model.utils.history_to_dataframe", "api/mergernet.model.utils.load_model", "api/mergernet.model.utils.set_trainable_state", "api/mergernet.model.utils.setup_seeds", "api/mergernet.services", "api/mergernet.services.github", "api/mergernet.services.github.GithubService", "api/mergernet.services.google", "api/mergernet.services.google.GDrive", "api/mergernet.services.imaging", "api/mergernet.services.imaging.ImagingService", "api/mergernet.services.legacy", "api/mergernet.services.legacy.LegacyService", "api/mergernet.services.sciserver", "api/mergernet.services.sciserver.SciServer", "api/mergernet.services.sdss", "api/mergernet.services.sdss.SloanService", "api/mergernet.services.splus", "api/mergernet.services.splus.ImageType", "api/mergernet.services.splus.SplusService", "api/mergernet.services.splus.update_authorization", "api/mergernet.services.tap", "api/mergernet.services.tap.TapService", "api/mergernet.services.tensorboard", "api/mergernet.services.tensorboard.TensorboardService", "api/mergernet.services.utils", "api/mergernet.services.utils.append_query_params", "api/mergernet.services.utils.batch_download_file", "api/mergernet.services.utils.download_file", "api/mergernet.services.utils.parallel_function_executor", "api/mergernet.visualization", "api/mergernet.visualization.plot", "api/mergernet.visualization.plot.Serie", "api/mergernet.visualization.plot.color_color", "api/mergernet.visualization.plot.conf_matrix", "api/mergernet.visualization.plot.data_distribution", "api/mergernet.visualization.plot.mag_class_distribution", "api/mergernet.visualization.plot.object_position", "api/mergernet.visualization.plot.roc", "api/mergernet.visualization.plot.train_metrics", "experiments", "index", "reference"], "filenames": ["api/mergernet.core.rst", "api/mergernet.core.constants.rst", "api/mergernet.core.experiment.rst", "api/mergernet.core.experiment.Experiment.rst", "api/mergernet.core.experiment.backup_model.rst", "api/mergernet.core.hp.rst", "api/mergernet.core.hp.CategoricalHyperParameter.rst", "api/mergernet.core.hp.ConstantHyperParameter.rst", "api/mergernet.core.hp.FloatHyperParameter.rst", "api/mergernet.core.hp.HP.rst", "api/mergernet.core.hp.HyperParameter.rst", "api/mergernet.core.hp.HyperParameterSet.rst", "api/mergernet.core.hp.IntHyperParameter.rst", "api/mergernet.core.logging.rst", "api/mergernet.core.logging.configure_root_logger.rst", "api/mergernet.core.utils.rst", "api/mergernet.core.utils.CachedDataFrame.rst", "api/mergernet.core.utils.SingletonMeta.rst", "api/mergernet.core.utils.Timming.rst", "api/mergernet.core.utils.array_fallback.rst", "api/mergernet.core.utils.classproperty.rst", "api/mergernet.core.utils.deep_update.rst", "api/mergernet.core.utils.find_by_value.rst", "api/mergernet.core.utils.heading.rst", "api/mergernet.core.utils.iauname.rst", "api/mergernet.core.utils.iauname_relative_path.rst", "api/mergernet.core.utils.load_image.rst", "api/mergernet.core.utils.load_table.rst", "api/mergernet.core.utils.not_in.rst", "api/mergernet.core.utils.save_table.rst", "api/mergernet.core.utils.serialize.rst", "api/mergernet.core.utils.unique_path.rst", "api/mergernet.data.rst", "api/mergernet.data.dataset.rst", "api/mergernet.data.dataset.Dataset.rst", "api/mergernet.data.dataset_config.rst", "api/mergernet.data.dataset_config.DatasetConfig.rst", "api/mergernet.data.dataset_config.DatasetRegistry.rst", "api/mergernet.data.image.rst", "api/mergernet.data.image.ImageTransform.rst", "api/mergernet.data.image.LegacyRGB.rst", "api/mergernet.data.image.LuptonRGB.rst", "api/mergernet.data.image.asinh_map.rst", "api/mergernet.data.image.asinh_map2.rst", "api/mergernet.data.kfold.rst", "api/mergernet.data.kfold.DistributionKFold.rst", "api/mergernet.data.kfold.StratifiedDistributionKFold.rst", "api/mergernet.data.match.rst", "api/mergernet.data.match.CrossMatch.rst", "api/mergernet.data.match.CrossMatchResult.rst", "api/mergernet.data.match.XTable.rst", "api/mergernet.data.preprocessing.rst", "api/mergernet.data.preprocessing.load_jpg.rst", "api/mergernet.data.preprocessing.load_png.rst", "api/mergernet.data.preprocessing.normalize_rgb.rst", "api/mergernet.data.preprocessing.one_hot_factory.rst", "api/mergernet.data.preprocessing.standardize_rgb.rst", "api/mergernet.data.rgb.rst", "api/mergernet.data.rgb.RGB.rst", "api/mergernet.data.sanitization.rst", "api/mergernet.data.sanitization.DatasetSanitization.rst", "api/mergernet.data.trilogy.rst", "api/mergernet.data.trilogy.MakeImg.rst", "api/mergernet.data.trilogy.RGB2im.rst", "api/mergernet.data.trilogy.adjust_saturation.rst", "api/mergernet.data.trilogy.da.rst", "api/mergernet.data.trilogy.get_clip.rst", "api/mergernet.data.trilogy.get_levels.rst", "api/mergernet.data.trilogy.imscale.rst", "api/mergernet.data.trilogy.meanstd.rst", "api/mergernet.data.trilogy.rms.rst", "api/mergernet.data.trilogy.satK2m.rst", "api/mergernet.data.trilogy.setLevel.rst", "api/mergernet.estimators.rst", "api/mergernet.estimators.automl.rst", "api/mergernet.estimators.automl.OptunaEstimator.rst", "api/mergernet.estimators.base.rst", "api/mergernet.estimators.base.Estimator.rst", "api/mergernet.estimators.base.EstimatorConfig.rst", "api/mergernet.estimators.base.EstimatorRegistry.rst", "api/mergernet.estimators.decals.rst", "api/mergernet.estimators.decals.ZoobotEstimator.rst", "api/mergernet.estimators.parametric.rst", "api/mergernet.estimators.parametric.ParametricEstimator.rst", "api/mergernet.jobs.rst", "api/mergernet.jobs.j001.rst", "api/mergernet.jobs.j001.Job.rst", "api/mergernet.jobs.j002.rst", "api/mergernet.jobs.j002.Job.rst", "api/mergernet.jobs.j003.rst", "api/mergernet.jobs.j003.Job.rst", "api/mergernet.jobs.j004.rst", "api/mergernet.jobs.j004.Job.rst", "api/mergernet.jobs.j005.rst", "api/mergernet.jobs.j005.Job.rst", "api/mergernet.model.rst", "api/mergernet.model.automl.rst", "api/mergernet.model.automl.optuna_train.rst", "api/mergernet.model.baseline.rst", "api/mergernet.model.baseline.finetune_train.rst", "api/mergernet.model.callbacks.rst", "api/mergernet.model.callbacks.DeltaStopping.rst", "api/mergernet.model.callbacks.MWandbCallback.rst", "api/mergernet.model.callbacks.MyWandbCallback.rst", "api/mergernet.model.callbacks.PruneCallback.rst", "api/mergernet.model.callbacks.SaveBestTrialCallback.rst", "api/mergernet.model.inference.rst", "api/mergernet.model.inference.Predictor.rst", "api/mergernet.model.utils.rst", "api/mergernet.model.utils.get_conv_arch.rst", "api/mergernet.model.utils.history_to_dataframe.rst", "api/mergernet.model.utils.load_model.rst", "api/mergernet.model.utils.set_trainable_state.rst", "api/mergernet.model.utils.setup_seeds.rst", "api/mergernet.services.rst", "api/mergernet.services.github.rst", "api/mergernet.services.github.GithubService.rst", "api/mergernet.services.google.rst", "api/mergernet.services.google.GDrive.rst", "api/mergernet.services.imaging.rst", "api/mergernet.services.imaging.ImagingService.rst", "api/mergernet.services.legacy.rst", "api/mergernet.services.legacy.LegacyService.rst", "api/mergernet.services.sciserver.rst", "api/mergernet.services.sciserver.SciServer.rst", "api/mergernet.services.sdss.rst", "api/mergernet.services.sdss.SloanService.rst", "api/mergernet.services.splus.rst", "api/mergernet.services.splus.ImageType.rst", "api/mergernet.services.splus.SplusService.rst", "api/mergernet.services.splus.update_authorization.rst", "api/mergernet.services.tap.rst", "api/mergernet.services.tap.TapService.rst", "api/mergernet.services.tensorboard.rst", "api/mergernet.services.tensorboard.TensorboardService.rst", "api/mergernet.services.utils.rst", "api/mergernet.services.utils.append_query_params.rst", "api/mergernet.services.utils.batch_download_file.rst", "api/mergernet.services.utils.download_file.rst", "api/mergernet.services.utils.parallel_function_executor.rst", "api/mergernet.visualization.rst", "api/mergernet.visualization.plot.rst", "api/mergernet.visualization.plot.Serie.rst", "api/mergernet.visualization.plot.color_color.rst", "api/mergernet.visualization.plot.conf_matrix.rst", "api/mergernet.visualization.plot.data_distribution.rst", "api/mergernet.visualization.plot.mag_class_distribution.rst", "api/mergernet.visualization.plot.object_position.rst", "api/mergernet.visualization.plot.roc.rst", "api/mergernet.visualization.plot.train_metrics.rst", "experiments.rst", "index.rst", "reference.rst"], "titles": ["mergernet.core", "mergernet.core.constants", "mergernet.core.experiment", "Experiment", "mergernet.core.experiment.backup_model", "mergernet.core.hp", "CategoricalHyperParameter", "ConstantHyperParameter", "FloatHyperParameter", "HP", "HyperParameter", "HyperParameterSet", "IntHyperParameter", "mergernet.core.logging", "mergernet.core.logging.configure_root_logger", "mergernet.core.utils", "CachedDataFrame", "SingletonMeta", "Timming", "mergernet.core.utils.array_fallback", "classproperty", "mergernet.core.utils.deep_update", "mergernet.core.utils.find_by_value", "mergernet.core.utils.heading", "mergernet.core.utils.iauname", "mergernet.core.utils.iauname_relative_path", "mergernet.core.utils.load_image", "mergernet.core.utils.load_table", "mergernet.core.utils.not_in", "mergernet.core.utils.save_table", "mergernet.core.utils.serialize", "mergernet.core.utils.unique_path", "mergernet.data", "mergernet.data.dataset", "Dataset", "mergernet.data.dataset_config", "DatasetConfig", "DatasetRegistry", "mergernet.data.image", "ImageTransform", "LegacyRGB", "LuptonRGB", "mergernet.data.image.asinh_map", "mergernet.data.image.asinh_map2", "mergernet.data.kfold", "DistributionKFold", "StratifiedDistributionKFold", "mergernet.data.match", "CrossMatch", "CrossMatchResult", "XTable", "mergernet.data.preprocessing", "mergernet.data.preprocessing.load_jpg", "mergernet.data.preprocessing.load_png", "mergernet.data.preprocessing.normalize_rgb", "mergernet.data.preprocessing.one_hot_factory", "mergernet.data.preprocessing.standardize_rgb", "mergernet.data.rgb", "RGB", "mergernet.data.sanitization", "DatasetSanitization", "mergernet.data.trilogy", "MakeImg", "mergernet.data.trilogy.RGB2im", "mergernet.data.trilogy.adjust_saturation", "mergernet.data.trilogy.da", "mergernet.data.trilogy.get_clip", "mergernet.data.trilogy.get_levels", "mergernet.data.trilogy.imscale", "mergernet.data.trilogy.meanstd", "mergernet.data.trilogy.rms", "mergernet.data.trilogy.satK2m", "mergernet.data.trilogy.setLevel", "mergernet.estimators", "mergernet.estimators.automl", "OptunaEstimator", "mergernet.estimators.base", "Estimator", "EstimatorConfig", "EstimatorRegistry", "mergernet.estimators.decals", "ZoobotEstimator", "mergernet.estimators.parametric", "ParametricEstimator", "mergernet.jobs", "mergernet.jobs.j001", "Job", "mergernet.jobs.j002", "Job", "mergernet.jobs.j003", "Job", "mergernet.jobs.j004", "Job", "mergernet.jobs.j005", "Job", "mergernet.model", "mergernet.model.automl", "mergernet.model.automl.optuna_train", "mergernet.model.baseline", "mergernet.model.baseline.finetune_train", "mergernet.model.callbacks", "DeltaStopping", "MWandbCallback", "MyWandbCallback", "PruneCallback", "SaveBestTrialCallback", "mergernet.model.inference", "Predictor", "mergernet.model.utils", "mergernet.model.utils.get_conv_arch", "mergernet.model.utils.history_to_dataframe", "mergernet.model.utils.load_model", "mergernet.model.utils.set_trainable_state", "mergernet.model.utils.setup_seeds", "mergernet.services", "mergernet.services.github", "GithubService", "mergernet.services.google", "GDrive", "mergernet.services.imaging", "ImagingService", "mergernet.services.legacy", "LegacyService", "mergernet.services.sciserver", "SciServer", "mergernet.services.sdss", "SloanService", "mergernet.services.splus", "ImageType", "SplusService", "mergernet.services.splus.update_authorization", "mergernet.services.tap", "TapService", "mergernet.services.tensorboard", "TensorboardService", "mergernet.services.utils", "mergernet.services.utils.append_query_params", "mergernet.services.utils.batch_download_file", "mergernet.services.utils.download_file", "mergernet.services.utils.parallel_function_executor", "mergernet.visualization", "mergernet.visualization.plot", "Serie", "mergernet.visualization.plot.color_color", "mergernet.visualization.plot.conf_matrix", "mergernet.visualization.plot.data_distribution", "mergernet.visualization.plot.mag_class_distribution", "mergernet.visualization.plot.object_position", "mergernet.visualization.plot.roc", "mergernet.visualization.plot.train_metrics", "Experiments", "Welcome to mergernet\u2019s documentation!", "API Reference"], "terms": {"modul": [0, 32, 33, 59, 73, 84, 95, 114, 127, 140, 151], "function": [2, 13, 15, 33, 38, 51, 60, 61, 75, 96, 97, 98, 101, 102, 103, 104, 105, 108, 127, 129, 130, 135, 141], "class": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 141, 142, 148], "mergernet": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 34, 36, 37, 39, 40, 41, 45, 46, 48, 49, 50, 58, 60, 62, 75, 77, 78, 79, 81, 83, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 107, 116, 118, 120, 122, 124, 126, 128, 129, 132, 134, 142, 150], "core": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 60, 86, 88, 90, 92, 94, 151], "sourc": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 81, 83, 86, 88, 90, 92, 94, 97, 99, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 116, 118, 120, 122, 124, 126, 128, 129, 130, 132, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149], "base": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 34, 36, 37, 39, 40, 41, 45, 46, 48, 49, 50, 58, 60, 62, 75, 77, 78, 79, 81, 83, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 107, 116, 118, 120, 122, 124, 126, 128, 129, 132, 134, 142], "object": [3, 9, 10, 11, 16, 17, 18, 24, 25, 30, 34, 36, 37, 39, 40, 41, 45, 46, 48, 49, 50, 58, 60, 62, 75, 77, 78, 79, 81, 83, 86, 88, 90, 92, 94, 107, 116, 118, 120, 122, 124, 126, 129, 132, 134, 142], "thi": [3, 11, 33, 34, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 127, 129, 130], "store": [3, 60, 86, 88, 90, 92, 94, 103, 122], "all": [3, 11, 25, 28, 33, 34, 37, 41, 60, 61, 86, 88, 90, 92, 94, 103, 129, 148], "relev": [3, 11, 86, 88, 90, 92, 94], "inform": 3, "an": [3, 30, 41, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "which": [3, 33, 34, 41, 60, 103], "can": [3, 33, 86, 88, 90, 92, 94, 103, 129, 130, 148], "access": [3, 11, 16, 17, 150], "from": [3, 26, 34, 41, 60, 86, 88, 90, 92, 94, 103], "anywher": 3, "applic": 3, "": [3, 11, 17, 24, 37, 41, 101, 102, 103, 104, 105, 128, 129, 130], "implement": [3, 17, 41], "singleton": [3, 17], "pattern": 3, "The": [3, 4, 11, 16, 22, 23, 24, 25, 28, 30, 33, 34, 60, 75, 86, 88, 90, 92, 94, 103, 122, 129, 130, 148], "ar": [3, 28, 34, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 122, 129], "track": 3, "us": [3, 11, 17, 33, 34, 41, 42, 43, 60, 90, 102, 103, 127, 129], "two": [3, 34, 60, 103], "valu": [3, 6, 7, 8, 9, 10, 11, 12, 22, 34, 41, 60, 101, 102, 103, 104, 105, 129, 148], "exp_id": [3, 86, 88, 90, 92, 94, 111], "run_id": [3, 111], "first": [3, 17, 34], "i": [3, 33, 34, 42, 43, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 129, 148], "human": [3, 41], "readabl": 3, "integ": [3, 101, 102, 103, 104, 105], "set": [3, 11, 41, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "user": [3, 86, 88, 90, 92, 94], "relat": 3, "task": [3, 33, 60, 86, 88, 90, 92, 94], "specifi": [3, 11, 34, 60, 86, 88, 90, 92, 94], "entrypoint": 3, "file": [3, 26, 34, 60, 86, 88, 90, 92, 94, 122, 126, 129], "And": 3, "second": 3, "auto": [3, 103], "gener": [3, 33, 34, 45, 86, 88, 90, 92, 94, 103, 129], "hex": 3, "token": [3, 129, 130], "differ": [3, 11], "re": 3, "run": [3, 60, 83, 86, 88, 90, 92, 94, 99, 101, 102, 103, 104, 105, 126], "same": [3, 23, 60, 86, 88, 90, 92, 94, 103, 122, 129], "attribut": [3, 20, 34, 37, 49, 75, 77, 79, 81, 83, 86, 88, 90, 92, 94, 103, 118, 128], "tracer": [3, 86, 88, 90, 92, 94], "context": [3, 86, 88, 90, 92, 94], "manag": [3, 86, 88, 90, 92, 94], "creat": [3, 11, 34, 41, 60, 85, 86, 88, 90, 92, 94, 103], "wandb": [3, 86, 88, 90, 92, 94, 103], "project": [3, 86, 88, 90, 92, 94], "paramet": [3, 4, 11, 16, 22, 23, 24, 25, 26, 28, 30, 34, 41, 42, 43, 60, 75, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 122, 129, 130, 148], "config": [3, 34, 75, 77, 81, 83, 86, 88, 90, 92, 94], "dict": [3, 6, 7, 8, 10, 11, 12, 22, 34, 46, 58, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 107, 110, 116, 126, 129, 136, 139, 146], "configur": [3, 14, 34, 36, 37, 86, 88, 90, 92, 94], "job_typ": [3, 86, 88, 90, 92, 94], "str": [3, 9, 11, 16, 18, 23, 24, 25, 26, 27, 29, 30, 31, 34, 39, 40, 41, 58, 60, 75, 77, 81, 83, 86, 88, 90, 92, 94, 97, 99, 103, 104, 105, 107, 109, 111, 112, 116, 118, 120, 122, 126, 129, 132, 134, 136, 137, 138, 139, 144, 146, 147], "job": [3, 151], "type": [3, 9, 11, 16, 17, 22, 24, 25, 26, 28, 30, 34, 41, 42, 43, 58, 60, 75, 86, 88, 90, 92, 94, 103, 128, 129, 130], "name": [3, 9, 11, 24, 60, 86, 88, 90, 92, 94, 103, 107, 111, 134], "tag": [3, 86, 88, 90, 92, 94], "list": [3, 11, 24, 25, 28, 34, 39, 40, 41, 46, 60, 75, 77, 81, 83, 86, 88, 90, 92, 94, 99, 103, 107, 120, 122, 126, 129, 132, 137, 148], "init_wandb": [3, 86, 88, 90, 92, 94], "_post_run": [3, 86, 88, 90, 92, 94], "post": [3, 86, 88, 90, 92, 94], "automat": [3, 86, 88, 90, 92, 94, 103], "perform": [3, 30, 33, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 127, 129], "when": [3, 11, 86, 88, 90, 92, 94, 103], "call": [3, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 130], "includ": [3, 60, 86, 88, 90, 92, 94, 148], "upload": [3, 86, 88, 90, 92, 94, 107], "regist": [3, 11, 86, 88, 90, 92, 94], "artifact": [3, 86, 88, 90, 92, 94], "upload_registered_artifact": [3, 86, 88, 90, 92, 94], "_pre_run": [3, 86, 88, 90, 92, 94], "pre": [3, 86, 88, 90, 92, 94], "clear": [3, 11, 86, 88, 90, 92, 94], "log": [3, 9, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "setup": [3, 86, 88, 90, 92, 94], "global": [3, 86, 88, 90, 92, 94], "_setup_experiment_attribut": [3, 86, 88, 90, 92, 94], "identifi": [3, 11, 86, 88, 90, 92, 94], "system": [3, 86, 88, 90, 92, 94], "need": [3, 26, 86, 88, 90, 92, 94, 103, 130], "e": [3, 34, 86, 88, 90, 92, 94, 129], "g": [3, 34, 86, 88, 90, 92, 94, 129], "dataset": [3, 4, 36, 37, 59, 60, 86, 88, 91, 94, 97, 99], "model": [3, 4, 33, 75, 77, 81, 83, 86, 88, 90, 91, 92, 94, 101, 102, 103, 104, 105, 107, 148, 151], "predict": [3, 4, 75, 77, 81, 83, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 107, 148], "classmethod": [3, 16, 86, 88, 90, 92, 94], "download_file_gd": [3, 86, 88, 90, 92, 94], "fname": [3, 86, 88, 90, 92, 94], "option": [3, 6, 7, 8, 9, 10, 11, 12, 34, 41, 42, 43, 60, 81, 86, 88, 90, 92, 94, 97, 99, 102, 103, 107, 110, 116, 118, 120, 122, 126, 129, 137, 138, 144, 146, 147], "int": [3, 9, 12, 34, 46, 48, 58, 60, 81, 86, 88, 90, 92, 94, 97, 102, 103, 104, 111, 116, 120, 122, 126, 129, 132, 137, 139, 146, 148], "none": [3, 6, 7, 8, 9, 10, 11, 12, 19, 34, 49, 52, 53, 54, 56, 60, 66, 81, 86, 88, 90, 92, 94, 97, 99, 101, 102, 103, 104, 105, 107, 116, 118, 120, 122, 126, 129, 137, 138, 143, 144, 145, 146, 147, 148, 149], "share": [3, 86, 88, 90, 92, 94], "bool": [3, 4, 6, 7, 8, 9, 10, 12, 27, 29, 34, 41, 60, 62, 75, 77, 81, 83, 86, 88, 90, 92, 94, 103, 112, 116, 118, 126, 129, 132, 137, 138, 144], "fals": [3, 6, 7, 8, 9, 10, 12, 34, 60, 75, 77, 81, 83, 86, 88, 90, 92, 94, 103, 116, 126, 129, 132, 137, 138, 142, 143, 144], "download": [3, 34, 75, 77, 81, 83, 86, 88, 90, 92, 94, 116, 122, 127, 129], "googl": [3, 4, 86, 88, 90, 92, 94, 118], "drive": [3, 4, 86, 88, 90, 92, 94], "insid": [3, 86, 88, 90, 92, 94], "gd_artifact_path": [3, 86, 88, 90, 92, 94], "default": [3, 11, 27, 29, 37, 86, 88, 90, 92, 94, 103, 129], "current": [3, 75, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "id": [3, 86, 88, 90, 92, 94], "onli": [3, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 129], "folder": [3, 34, 60, 86, 88, 90, 92, 94], "finish_wandb": [3, 86, 88, 90, 92, 94], "close": [3, 86, 88, 90, 92, 94], "connect": [3, 86, 88, 90, 92, 94], "register_artifact": [3, 86, 88, 90, 92, 94], "servic": [3, 86, 88, 90, 92, 94, 116, 118, 120, 122, 124, 126, 128, 129, 132, 134, 151], "correspond": [3, 22, 60, 86, 88, 90, 92, 94], "end": [3, 18, 25, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "filenam": [3, 34, 75, 77, 81, 83, 86, 88, 90, 92, 94, 143, 145, 148, 149], "one": [3, 86, 88, 90, 92, 94, 103], "gdrive": [3, 86, 88, 90, 92, 94], "github": [3, 4, 61, 86, 88, 90, 92, 94, 116], "both": [3, 86, 88, 90, 92, 94, 103], "defin": [3, 33, 86, 88, 90, 92, 94, 103, 122], "abstract": [3, 33, 34, 39, 77, 86, 88, 90, 92, 94, 120], "method": [3, 11, 17, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 127, 129], "execut": [3, 86, 88, 90, 92, 94, 129], "upload_file_gd": [3, 86, 88, 90, 92, 94], "data": [3, 29, 34, 36, 37, 39, 40, 41, 45, 46, 48, 49, 50, 58, 60, 62, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 116, 151], "ani": [3, 4, 6, 7, 9, 11, 22, 30, 60, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 129, 139], "content": [3, 86, 88, 90, 92, 94, 116], "If": [3, 41, 60, 86, 88, 90, 92, 94, 103, 129, 148], "consid": [3, 86, 88, 90, 92, 94], "local_artifact_path": [3, 86, 88, 90, 92, 94], "json": [3, 86, 88, 90, 92, 94], "serializ": [3, 86, 88, 90, 92, 94], "python": [3, 86, 88, 90, 92, 94, 103], "byte": [3, 86, 88, 90, 92, 94], "_exp_creat": [3, 86, 88, 90, 92, 94], "flag": [3, 86, 88, 90, 92, 94], "wa": [3, 86, 88, 90, 92, 94, 129], "start": [3, 18, 75, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "_registered_artifact": [3, 86, 88, 90, 92, 94], "exp_nam": [3, 86, 88, 90, 92, 94], "exp_": [3, 86, 88, 90, 92, 94], "gd_exp_path": [3, 86, 88, 90, 92, 94], "path": [3, 16, 25, 26, 27, 29, 31, 34, 39, 40, 41, 58, 60, 62, 81, 86, 88, 90, 92, 94, 116, 118, 120, 122, 126, 129, 132, 134, 137, 138, 146], "where": [3, 42, 43, 60, 86, 88, 90, 92, 94, 103, 122, 129, 148], "gd_shared_path": [3, 86, 88, 90, 92, 94], "extern": [3, 86, 88, 90, 92, 94], "local_exp_path": [3, 86, 88, 90, 92, 94], "local": [3, 26, 34, 86, 88, 90, 92, 94, 118], "environ": [3, 86, 88, 90, 92, 94, 129], "output": [3, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105, 129], "local_shared_path": [3, 34, 86, 88, 90, 92, 94], "experiemnt": [3, 86, 88, 90, 92, 94], "note": [3, 86, 88, 90, 92, 94, 101, 102, 103, 104, 105], "save_histori": 4, "true": [4, 27, 29, 34, 41, 60, 62, 75, 77, 81, 83, 103, 129, 148], "save_test_pr": 4, "save_dataset_config": 4, "save_model": [4, 103], "tf": [4, 34, 75, 101, 102, 103, 104, 105], "kera": [4, 75, 101, 102, 103, 104, 105], "backup": 4, "instanc": [4, 11], "train": [4, 11, 34, 75, 77, 81, 83, 89, 92, 101, 102, 103, 104, 105], "histori": [4, 75, 77, 83, 103, 110], "must": [4, 60, 122, 129], "save": [4, 60, 103, 122, 129, 146, 147], "test": [4, 34, 85, 86, 101, 102, 103, 104, 105], "dataset_config": [4, 34, 36, 37], "tensorflow": 4, "hp": [6, 7, 8, 10, 11, 12, 97, 99], "hyperparamet": [6, 7, 8, 11, 12], "clear_last_valu": [6, 7, 8, 10, 12], "static": [6, 7, 8, 9, 10, 12, 34, 46, 118, 124], "from_dict": [6, 7, 8, 10, 12], "param": [6, 7, 8, 10, 12, 36, 101, 102, 103, 104, 105, 129, 139, 148], "set_attr": [6, 7, 8, 10, 12], "kei": [6, 7, 8, 10, 11, 12, 22, 34, 101, 102, 103, 104, 105], "set_trial": [6, 7, 8, 10, 11, 12], "trial": [6, 7, 8, 10, 11, 12, 75], "frozentri": [6, 7, 8, 10, 11, 12], "suggest": [6, 7, 8, 10, 11, 12], "to_dict": [6, 7, 8, 10, 12], "show_nam": [6, 7, 8, 10, 12], "float": [8, 9, 24, 41, 42, 43, 46, 48, 58, 60, 62, 75, 77, 81, 83, 102, 103, 120, 122, 126, 129, 146], "cat": 9, "choic": [9, 41], "sequenc": [9, 11, 126, 139, 144], "categoricalhyperparamet": 9, "const": 9, "constanthyperparamet": [9, 11], "num": 9, "low": [9, 41], "union": [9, 11, 16, 24, 25, 26, 27, 29, 31, 39, 40, 41, 60, 75, 77, 81, 83, 116, 118, 126, 129, 132, 134, 137, 138, 146], "high": [9, 33, 34], "step": [9, 103], "dtype": 9, "floathyperparamet": 9, "inthyperparamet": 9, "repres": [11, 41, 103, 128], "handl": 11, "arg": [11, 21, 75], "factori": 11, "add": 11, "pars": 11, "dictionari": [11, 22], "arrai": [11, 19, 24, 26, 41, 60, 103], "like": [11, 60], "arrar": 11, "ad": [11, 60], "clear_values_dict": 11, "last_valu": 11, "properti": [11, 20, 75, 77, 81, 83], "condit": 11, "get": [11, 34, 118, 129], "its": [11, 60], "For": [11, 101, 102, 103, 104, 105], "than": [11, 60], "optuna": [11, 75, 89, 90], "seggest": 11, "api": [11, 151], "hyperparam": 11, "optuan": 11, "return": [11, 16, 17, 22, 24, 25, 26, 28, 30, 34, 41, 42, 43, 60, 75, 101, 102, 103, 104, 105, 129, 130], "wasn": 11, "t": [11, 103], "found": [11, 34], "to_values_dict": 11, "represent": [11, 33, 34], "last": [11, 101, 102, 103, 104, 105], "root": 14, "logger": 14, "util": [16, 17, 18, 20, 60], "hold": 16, "cach": 16, "version": 16, "panda": 16, "datafram": [16, 27, 29, 34, 49, 60, 110, 126, 146], "memori": 16, "later": [16, 103], "load": [16, 26, 33], "pd": 16, "_cach": 16, "thread": [17, 129], "safe": 17, "__new__": [17, 20], "kwarg": [17, 20, 60, 75, 120, 122, 126, 129], "mro": 17, "resolut": 17, "order": [17, 41, 60, 103], "_instanc": 17, "_lock": [17, 129], "allocate_lock": 17, "unlock": 17, "_thread": 17, "lock": [17, 129], "synchron": 17, "dure": [17, 41, 101, 102, 103, 104, 105], "_format_tim": 18, "dt": 18, "timedelta": 18, "durat": 18, "prefix": [19, 25, 101, 102, 103, 104, 105], "delet": 20, "descriptor": 20, "chang": [20, 60, 101, 102, 103, 104, 105], "getter": 20, "setter": 20, "fdel": 20, "fget": 20, "fset": 20, "origin": [21, 61], "new": [21, 60], "d": [22, 34], "search": [22, 151], "msg": 23, "sep": 23, "print": [23, 60], "messag": 23, "rule": [23, 33], "bellow": 23, "width": [23, 120, 122, 126], "string": [23, 60, 103, 129], "charact": [23, 41], "ra": [24, 58, 120, 122, 126, 129, 147], "ndarrai": [24, 26, 34, 39, 40, 41, 42, 43, 48, 49, 60, 62, 81, 103, 126], "dec": [24, 58, 120, 122, 126, 129, 147], "receiv": [24, 103, 129], "angular": 24, "posit": 24, "iau2000": [24, 60], "right": [24, 122, 129], "ascens": [24, 122, 129], "declin": [24, 122, 129], "187": 24, "70592": 24, "12": [24, 146, 147], "39112": 24, "j123049": [24, 25], "42": [24, 25, 129], "122328": [24, 25], "03": [24, 25], "format": [24, 103], "iau": 24, "iaunam": [25, 34, 60], "suffix": [25, 60], "calcul": [25, 102, 103], "nest": 25, "given": 25, "prepend": [25, 103], "begin": [25, 101, 102, 103, 104, 105], "append": 25, "iaunames_relative_path": 25, "png": [25, 26, 75, 77, 81, 83, 129], "j123": 25, "rel": [25, 143], "imag": [26, 34, 37, 39, 40, 41, 60, 62, 89, 90, 103, 120, 127, 128, 129], "storag": 26, "numpi": [26, 41, 42, 43], "support": 26, "sever": 26, "inclu": 26, "jpg": [26, 126], "npy": 26, "npz": 26, "fit": [26, 101, 102, 103, 104, 105, 127, 128, 129], "pathlib": 26, "desir": [26, 122], "convert": [26, 103], "ref": 28, "comp": 28, "comput": [28, 60, 103, 148], "element": [28, 60], "refer": [28, 151], "comparison": 28, "A": [28, 34, 37, 60, 101, 102, 103, 104, 105, 129], "contain": [28, 34, 60, 103], "obj": 30, "cast": 30, "depend": 30, "level": [33, 34, 68], "previous": 33, "tfrecord": 33, "main": 33, "develop": 33, "process": [33, 129], "deep": 33, "learn": 33, "other": [33, 34, 103], "well": 33, "who": 33, "complementari": 33, "io": 34, "oper": 34, "prepar": 34, "split": [34, 45], "datasetconfig": [34, 37], "databas": [34, 127, 129], "registri": [34, 37, 75, 77, 81, 83], "_create_dataset_t": 34, "scan": 34, "tabl": [34, 48, 49, 60, 103], "csv": [34, 129], "ha": [34, 103], "_discretize_label": 34, "y": [34, 42, 43, 46, 52, 53, 54, 56, 103], "find": 34, "ocurr": 34, "match": [34, 48, 49, 50], "label_map": [34, 107, 146], "replac": [34, 75, 77, 81, 83, 126, 129, 137, 138], "respect": 34, "np": 34, "_transform_imag": 34, "compute_class_weight": 34, "concat_fold_column": 34, "df": [34, 146], "fname_column": 34, "class_column": 34, "r_column": 34, "n_split": [34, 46], "5": [34, 37, 69, 81, 147], "bin": [34, 60], "3": [34, 41, 60, 69, 91, 92, 129, 132], "check": [34, 60, 129], "destin": 34, "exist": [34, 118, 129], "miss": [34, 103], "web": 34, "resourc": 34, "get_x": 34, "get_x_by_fold": 34, "fold": 34, "kind": 34, "get_fold": 34, "tupl": [34, 48, 60, 75, 77, 81, 83, 103, 109, 122, 126, 146], "datasetv2": 34, "select": 34, "retrun": 34, "secound": 34, "get_images_path": 34, "get_preds_dataset": 34, "get_tabl": 34, "is_dataset_download": 34, "experi": [34, 85, 86, 88, 90, 91, 92, 94, 151], "dir": 34, "otherwis": [34, 129], "prepare_data": 34, "batch_siz": 34, "64": 34, "buffer_s": 34, "1000": 34, "datasetregistri": 34, "bin_legacy_north_rgb_128": [37, 90, 92], "binari": [37, 89, 90, 103], "merger": [37, 89, 90], "non": [37, 42, 43, 89, 90], "legaci": [37, 89, 90, 122], "128x128": 37, "rgb": [37, 41, 63, 64, 89, 90, 103, 122, 127, 129], "north": [37, 89, 90], "sky": [37, 41], "pixscal": 37, "0": [37, 41, 42, 60, 62, 75, 77, 81, 83, 101, 102, 103, 104, 105, 120, 122, 126, 129, 147, 148], "55": [37, 120, 122, 126], "arcsec": 37, "pixel": [37, 41, 42, 43, 129], "bin_sdss_128": 37, "sdss": [37, 58, 126], "blind_splus_gal80_ls10_rgb_128": [37, 91, 92], "plu": [37, 128, 129, 130], "blind": 37, "sampl": [37, 60, 147], "13": 37, "r_auto": 37, "17": 37, "l": 37, "10": [37, 60], "earli": 37, "grz": 37, "blind_splus_lupton_128": 37, "lupton": [37, 41, 127, 128, 129], "blind_splus_lupton_150": 37, "150x150": 37, "blind_splus_trilogy_128": 37, "trilogi": [37, 62, 127, 128, 129], "blind_splus_trilogy_150": 37, "darg_no_inspect": 37, "mesd_legacy_128": 37, "mesd": 37, "survei": [37, 122], "mesd_sdss_128": 37, "abc": [39, 77, 120], "batch_transform": [39, 40, 41], "save_path": [39, 40, 41, 58, 120, 122, 126, 129, 132, 137, 138], "transform": [39, 40, 41, 42, 43], "_abc_impl": [39, 40, 41, 75, 77, 81, 83, 120, 122], "_abc_data": [39, 40, 41, 75, 77, 81, 83, 120, 122], "imagetransform": [40, 41], "img": [40, 41, 103], "interpret": 41, "multi": [41, 129], "band": [41, 126, 127, 129], "follow": [41, 42, 43, 60], "comment": 41, "2004": 41, "preserv": 41, "colour": 41, "rescal": [41, 42, 43], "1": [41, 42, 43, 48, 60, 103, 129, 146, 147], "linearli": 41, "scale": [41, 120, 122, 126], "each": [41, 101, 102, 103, 104, 105, 148], "have": [41, 42, 43, 122, 129], "good": 41, "spread": 41, "subject": 41, "2": [41, 60, 62, 101, 102, 103, 104, 105, 129, 137, 139], "nonlinear": 41, "total": 41, "intens": 41, "arcsinh": [41, 42, 43], "lie": 41, "between": 41, "mn": 41, "mx": 41, "4": [41, 58, 126, 129], "clip": 41, "desatur": 41, "signal": 41, "nois": [41, 129], "avoid": 41, "speckl": 41, "partial": 41, "shape": [41, 148], "h": 41, "w": 41, "c": 41, "dim": 41, "soften": 41, "factor": 41, "min": [41, 103], "befor": [41, 129, 130], "max": [41, 103], "reduc": 41, "satur": [41, 129], "n": [41, 69, 101, 102, 103, 104, 105, 148], "desaturate_factor": 41, "control": 41, "proport": 41, "arai": 41, "x": [42, 43, 46, 52, 53, 54, 56, 70, 103], "gain": [42, 43], "appli": [42, 43, 103], "linear": [42, 43], "map": [42, 43, 129], "input": [42, 43, 60, 103], "matrix": [42, 43], "telescop": [42, 43], "view": [42, 43], "textrm": [42, 43], "alpha": [42, 43, 147], "frac": 43, "sqrt": 43, "kfold": [45, 46], "distribut": [45, 46, 60], "compute_max_bin": 46, "n_class": [46, 55, 148], "split_al": 46, "split_id": 46, "table1": 48, "xtabl": 48, "table2": 48, "radiu": [48, 126], "pair_match": 48, "nthneighbor": 48, "uniqu": 48, "distanc": 49, "primary_idx": 49, "secondary_idx": 49, "get_coord": 50, "to_df": 50, "make_trilogy_fit": 58, "source_dict": 58, "r_path": 58, "g_path": 58, "b_path": 58, "trilogy_fits_to_png": 58, "r_fit": 58, "g_fit": 58, "b_fit": 58, "sky_siz": 58, "70": 58, "fig_siz": 58, "128": [58, 129], "sanit": 60, "tool": 60, "visual": [60, 103, 142, 151], "size": [60, 129, 147], "stamp": [60, 122], "drop": 60, "corrupt": 60, "after": 60, "inspect": 60, "remov": 60, "row": [60, 103], "without": 60, "images_fold": 60, "check_imag": 60, "imeg": 60, "drop_images_by_files": 60, "threshold": 60, "lower": 60, "cutoff": 60, "drop_images_by_iaunam": 60, "filesize_histogram": 60, "plot": [60, 75, 77, 81, 83, 142], "histogram": [60, 103], "number": [60, 103, 129, 148], "argument": [60, 101, 102, 103, 104, 105, 129], "pass": [60, 101, 102, 103, 104, 105, 129], "directli": 60, "plt": 60, "hist": 60, "get_filesize_distribut": 60, "files": 60, "get_iauname_by_files": 60, "upper": 60, "filter": 60, "iaunaem": 60, "temp": 60, "dry_run": 60, "follw": 60, "kb": 60, "_sanit": 60, "dry": 60, "mode": [60, 101, 102, 103, 104, 105], "made": 60, "just": 60, "would": 60, "instead": [60, 103, 129], "kilobyt": 60, "program": 61, "credit": 61, "author": [61, 129, 130], "dan": 61, "coe": 61, "http": [61, 127, 129], "www": 61, "stsci": 61, "edu": 61, "dcoe": 61, "intro": 61, "html": 61, "modif": 61, "gustavo": 61, "b": [61, 129], "o": 61, "schwarz": 61, "com": 61, "schwarzam": 61, "color": [62, 127], "noiselum": 62, "15": [62, 75, 77, 81, 83, 129], "satperc": 62, "colorsatfac": 62, "inplac": 62, "get_arrai": 62, "savefig": 62, "k": [64, 65, 71], "m": 66, "m_min": 66, "m_max": 66, "stampsrgb": 67, "unsatperc": 67, "y1": 68, "datasort": 69, "n_sigma": 69, "pp": 72, "estim": [75, 78, 79, 81, 83, 151], "automl": [75, 90], "_object": 75, "optim": [75, 77, 81, 83], "oputna": 75, "metric": [75, 77, 81, 83, 101, 102, 103, 104, 105], "build": [75, 77, 81, 83, 103], "compile_model": [75, 77, 81, 83], "tf_model": [75, 77, 81, 83], "estimatorconfig": [75, 77, 79, 81, 83], "get_conv_arch": [75, 77, 81, 83], "pretrained_arch": [75, 77, 81, 83, 109], "callabl": [75, 77, 81, 83, 103, 109, 130, 139], "get_dataaug_block": [75, 77, 81, 83], "flip_horizont": [75, 77, 81, 83], "flip_vert": [75, 77, 81, 83], "rotat": [75, 77, 81, 83], "08": [75, 77, 81, 83], "zoom": [75, 77, 81, 83], "set_train": [75, 77, 81, 83], "layer": [75, 77, 81, 83, 103, 112], "trainabl": [75, 77, 81, 83, 112], "best": [75, 91, 92, 103, 145, 146, 149], "estimatorregistri": [75, 77, 81, 83], "freeze_conv": [77, 83], "run_nam": [77, 83, 99], "zoobot_greyscal": 79, "zoobot_rgb": 79, "decal": 81, "_prepare_dataset": 81, "include_top": 81, "cnn_represent": 81, "rebuild": 81, "pca": 81, "featur": 81, "n_compon": 81, "n_sampl": 81, "parametr": [83, 90], "callback": [83, 99, 101, 102, 103, 104, 105], "purpos": [85, 86], "j001": 86, "j002": 88, "finetun": [89, 90], "classif": [89, 90, 103], "j003": 90, "resnet50v2": 90, "evalu": [91, 92, 101, 102, 103, 104, 105], "j004": 92, "j005": 94, "train_func": 97, "hyperparameterset": [97, 99], "n_trial": 97, "pruner": 97, "hyperband": 97, "objective_metr": 97, "val_loss": [97, 103], "objective_direct": 97, "minim": [97, 103], "resume_hash": 97, "_implements_predict_batch_hook": [101, 102, 103, 104, 105], "determin": [101, 102, 103, 104, 105], "should": [101, 102, 103, 104, 105, 122], "batch": [101, 102, 103, 104, 105, 127, 129], "_implements_test_batch_hook": [101, 102, 103, 104, 105], "_implements_train_batch_hook": [101, 102, 103, 104, 105], "on_batch_begin": [101, 102, 103, 104, 105], "backward": [101, 102, 103, 104, 105], "compat": [101, 102, 103, 104, 105], "alia": [101, 102, 103, 104, 105], "on_train_batch_begin": [101, 102, 103, 104, 105], "on_batch_end": [101, 102, 103, 104, 105], "on_train_batch_end": [101, 102, 103, 104, 105], "on_epoch_begin": [101, 102, 103, 104, 105], "epoch": [101, 102, 103, 104, 105], "subclass": [101, 102, 103, 104, 105], "overrid": [101, 102, 103, 104, 105], "action": [101, 102, 103, 104, 105], "index": [101, 102, 103, 104, 105, 151], "mai": [101, 102, 103, 104, 105], "futur": [101, 102, 103, 104, 105], "on_epoch_end": [101, 102, 103, 104, 105], "result": [101, 102, 103, 104, 105], "valid": [101, 102, 103, 104, 105], "val_": [101, 102, 103, 104, 105], "exampl": [101, 102, 104, 105, 148], "loss": [101, 102, 103, 104, 105], "accuraci": [101, 102, 103, 104, 105], "7": [101, 102, 103, 104, 105], "on_predict_batch_begin": [101, 102, 103, 104, 105], "steps_per_execut": [101, 102, 103, 104, 105], "compil": [101, 102, 103, 104, 105], "everi": [101, 102, 103, 104, 105], "within": [101, 102, 103, 104, 105], "on_predict_batch_end": [101, 102, 103, 104, 105], "aggreg": [101, 102, 103, 104, 105], "up": [101, 102, 103, 104, 105], "until": [101, 102, 103, 104, 105], "on_predict_begin": [101, 102, 103, 104, 105], "on_predict_end": [101, 102, 103, 104, 105], "on_test_batch_begin": [101, 102, 103, 104, 105], "also": [101, 102, 103, 104, 105], "provid": [101, 102, 103, 104, 105], "on_test_batch_end": [101, 102, 103, 104, 105], "on_test_begin": [101, 102, 103, 104, 105], "on_test_end": [101, 102, 103, 104, 105], "on_train_begin": [101, 102, 103, 104, 105], "on_train_end": [101, 102, 103, 104, 105], "set_model": [101, 102, 103, 104, 105], "set_param": [101, 102, 103, 104, 105], "_keras_api_nam": [101, 102, 103, 104, 105], "_keras_api_names_v1": [101, 102, 103, 104, 105], "get_flop": [102, 103], "flop": [102, 103], "gflop": [102, 103], "infer": [102, 103, 107], "It": [102, 103], "v1": [102, 103], "profil": [102, 103], "under": [102, 103], "hood": [102, 103], "wandbcallback": 103, "integr": 103, "collect": 103, "anyth": 103, "keras_model": 103, "summari": 103, "associ": 103, "monitor": 103, "minimum": 103, "gradient": 103, "maxim": 103, "try": 103, "guess": 103, "beat": 103, "previou": 103, "don": 103, "save_graph": 103, "boolean": 103, "graph": 103, "save_weights_onli": 103, "weight": 103, "save_weight": 103, "filepath": 103, "els": 103, "full": [103, 129], "log_weight": 103, "log_gradi": 103, "training_data": 103, "mandatori": [103, 122], "validation_data": 103, "make": 103, "small": 103, "In": 103, "case": 103, "you": [103, 129], "work": 103, "pleas": 103, "input_typ": 103, "output_typ": 103, "correctli": 103, "either": 103, "validate_data": 103, "specif": [103, 148], "validation_step": 103, "how": 103, "mani": 103, "label": [103, 144, 148], "your": 103, "numer": 103, "understand": 103, "multiclass": 103, "classifi": 103, "won": 103, "do": 103, "100": 103, "help": 103, "segmentation_mask": 103, "log_evalu": 103, "see": 103, "validation_index": 103, "validation_row_processor": 103, "output_row_processor": 103, "addit": 103, "detail": 103, "class_color": 103, "segment": 103, "mask": 103, "rang": 103, "log_batch_frequ": 103, "log_best_prefix": 103, "extra": 103, "data_typ": 103, "_tablelinkmixin": 103, "tablelinkmixin": 103, "most": 103, "common": 103, "wai": 103, "obtain": 103, "get_index": 103, "commonli": 103, "ndx": 103, "singl": [103, 122, 127, 129], "slot": 103, "take": 103, "target": 103, "wish": 103, "lambda": 103, "processor": 103, "ignor": 103, "present": 103, "infer_missing_processor": 103, "we": 103, "attempt": 103, "appropri": 103, "log_evaluation_frequ": 103, "frequenc": 103, "so": 103, "effect": 103, "compute_flop": 103, "sequenti": 103, "gigaflop": 103, "unit": [103, 139], "x_train": 103, "y_train": 103, "x_test": 103, "y_test": 103, "_attempt_evaluation_log": 103, "commit": [103, 116], "_build_grad_accumulator_model": 103, "_log_datafram": 103, "_log_gradi": 103, "_log_imag": 103, "num_imag": 103, "36": 103, "_log_weight": 103, "_logits_to_capt": 103, "logit": 103, "_masks_to_pixel": 103, "_save_model": 103, "_save_model_as_artifact": 103, "_encode_cont": 116, "from_byt": 116, "_get_url": [116, 129], "rout": [116, 129], "branch": 116, "remote_path": 116, "dest_path": 116, "get_lastest_job_run": 116, "jobid": 116, "list_dir": 116, "remot": 118, "get_url": [118, 124], "fileid": [118, 124], "is_mount": 118, "move": 118, "from_path": 118, "to_path": 118, "send": [118, 129], "send_dir": 118, "base_path": 118, "_batch_download_rgb": [120, 122], "worker": [120, 122, 126, 129, 132, 137, 139], "_download_rgb": [120, 122], "256": [120, 122, 126, 129], "height": [120, 122, 126], "opt": [120, 122, 126], "batch_cutout": [120, 122], "cutout": [120, 122, 126], "imagingservic": 122, "coordin": 122, "length": 122, "batch_download_fit": 126, "rerun": 126, "camcol": 126, "field": 126, "batch_download_rgb": 126, "crossmatch": 126, "search_typ": 126, "photo": 126, "search_radiu": 126, "02": 126, "chunk_siz": 126, "500": 126, "download_fit": [126, 129], "download_rgb": 126, "get_image_filenam": 126, "dr8objid": 126, "dr7objid": 126, "extens": 126, "basepath": 126, "request": 127, "cloud": [127, 129], "server": [127, 129], "over": [127, 129], "donwload": [127, 129], "fast": 127, "multiprocess": 127, "async": 127, "queri": [127, 129, 132], "natanael": 127, "magalh\u00e3": 127, "cardoso": 127, "net": 127, "splu": [128, 129], "enum": 128, "interact": 129, "usernam": 129, "authent": [129, 130], "splus_us": 129, "variabl": 129, "password": 129, "splus_pass": 129, "_batch_download": 129, "download_funct": 129, "download_arg": 129, "theread": 129, "spawn": 129, "multipl": 129, "parallel": 129, "_download_imag": 129, "url": [129, 136, 137, 138], "_track_tap_job": 129, "batch_image_download": 129, "img_typ": 129, "imagetyp": 129, "posist": 129, "accept": 129, "custom": 129, "degre": 129, "download_lupton_rgb": 129, "download_trilogy_rgb": 129, "download_fits_rgb": 129, "These": 129, "mention": 129, "172": 129, "193": 129, "9": 129, "63": 129, "24": 129, "fig1": 129, "fig2": 129, "fig3": 129, "batch_queri": 129, "sql": 129, "scope": 129, "public": 129, "fmt": 129, "text": 129, "repalac": 129, "locat": 129, "ovewrit": 129, "sava_path": 129, "skip": 129, "privat": 129, "assign": 129, "collabor": 129, "mimi": 129, "r": [129, 146], "r_band": 129, "g_band": 129, "b_band": 129, "stretch": 129, "q": 129, "8": [129, 146], "channel": 129, "formula": 129, "f861": 129, "z": 129, "f515": 129, "f660": 129, "u": 129, "f378": 129, "f395": 129, "f410": 129, "f430": 129, "algorithm": 129, "update_token": 129, "updat": [129, 130], "owner": 129, "f": 130, "decor": 130, "place": 130, "tap": 132, "batch_sync_queri": 132, "join_output": 132, "sync_queri": 132, "tensorboard": 134, "upload_asset": 134, "logdir": 134, "descript": 134, "query_param": 136, "http_client": [137, 138], "session": [137, 138], "extract": 138, "func": 139, "get_seri": 142, "median": 142, "get_std": 142, "has_std": 142, "table_": 143, "xlim": [143, 149], "ylim": [143, 149], "y_true": 144, "y_pred": 144, "one_hot": 144, "train_seri": 145, "test_seri": 145, "blind_seri": 145, "min_rang": 145, "max_rang": 145, "xlabel": [145, 146], "ylabel": [145, 146], "loc": 145, "vline": 145, "n_fold": 146, "n_bin": 146, "color_map": [146, 147], "mag": 146, "count": 146, "titl": [146, 147], "figsiz": [146, 147], "legend_po": 146, "legend_col": 146, "6": 147, "true_seri": 148, "pred_seri": 148, "curv": 148, "zoom_rang": 148, "zoom_po": 148, "show": 148, "seri": 148, "rep": 148, "repetit": 148, "std": 148, "macro": 148, "micro": 148, "plote": 148, "averag": 148, "assert": 148, "len": 148, "mean_seri": 149, "error_seri": 149, "legend_loc": 149, "page": 151}, "objects": {"mergernet": [[0, 0, 0, "-", "core"], [32, 0, 0, "-", "data"], [73, 0, 0, "-", "estimators"], [84, 0, 0, "-", "jobs"], [95, 0, 0, "-", "model"], [114, 0, 0, "-", "services"], [140, 0, 0, "-", "visualization"]], "mergernet.core": [[1, 0, 0, "-", "constants"], [2, 0, 0, "-", "experiment"], [5, 0, 0, "-", "hp"], [13, 0, 0, "-", "logging"], [15, 0, 0, "-", "utils"]], "mergernet.core.experiment": [[3, 1, 1, "", "Experiment"], [4, 4, 1, "", "backup_model"]], "mergernet.core.experiment.Experiment": [[3, 1, 1, "", "Tracer"], [3, 2, 1, "", "_exp_created"], [3, 3, 1, "", "_post_run"], [3, 3, 1, "", "_pre_run"], [3, 2, 1, "", "_registered_artifacts"], [3, 3, 1, "", "_setup_experiment_attributes"], [3, 3, 1, "", "download_file_gd"], [3, 2, 1, "", "exp_id"], [3, 2, 1, "", "exp_name"], [3, 3, 1, "", "finish_wandb"], [3, 2, 1, "", "gd_exp_path"], [3, 2, 1, "", "gd_shared_path"], [3, 3, 1, "", "init_wandb"], [3, 2, 1, "", "local_exp_path"], [3, 2, 1, "", "local_shared_path"], [3, 2, 1, "", "notes"], [3, 3, 1, "", "register_artifact"], [3, 3, 1, "", "run"], [3, 3, 1, "", "upload_file_gd"], [3, 3, 1, "", "upload_registered_artifacts"]], "mergernet.core.hp": [[6, 1, 1, "", "CategoricalHyperParameter"], [7, 1, 1, "", "ConstantHyperParameter"], [8, 1, 1, "", "FloatHyperParameter"], [9, 1, 1, "", "HP"], [10, 1, 1, "", "HyperParameter"], [11, 1, 1, "", "HyperParameterSet"], [12, 1, 1, "", "IntHyperParameter"]], "mergernet.core.hp.CategoricalHyperParameter": [[6, 3, 1, "", "clear_last_value"], [6, 3, 1, "", "from_dict"], [6, 3, 1, "", "set_attr"], [6, 3, 1, "", "set_trial"], [6, 3, 1, "", "suggest"], [6, 3, 1, "", "to_dict"]], "mergernet.core.hp.ConstantHyperParameter": [[7, 3, 1, "", "clear_last_value"], [7, 3, 1, "", "from_dict"], [7, 3, 1, "", "set_attr"], [7, 3, 1, "", "set_trial"], [7, 3, 1, "", "suggest"], [7, 3, 1, "", "to_dict"]], "mergernet.core.hp.FloatHyperParameter": [[8, 3, 1, "", "clear_last_value"], [8, 3, 1, "", "from_dict"], [8, 3, 1, "", "set_attr"], [8, 3, 1, "", "set_trial"], [8, 3, 1, "", "suggest"], [8, 3, 1, "", "to_dict"]], "mergernet.core.hp.HP": [[9, 3, 1, "", "cat"], [9, 3, 1, "", "const"], [9, 3, 1, "", "num"]], "mergernet.core.hp.HyperParameter": [[10, 3, 1, "", "clear_last_value"], [10, 3, 1, "", "from_dict"], [10, 3, 1, "", "set_attr"], [10, 3, 1, "", "set_trial"], [10, 3, 1, "", "suggest"], [10, 3, 1, "", "to_dict"]], "mergernet.core.hp.HyperParameterSet": [[11, 3, 1, "", "add"], [11, 3, 1, "", "clear_values_dict"], [11, 3, 1, "", "get"], [11, 3, 1, "", "set_trial"], [11, 3, 1, "", "to_values_dict"]], "mergernet.core.hp.IntHyperParameter": [[12, 3, 1, "", "clear_last_value"], [12, 3, 1, "", "from_dict"], [12, 3, 1, "", "set_attr"], [12, 3, 1, "", "set_trial"], [12, 3, 1, "", "suggest"], [12, 3, 1, "", "to_dict"]], "mergernet.core.logging": [[14, 4, 1, "", "configure_root_logger"]], "mergernet.core.utils": [[16, 1, 1, "", "CachedDataFrame"], [17, 1, 1, "", "SingletonMeta"], [18, 1, 1, "", "Timming"], [19, 4, 1, "", "array_fallback"], [20, 1, 1, "", "classproperty"], [21, 4, 1, "", "deep_update"], [22, 4, 1, "", "find_by_value"], [23, 4, 1, "", "heading"], [24, 4, 1, "", "iauname"], [25, 4, 1, "", "iauname_relative_path"], [26, 4, 1, "", "load_image"], [27, 4, 1, "", "load_table"], [28, 4, 1, "", "not_in"], [29, 4, 1, "", "save_table"], [30, 4, 1, "", "serialize"], [31, 4, 1, "", "unique_path"]], "mergernet.core.utils.CachedDataFrame": [[16, 2, 1, "", "_cache"], [16, 3, 1, "", "load"]], "mergernet.core.utils.SingletonMeta": [[17, 3, 1, "", "__new__"], [17, 2, 1, "", "_instances"], [17, 2, 1, "", "_lock"], [17, 3, 1, "", "mro"]], "mergernet.core.utils.Timming": [[18, 3, 1, "", "_format_time"], [18, 3, 1, "", "duration"], [18, 3, 1, "", "end"], [18, 3, 1, "", "start"]], "mergernet.core.utils.classproperty": [[20, 3, 1, "", "__new__"], [20, 3, 1, "", "deleter"], [20, 2, 1, "", "fdel"], [20, 2, 1, "", "fget"], [20, 2, 1, "", "fset"], [20, 3, 1, "", "getter"], [20, 3, 1, "", "setter"]], "mergernet.data": [[33, 0, 0, "-", "dataset"], [35, 0, 0, "-", "dataset_config"], [38, 0, 0, "-", "image"], [44, 0, 0, "-", "kfold"], [47, 0, 0, "-", "match"], [51, 0, 0, "-", "preprocessing"], [57, 0, 0, "-", "rgb"], [59, 0, 0, "-", "sanitization"], [61, 0, 0, "-", "trilogy"]], "mergernet.data.dataset": [[34, 1, 1, "", "Dataset"]], "mergernet.data.dataset.Dataset": [[34, 3, 1, "", "_create_dataset_table"], [34, 3, 1, "", "_discretize_label"], [34, 3, 1, "", "_transform_images"], [34, 3, 1, "", "compute_class_weight"], [34, 3, 1, "", "concat_fold_column"], [34, 3, 1, "", "download"], [34, 3, 1, "", "get_X"], [34, 3, 1, "", "get_X_by_fold"], [34, 3, 1, "", "get_fold"], [34, 3, 1, "", "get_images_paths"], [34, 3, 1, "", "get_preds_dataset"], [34, 3, 1, "", "get_table"], [34, 3, 1, "", "is_dataset_downloaded"], [34, 3, 1, "", "prepare_data"], [34, 2, 1, "", "registry"]], "mergernet.data.dataset_config": [[36, 1, 1, "", "DatasetConfig"], [37, 1, 1, "", "DatasetRegistry"]], "mergernet.data.dataset_config.DatasetRegistry": [[37, 2, 1, "", "BIN_LEGACY_NORTH_RGB_128"], [37, 2, 1, "", "BIN_SDSS_128"], [37, 2, 1, "", "BLIND_SPLUS_GAL80_LS10_RGB_128"], [37, 2, 1, "", "BLIND_SPLUS_LUPTON_128"], [37, 2, 1, "", "BLIND_SPLUS_LUPTON_150"], [37, 2, 1, "", "BLIND_SPLUS_TRILOGY_128"], [37, 2, 1, "", "BLIND_SPLUS_TRILOGY_150"], [37, 2, 1, "", "DARG_NO_INSPECTION"], [37, 2, 1, "", "MESD_LEGACY_128"], [37, 2, 1, "", "MESD_SDSS_128"]], "mergernet.data.image": [[39, 1, 1, "", "ImageTransform"], [40, 1, 1, "", "LegacyRGB"], [41, 1, 1, "", "LuptonRGB"], [42, 4, 1, "", "asinh_map"], [43, 4, 1, "", "asinh_map2"]], "mergernet.data.image.ImageTransform": [[39, 2, 1, "", "_abc_impl"], [39, 3, 1, "", "batch_transform"], [39, 3, 1, "", "transform"]], "mergernet.data.image.LegacyRGB": [[40, 2, 1, "", "_abc_impl"], [40, 3, 1, "", "batch_transform"], [40, 3, 1, "", "transform"]], "mergernet.data.image.LuptonRGB": [[41, 2, 1, "", "_abc_impl"], [41, 3, 1, "", "batch_transform"], [41, 3, 1, "", "transform"]], "mergernet.data.kfold": [[45, 1, 1, "", "DistributionKFold"], [46, 1, 1, "", "StratifiedDistributionKFold"]], "mergernet.data.kfold.DistributionKFold": [[45, 3, 1, "", "split"]], "mergernet.data.kfold.StratifiedDistributionKFold": [[46, 3, 1, "", "compute_max_bins"], [46, 3, 1, "", "split_all"], [46, 3, 1, "", "split_ids"]], "mergernet.data.match": [[48, 1, 1, "", "CrossMatch"], [49, 1, 1, "", "CrossMatchResult"], [50, 1, 1, "", "XTable"]], "mergernet.data.match.CrossMatch": [[48, 3, 1, "", "crossmatch"], [48, 3, 1, "", "pair_match"], [48, 3, 1, "", "unique"]], "mergernet.data.match.CrossMatchResult": [[49, 2, 1, "", "distance"], [49, 2, 1, "", "primary_idx"], [49, 2, 1, "", "secondary_idx"], [49, 2, 1, "", "table"]], "mergernet.data.match.XTable": [[50, 3, 1, "", "get_coords"], [50, 3, 1, "", "to_df"]], "mergernet.data.preprocessing": [[52, 4, 1, "", "load_jpg"], [53, 4, 1, "", "load_png"], [54, 4, 1, "", "normalize_rgb"], [55, 4, 1, "", "one_hot_factory"], [56, 4, 1, "", "standardize_rgb"]], "mergernet.data.rgb": [[58, 1, 1, "", "RGB"]], "mergernet.data.rgb.RGB": [[58, 3, 1, "", "make_trilogy_fits"], [58, 3, 1, "", "trilogy_fits_to_png"]], "mergernet.data.sanitization": [[60, 1, 1, "", "DatasetSanitization"]], "mergernet.data.sanitization.DatasetSanitization": [[60, 3, 1, "", "check_images"], [60, 3, 1, "", "drop_images_by_filesize"], [60, 3, 1, "", "drop_images_by_iauname"], [60, 3, 1, "", "filesize_histogram"], [60, 3, 1, "", "get_filesize_distribution"], [60, 3, 1, "", "get_iauname_by_filesize"], [60, 3, 1, "", "sample"], [60, 3, 1, "", "sanitize"]], "mergernet.data.trilogy": [[62, 1, 1, "", "MakeImg"], [63, 4, 1, "", "RGB2im"], [64, 4, 1, "", "adjust_saturation"], [65, 4, 1, "", "da"], [66, 4, 1, "", "get_clip"], [67, 4, 1, "", "get_levels"], [68, 4, 1, "", "imscale"], [69, 4, 1, "", "meanstd"], [70, 4, 1, "", "rms"], [71, 4, 1, "", "satK2m"], [72, 4, 1, "", "setLevel"]], "mergernet.data.trilogy.MakeImg": [[62, 3, 1, "", "color"], [62, 3, 1, "", "get_array"], [62, 3, 1, "", "savefig"]], "mergernet.estimators": [[74, 0, 0, "-", "automl"], [76, 0, 0, "-", "base"], [80, 0, 0, "-", "decals"], [82, 0, 0, "-", "parametric"]], "mergernet.estimators.automl": [[75, 1, 1, "", "OptunaEstimator"]], "mergernet.estimators.automl.OptunaEstimator": [[75, 2, 1, "", "_abc_impl"], [75, 3, 1, "", "_objective"], [75, 3, 1, "", "build"], [75, 3, 1, "", "compile_model"], [75, 3, 1, "", "download"], [75, 3, 1, "", "get_conv_arch"], [75, 3, 1, "", "get_dataaug_block"], [75, 3, 1, "", "plot"], [75, 3, 1, "", "predict"], [75, 2, 1, "", "registry"], [75, 3, 1, "", "set_trainable"], [75, 5, 1, "", "tf_model"], [75, 3, 1, "", "train"]], "mergernet.estimators.base": [[77, 1, 1, "", "Estimator"], [78, 1, 1, "", "EstimatorConfig"], [79, 1, 1, "", "EstimatorRegistry"]], "mergernet.estimators.base.Estimator": [[77, 2, 1, "", "_abc_impl"], [77, 3, 1, "", "build"], [77, 3, 1, "", "compile_model"], [77, 3, 1, "", "download"], [77, 3, 1, "", "get_conv_arch"], [77, 3, 1, "", "get_dataaug_block"], [77, 3, 1, "", "plot"], [77, 3, 1, "", "predict"], [77, 2, 1, "", "registry"], [77, 3, 1, "", "set_trainable"], [77, 5, 1, "", "tf_model"], [77, 3, 1, "", "train"]], "mergernet.estimators.base.EstimatorRegistry": [[79, 2, 1, "", "ZOOBOT_GREYSCALE"], [79, 2, 1, "", "ZOOBOT_RGB"]], "mergernet.estimators.decals": [[81, 1, 1, "", "ZoobotEstimator"]], "mergernet.estimators.decals.ZoobotEstimator": [[81, 2, 1, "", "_abc_impl"], [81, 3, 1, "", "_prepare_dataset"], [81, 3, 1, "", "build"], [81, 3, 1, "", "cnn_representations"], [81, 3, 1, "", "compile_model"], [81, 3, 1, "", "download"], [81, 3, 1, "", "get_conv_arch"], [81, 3, 1, "", "get_dataaug_block"], [81, 3, 1, "", "pca"], [81, 3, 1, "", "plot"], [81, 3, 1, "", "predict"], [81, 2, 1, "", "registry"], [81, 3, 1, "", "set_trainable"], [81, 5, 1, "", "tf_model"], [81, 3, 1, "", "train"]], "mergernet.estimators.parametric": [[83, 1, 1, "", "ParametricEstimator"]], "mergernet.estimators.parametric.ParametricEstimator": [[83, 2, 1, "", "_abc_impl"], [83, 3, 1, "", "build"], [83, 3, 1, "", "compile_model"], [83, 3, 1, "", "download"], [83, 3, 1, "", "get_conv_arch"], [83, 3, 1, "", "get_dataaug_block"], [83, 3, 1, "", "plot"], [83, 3, 1, "", "predict"], [83, 2, 1, "", "registry"], [83, 3, 1, "", "set_trainable"], [83, 5, 1, "", "tf_model"], [83, 3, 1, "", "train"]], "mergernet.jobs": [[85, 0, 0, "-", "j001"], [87, 0, 0, "-", "j002"], [89, 0, 0, "-", "j003"], [91, 0, 0, "-", "j004"], [93, 0, 0, "-", "j005"]], "mergernet.jobs.j001": [[86, 1, 1, "", "Job"]], "mergernet.jobs.j001.Job": [[86, 1, 1, "", "Tracer"], [86, 2, 1, "", "_exp_created"], [86, 3, 1, "", "_post_run"], [86, 3, 1, "", "_pre_run"], [86, 2, 1, "", "_registered_artifacts"], [86, 3, 1, "", "_setup_experiment_attributes"], [86, 3, 1, "", "call"], [86, 3, 1, "", "download_file_gd"], [86, 2, 1, "", "exp_id"], [86, 2, 1, "", "exp_name"], [86, 3, 1, "", "finish_wandb"], [86, 2, 1, "", "gd_exp_path"], [86, 2, 1, "", "gd_shared_path"], [86, 3, 1, "", "init_wandb"], [86, 2, 1, "", "local_exp_path"], [86, 2, 1, "", "local_shared_path"], [86, 2, 1, "", "notes"], [86, 3, 1, "", "register_artifact"], [86, 3, 1, "", "run"], [86, 3, 1, "", "upload_file_gd"], [86, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j002": [[88, 1, 1, "", "Job"]], "mergernet.jobs.j002.Job": [[88, 1, 1, "", "Tracer"], [88, 2, 1, "", "_exp_created"], [88, 3, 1, "", "_post_run"], [88, 3, 1, "", "_pre_run"], [88, 2, 1, "", "_registered_artifacts"], [88, 3, 1, "", "_setup_experiment_attributes"], [88, 3, 1, "", "call"], [88, 3, 1, "", "download_file_gd"], [88, 2, 1, "", "exp_id"], [88, 2, 1, "", "exp_name"], [88, 3, 1, "", "finish_wandb"], [88, 2, 1, "", "gd_exp_path"], [88, 2, 1, "", "gd_shared_path"], [88, 3, 1, "", "init_wandb"], [88, 2, 1, "", "local_exp_path"], [88, 2, 1, "", "local_shared_path"], [88, 2, 1, "", "notes"], [88, 3, 1, "", "register_artifact"], [88, 3, 1, "", "run"], [88, 3, 1, "", "upload_file_gd"], [88, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j003": [[90, 1, 1, "", "Job"]], "mergernet.jobs.j003.Job": [[90, 1, 1, "", "Tracer"], [90, 2, 1, "", "_exp_created"], [90, 3, 1, "", "_post_run"], [90, 3, 1, "", "_pre_run"], [90, 2, 1, "", "_registered_artifacts"], [90, 3, 1, "", "_setup_experiment_attributes"], [90, 3, 1, "", "call"], [90, 3, 1, "", "download_file_gd"], [90, 2, 1, "", "exp_id"], [90, 2, 1, "", "exp_name"], [90, 3, 1, "", "finish_wandb"], [90, 2, 1, "", "gd_exp_path"], [90, 2, 1, "", "gd_shared_path"], [90, 3, 1, "", "init_wandb"], [90, 2, 1, "", "local_exp_path"], [90, 2, 1, "", "local_shared_path"], [90, 2, 1, "", "notes"], [90, 3, 1, "", "register_artifact"], [90, 3, 1, "", "run"], [90, 3, 1, "", "upload_file_gd"], [90, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j004": [[92, 1, 1, "", "Job"]], "mergernet.jobs.j004.Job": [[92, 1, 1, "", "Tracer"], [92, 2, 1, "", "_exp_created"], [92, 3, 1, "", "_post_run"], [92, 3, 1, "", "_pre_run"], [92, 2, 1, "", "_registered_artifacts"], [92, 3, 1, "", "_setup_experiment_attributes"], [92, 3, 1, "", "call"], [92, 3, 1, "", "download_file_gd"], [92, 2, 1, "", "exp_id"], [92, 2, 1, "", "exp_name"], [92, 3, 1, "", "finish_wandb"], [92, 2, 1, "", "gd_exp_path"], [92, 2, 1, "", "gd_shared_path"], [92, 3, 1, "", "init_wandb"], [92, 2, 1, "", "local_exp_path"], [92, 2, 1, "", "local_shared_path"], [92, 2, 1, "", "notes"], [92, 3, 1, "", "register_artifact"], [92, 3, 1, "", "run"], [92, 3, 1, "", "upload_file_gd"], [92, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j005": [[94, 1, 1, "", "Job"]], "mergernet.jobs.j005.Job": [[94, 1, 1, "", "Tracer"], [94, 2, 1, "", "_exp_created"], [94, 3, 1, "", "_post_run"], [94, 3, 1, "", "_pre_run"], [94, 2, 1, "", "_registered_artifacts"], [94, 3, 1, "", "_setup_experiment_attributes"], [94, 3, 1, "", "call"], [94, 3, 1, "", "download_file_gd"], [94, 2, 1, "", "exp_id"], [94, 2, 1, "", "exp_name"], [94, 3, 1, "", "finish_wandb"], [94, 2, 1, "", "gd_exp_path"], [94, 2, 1, "", "gd_shared_path"], [94, 3, 1, "", "init_wandb"], [94, 2, 1, "", "local_exp_path"], [94, 2, 1, "", "local_shared_path"], [94, 2, 1, "", "notes"], [94, 3, 1, "", "register_artifact"], [94, 3, 1, "", "run"], [94, 3, 1, "", "upload_file_gd"], [94, 3, 1, "", "upload_registered_artifacts"]], "mergernet.model": [[96, 0, 0, "-", "automl"], [98, 0, 0, "-", "baseline"], [100, 0, 0, "-", "callbacks"], [106, 0, 0, "-", "inference"], [108, 0, 0, "-", "utils"]], "mergernet.model.automl": [[97, 4, 1, "", "optuna_train"]], "mergernet.model.baseline": [[99, 4, 1, "", "finetune_train"]], "mergernet.model.callbacks": [[101, 1, 1, "", "DeltaStopping"], [102, 1, 1, "", "MWandbCallback"], [103, 1, 1, "", "MyWandbCallback"], [104, 1, 1, "", "PruneCallback"], [105, 1, 1, "", "SaveBestTrialCallback"]], "mergernet.model.callbacks.DeltaStopping": [[101, 3, 1, "", "_implements_predict_batch_hooks"], [101, 3, 1, "", "_implements_test_batch_hooks"], [101, 3, 1, "", "_implements_train_batch_hooks"], [101, 2, 1, "", "_keras_api_names"], [101, 2, 1, "", "_keras_api_names_v1"], [101, 3, 1, "", "on_batch_begin"], [101, 3, 1, "", "on_batch_end"], [101, 3, 1, "", "on_epoch_begin"], [101, 3, 1, "", "on_epoch_end"], [101, 3, 1, "", "on_predict_batch_begin"], [101, 3, 1, "", "on_predict_batch_end"], [101, 3, 1, "", "on_predict_begin"], [101, 3, 1, "", "on_predict_end"], [101, 3, 1, "", "on_test_batch_begin"], [101, 3, 1, "", "on_test_batch_end"], [101, 3, 1, "", "on_test_begin"], [101, 3, 1, "", "on_test_end"], [101, 3, 1, "", "on_train_batch_begin"], [101, 3, 1, "", "on_train_batch_end"], [101, 3, 1, "", "on_train_begin"], [101, 3, 1, "", "on_train_end"], [101, 3, 1, "", "set_model"], [101, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MWandbCallback": [[102, 3, 1, "", "_implements_predict_batch_hooks"], [102, 3, 1, "", "_implements_test_batch_hooks"], [102, 3, 1, "", "_implements_train_batch_hooks"], [102, 2, 1, "", "_keras_api_names"], [102, 2, 1, "", "_keras_api_names_v1"], [102, 3, 1, "", "get_flops"], [102, 3, 1, "", "on_batch_begin"], [102, 3, 1, "", "on_batch_end"], [102, 3, 1, "", "on_epoch_begin"], [102, 3, 1, "", "on_epoch_end"], [102, 3, 1, "", "on_predict_batch_begin"], [102, 3, 1, "", "on_predict_batch_end"], [102, 3, 1, "", "on_predict_begin"], [102, 3, 1, "", "on_predict_end"], [102, 3, 1, "", "on_test_batch_begin"], [102, 3, 1, "", "on_test_batch_end"], [102, 3, 1, "", "on_test_begin"], [102, 3, 1, "", "on_test_end"], [102, 3, 1, "", "on_train_batch_begin"], [102, 3, 1, "", "on_train_batch_end"], [102, 3, 1, "", "on_train_begin"], [102, 3, 1, "", "on_train_end"], [102, 3, 1, "", "set_model"], [102, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MyWandbCallback": [[103, 3, 1, "", "_attempt_evaluation_log"], [103, 3, 1, "", "_build_grad_accumulator_model"], [103, 3, 1, "", "_implements_predict_batch_hooks"], [103, 3, 1, "", "_implements_test_batch_hooks"], [103, 3, 1, "", "_implements_train_batch_hooks"], [103, 2, 1, "", "_keras_api_names"], [103, 2, 1, "", "_keras_api_names_v1"], [103, 3, 1, "", "_log_dataframe"], [103, 3, 1, "", "_log_gradients"], [103, 3, 1, "", "_log_images"], [103, 3, 1, "", "_log_weights"], [103, 3, 1, "", "_logits_to_captions"], [103, 3, 1, "", "_masks_to_pixels"], [103, 3, 1, "", "_save_model"], [103, 3, 1, "", "_save_model_as_artifact"], [103, 3, 1, "", "get_flops"], [103, 3, 1, "", "on_batch_begin"], [103, 3, 1, "", "on_batch_end"], [103, 3, 1, "", "on_epoch_begin"], [103, 3, 1, "", "on_epoch_end"], [103, 3, 1, "", "on_predict_batch_begin"], [103, 3, 1, "", "on_predict_batch_end"], [103, 3, 1, "", "on_predict_begin"], [103, 3, 1, "", "on_predict_end"], [103, 3, 1, "", "on_test_batch_begin"], [103, 3, 1, "", "on_test_batch_end"], [103, 3, 1, "", "on_test_begin"], [103, 3, 1, "", "on_test_end"], [103, 3, 1, "", "on_train_batch_begin"], [103, 3, 1, "", "on_train_batch_end"], [103, 3, 1, "", "on_train_begin"], [103, 3, 1, "", "on_train_end"], [103, 3, 1, "", "set_model"], [103, 3, 1, "", "set_params"]], "mergernet.model.callbacks.PruneCallback": [[104, 3, 1, "", "_implements_predict_batch_hooks"], [104, 3, 1, "", "_implements_test_batch_hooks"], [104, 3, 1, "", "_implements_train_batch_hooks"], [104, 2, 1, "", "_keras_api_names"], [104, 2, 1, "", "_keras_api_names_v1"], [104, 3, 1, "", "on_batch_begin"], [104, 3, 1, "", "on_batch_end"], [104, 3, 1, "", "on_epoch_begin"], [104, 3, 1, "", "on_epoch_end"], [104, 3, 1, "", "on_predict_batch_begin"], [104, 3, 1, "", "on_predict_batch_end"], [104, 3, 1, "", "on_predict_begin"], [104, 3, 1, "", "on_predict_end"], [104, 3, 1, "", "on_test_batch_begin"], [104, 3, 1, "", "on_test_batch_end"], [104, 3, 1, "", "on_test_begin"], [104, 3, 1, "", "on_test_end"], [104, 3, 1, "", "on_train_batch_begin"], [104, 3, 1, "", "on_train_batch_end"], [104, 3, 1, "", "on_train_begin"], [104, 3, 1, "", "on_train_end"], [104, 3, 1, "", "set_model"], [104, 3, 1, "", "set_params"]], "mergernet.model.callbacks.SaveBestTrialCallback": [[105, 3, 1, "", "_implements_predict_batch_hooks"], [105, 3, 1, "", "_implements_test_batch_hooks"], [105, 3, 1, "", "_implements_train_batch_hooks"], [105, 2, 1, "", "_keras_api_names"], [105, 2, 1, "", "_keras_api_names_v1"], [105, 3, 1, "", "on_batch_begin"], [105, 3, 1, "", "on_batch_end"], [105, 3, 1, "", "on_epoch_begin"], [105, 3, 1, "", "on_epoch_end"], [105, 3, 1, "", "on_predict_batch_begin"], [105, 3, 1, "", "on_predict_batch_end"], [105, 3, 1, "", "on_predict_begin"], [105, 3, 1, "", "on_predict_end"], [105, 3, 1, "", "on_test_batch_begin"], [105, 3, 1, "", "on_test_batch_end"], [105, 3, 1, "", "on_test_begin"], [105, 3, 1, "", "on_test_end"], [105, 3, 1, "", "on_train_batch_begin"], [105, 3, 1, "", "on_train_batch_end"], [105, 3, 1, "", "on_train_begin"], [105, 3, 1, "", "on_train_end"], [105, 3, 1, "", "set_model"], [105, 3, 1, "", "set_params"]], "mergernet.model.inference": [[107, 1, 1, "", "Predictor"]], "mergernet.model.inference.Predictor": [[107, 3, 1, "", "predict"], [107, 3, 1, "", "upload"]], "mergernet.model.utils": [[109, 4, 1, "", "get_conv_arch"], [110, 4, 1, "", "history_to_dataframe"], [111, 4, 1, "", "load_model"], [112, 4, 1, "", "set_trainable_state"], [113, 4, 1, "", "setup_seeds"]], "mergernet.services": [[115, 0, 0, "-", "github"], [117, 0, 0, "-", "google"], [119, 0, 0, "-", "imaging"], [121, 0, 0, "-", "legacy"], [123, 0, 0, "-", "sciserver"], [125, 0, 0, "-", "sdss"], [127, 0, 0, "-", "splus"], [131, 0, 0, "-", "tap"], [133, 0, 0, "-", "tensorboard"], [135, 0, 0, "-", "utils"]], "mergernet.services.github": [[116, 1, 1, "", "GithubService"]], "mergernet.services.github.GithubService": [[116, 3, 1, "", "_encode_content"], [116, 3, 1, "", "_get_url"], [116, 3, 1, "", "commit"], [116, 3, 1, "", "download"], [116, 3, 1, "", "get_lastest_job_run"], [116, 3, 1, "", "list_dir"]], "mergernet.services.google": [[118, 1, 1, "", "GDrive"]], "mergernet.services.google.GDrive": [[118, 2, 1, "", "base_path"], [118, 3, 1, "", "exists"], [118, 3, 1, "", "get"], [118, 3, 1, "", "get_url"], [118, 3, 1, "", "is_mounted"], [118, 3, 1, "", "move"], [118, 3, 1, "", "send"], [118, 3, 1, "", "send_dir"]], "mergernet.services.imaging": [[120, 1, 1, "", "ImagingService"]], "mergernet.services.imaging.ImagingService": [[120, 2, 1, "", "_abc_impl"], [120, 3, 1, "", "_batch_download_rgb"], [120, 3, 1, "", "_download_rgb"], [120, 3, 1, "", "batch_cutout"], [120, 3, 1, "", "cutout"]], "mergernet.services.legacy": [[122, 1, 1, "", "LegacyService"]], "mergernet.services.legacy.LegacyService": [[122, 2, 1, "", "_abc_impl"], [122, 3, 1, "", "_batch_download_rgb"], [122, 3, 1, "", "_download_rgb"], [122, 3, 1, "", "batch_cutout"], [122, 3, 1, "", "cutout"]], "mergernet.services.sciserver": [[124, 1, 1, "", "SciServer"]], "mergernet.services.sciserver.SciServer": [[124, 3, 1, "", "get_url"]], "mergernet.services.sdss": [[126, 1, 1, "", "SloanService"]], "mergernet.services.sdss.SloanService": [[126, 3, 1, "", "batch_download_fits"], [126, 3, 1, "", "batch_download_rgb"], [126, 3, 1, "", "crossmatch"], [126, 3, 1, "", "cutout"], [126, 3, 1, "", "download_fits"], [126, 3, 1, "", "download_rgb"], [126, 3, 1, "", "get_image_filename"]], "mergernet.services.splus": [[128, 1, 1, "", "ImageType"], [129, 1, 1, "", "SplusService"], [130, 4, 1, "", "update_authorization"]], "mergernet.services.splus.ImageType": [[128, 2, 1, "", "fits"], [128, 2, 1, "", "lupton"], [128, 2, 1, "", "trilogy"]], "mergernet.services.splus.SplusService": [[129, 3, 1, "", "_batch_download"], [129, 3, 1, "", "_download_image"], [129, 3, 1, "", "_get_url"], [129, 2, 1, "", "_lock"], [129, 3, 1, "", "_track_tap_job"], [129, 3, 1, "", "batch_image_download"], [129, 3, 1, "", "batch_query"], [129, 3, 1, "", "download_fits"], [129, 3, 1, "", "download_lupton_rgb"], [129, 3, 1, "", "download_trilogy_rgb"], [129, 3, 1, "", "query"], [129, 3, 1, "", "update_token"]], "mergernet.services.tap": [[132, 1, 1, "", "TapService"]], "mergernet.services.tap.TapService": [[132, 3, 1, "", "batch_sync_query"], [132, 3, 1, "", "sync_query"]], "mergernet.services.tensorboard": [[134, 1, 1, "", "TensorboardService"]], "mergernet.services.tensorboard.TensorboardService": [[134, 3, 1, "", "upload_assets"]], "mergernet.services.utils": [[136, 4, 1, "", "append_query_params"], [137, 4, 1, "", "batch_download_file"], [138, 4, 1, "", "download_file"], [139, 4, 1, "", "parallel_function_executor"]], "mergernet.visualization": [[141, 0, 0, "-", "plot"]], "mergernet.visualization.plot": [[142, 1, 1, "", "Serie"], [143, 4, 1, "", "color_color"], [144, 4, 1, "", "conf_matrix"], [145, 4, 1, "", "data_distribution"], [146, 4, 1, "", "mag_class_distribution"], [147, 4, 1, "", "object_position"], [148, 4, 1, "", "roc"], [149, 4, 1, "", "train_metrics"]], "mergernet.visualization.plot.Serie": [[142, 3, 1, "", "get_serie"], [142, 3, 1, "", "get_std"], [142, 3, 1, "", "has_std"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"mergernet": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 43, 44, 47, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 80, 82, 84, 85, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151], "core": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "constant": 1, "experi": [2, 3, 4, 150], "backup_model": 4, "hp": [5, 9], "categoricalhyperparamet": 6, "constanthyperparamet": 7, "floathyperparamet": 8, "hyperparamet": 10, "hyperparameterset": 11, "inthyperparamet": 12, "log": [13, 14], "configure_root_logg": 14, "util": [15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 108, 109, 110, 111, 112, 113, 135, 136, 137, 138, 139], "cacheddatafram": 16, "singletonmeta": 17, "tim": 18, "array_fallback": 19, "classproperti": 20, "deep_upd": 21, "find_by_valu": 22, "head": 23, "iaunam": 24, "exampl": [24, 25, 103, 129], "iauname_relative_path": 25, "load_imag": 26, "load_tabl": 27, "not_in": 28, "save_t": 29, "serial": 30, "unique_path": 31, "data": [32, 33, 35, 38, 42, 43, 44, 47, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "dataset": [33, 34, 90, 92], "dataset_config": 35, "datasetconfig": 36, "datasetregistri": 37, "imag": [38, 42, 43, 119], "imagetransform": 39, "legacyrgb": 40, "luptonrgb": 41, "asinh_map": 42, "asinh_map2": 43, "kfold": 44, "distributionkfold": 45, "stratifieddistributionkfold": 46, "match": 47, "crossmatch": 48, "crossmatchresult": 49, "xtabl": 50, "preprocess": [51, 52, 53, 54, 55, 56], "load_jpg": 52, "load_png": 53, "normalize_rgb": 54, "one_hot_factori": 55, "standardize_rgb": 56, "rgb": [57, 58], "sanit": 59, "datasetsanit": 60, "trilogi": [61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "makeimg": 62, "rgb2im": 63, "adjust_satur": 64, "da": 65, "get_clip": 66, "get_level": 67, "imscal": 68, "meanstd": 69, "rm": 70, "satk2m": 71, "setlevel": 72, "estim": [73, 74, 76, 77, 80, 82], "automl": [74, 96, 97], "optunaestim": 75, "base": 76, "estimatorconfig": 78, "estimatorregistri": 79, "decal": 80, "zoobotestim": 81, "parametr": 82, "parametricestim": 83, "job": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "j001": 85, "j002": 87, "j003": 89, "train": 90, "j004": 91, "j005": 93, "model": [95, 96, 97, 98, 99, 100, 106, 108, 109, 110, 111, 112, 113], "optuna_train": 97, "baselin": [98, 99], "finetune_train": 99, "callback": 100, "deltastop": 101, "mwandbcallback": 102, "mywandbcallback": 103, "prunecallback": 104, "savebesttrialcallback": 105, "infer": 106, "predictor": 107, "get_conv_arch": 109, "history_to_datafram": 110, "load_model": 111, "set_trainable_st": 112, "setup_se": 113, "servic": [114, 115, 117, 119, 121, 123, 125, 127, 130, 131, 133, 135, 136, 137, 138, 139], "github": 115, "githubservic": 116, "googl": 117, "gdrive": 118, "imagingservic": 120, "legaci": 121, "legacyservic": 122, "sciserv": [123, 124], "sdss": 125, "sloanservic": 126, "splu": [127, 130], "featur": 127, "author": 127, "imagetyp": 128, "splusservic": 129, "update_author": 130, "tap": 131, "tapservic": 132, "tensorboard": 133, "tensorboardservic": 134, "append_query_param": 136, "batch_download_fil": 137, "download_fil": 138, "parallel_function_executor": 139, "visual": [140, 141, 143, 144, 145, 146, 147, 148, 149], "plot": [141, 143, 144, 145, 146, 147, 148, 149], "seri": 142, "color_color": 143, "conf_matrix": 144, "data_distribut": 145, "mag_class_distribut": 146, "object_posit": 147, "roc": 148, "note": 148, "train_metr": 149, "welcom": 151, "": 151, "document": 151, "content": 151, "indic": 151, "tabl": 151, "api": 152, "refer": 152}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"mergernet.core": [[0, "module-mergernet.core"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "Experiment": [[3, "experiment"]], "mergernet.core.experiment.backup_model": [[4, "mergernet-core-experiment-backup-model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "CategoricalHyperParameter": [[6, "categoricalhyperparameter"]], "ConstantHyperParameter": [[7, "constanthyperparameter"]], "FloatHyperParameter": [[8, "floathyperparameter"]], "HP": [[9, "hp"]], "HyperParameter": [[10, "hyperparameter"]], "HyperParameterSet": [[11, "hyperparameterset"]], "IntHyperParameter": [[12, "inthyperparameter"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "mergernet.core.logging.configure_root_logger": [[14, "mergernet-core-logging-configure-root-logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "CachedDataFrame": [[16, "cacheddataframe"]], "SingletonMeta": [[17, "singletonmeta"]], "Timming": [[18, "timming"]], "mergernet.core.utils.array_fallback": [[19, "mergernet-core-utils-array-fallback"]], "classproperty": [[20, "classproperty"]], "mergernet.core.utils.deep_update": [[21, "mergernet-core-utils-deep-update"]], "mergernet.core.utils.find_by_value": [[22, "mergernet-core-utils-find-by-value"]], "mergernet.core.utils.heading": [[23, "mergernet-core-utils-heading"]], "mergernet.core.utils.iauname": [[24, "mergernet-core-utils-iauname"]], "Example": [[24, null], [25, null]], "mergernet.core.utils.iauname_relative_path": [[25, "mergernet-core-utils-iauname-relative-path"]], "mergernet.core.utils.load_image": [[26, "mergernet-core-utils-load-image"]], "mergernet.core.utils.load_table": [[27, "mergernet-core-utils-load-table"]], "mergernet.core.utils.not_in": [[28, "mergernet-core-utils-not-in"]], "mergernet.core.utils.save_table": [[29, "mergernet-core-utils-save-table"]], "mergernet.core.utils.serialize": [[30, "mergernet-core-utils-serialize"]], "mergernet.core.utils.unique_path": [[31, "mergernet-core-utils-unique-path"]], "mergernet.data": [[32, "module-mergernet.data"]], "mergernet.data.dataset": [[33, "module-mergernet.data.dataset"]], "Dataset": [[34, "dataset"], [90, "dataset"], [92, "dataset"]], "mergernet.data.dataset_config": [[35, "module-mergernet.data.dataset_config"]], "DatasetConfig": [[36, "datasetconfig"]], "DatasetRegistry": [[37, "datasetregistry"]], "mergernet.data.image": [[38, "module-mergernet.data.image"]], "ImageTransform": [[39, "imagetransform"]], "LegacyRGB": [[40, "legacyrgb"]], "LuptonRGB": [[41, "luptonrgb"]], "mergernet.data.image.asinh_map": [[42, "mergernet-data-image-asinh-map"]], "mergernet.data.image.asinh_map2": [[43, "mergernet-data-image-asinh-map2"]], "mergernet.data.kfold": [[44, "module-mergernet.data.kfold"]], "DistributionKFold": [[45, "distributionkfold"]], "StratifiedDistributionKFold": [[46, "stratifieddistributionkfold"]], "mergernet.data.match": [[47, "module-mergernet.data.match"]], "CrossMatch": [[48, "crossmatch"]], "CrossMatchResult": [[49, "crossmatchresult"]], "XTable": [[50, "xtable"]], "mergernet.data.preprocessing": [[51, "module-mergernet.data.preprocessing"]], "mergernet.data.preprocessing.load_jpg": [[52, "mergernet-data-preprocessing-load-jpg"]], "mergernet.data.preprocessing.load_png": [[53, "mergernet-data-preprocessing-load-png"]], "mergernet.data.preprocessing.normalize_rgb": [[54, "mergernet-data-preprocessing-normalize-rgb"]], "mergernet.data.preprocessing.one_hot_factory": [[55, "mergernet-data-preprocessing-one-hot-factory"]], "mergernet.data.preprocessing.standardize_rgb": [[56, "mergernet-data-preprocessing-standardize-rgb"]], "mergernet.data.rgb": [[57, "module-mergernet.data.rgb"]], "RGB": [[58, "rgb"]], "mergernet.data.sanitization": [[59, "module-mergernet.data.sanitization"]], "DatasetSanitization": [[60, "datasetsanitization"]], "mergernet.data.trilogy": [[61, "module-mergernet.data.trilogy"]], "MakeImg": [[62, "makeimg"]], "mergernet.data.trilogy.RGB2im": [[63, "mergernet-data-trilogy-rgb2im"]], "mergernet.data.trilogy.adjust_saturation": [[64, "mergernet-data-trilogy-adjust-saturation"]], "mergernet.data.trilogy.da": [[65, "mergernet-data-trilogy-da"]], "mergernet.data.trilogy.get_clip": [[66, "mergernet-data-trilogy-get-clip"]], "mergernet.data.trilogy.get_levels": [[67, "mergernet-data-trilogy-get-levels"]], "mergernet.data.trilogy.imscale": [[68, "mergernet-data-trilogy-imscale"]], "mergernet.data.trilogy.meanstd": [[69, "mergernet-data-trilogy-meanstd"]], "mergernet.data.trilogy.rms": [[70, "mergernet-data-trilogy-rms"]], "mergernet.data.trilogy.satK2m": [[71, "mergernet-data-trilogy-satk2m"]], "mergernet.data.trilogy.setLevel": [[72, "mergernet-data-trilogy-setlevel"]], "mergernet.estimators": [[73, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[74, "module-mergernet.estimators.automl"]], "OptunaEstimator": [[75, "optunaestimator"]], "mergernet.estimators.base": [[76, "module-mergernet.estimators.base"]], "Estimator": [[77, "estimator"]], "EstimatorConfig": [[78, "estimatorconfig"]], "EstimatorRegistry": [[79, "estimatorregistry"]], "mergernet.estimators.decals": [[80, "module-mergernet.estimators.decals"]], "ZoobotEstimator": [[81, "zoobotestimator"]], "mergernet.estimators.parametric": [[82, "module-mergernet.estimators.parametric"]], "ParametricEstimator": [[83, "parametricestimator"]], "mergernet.jobs": [[84, "module-mergernet.jobs"]], "mergernet.jobs.j001": [[85, "module-mergernet.jobs.j001"]], "Job": [[86, "job"], [88, "job"], [90, "job"], [92, "job"], [94, "job"]], "mergernet.jobs.j002": [[87, "module-mergernet.jobs.j002"]], "mergernet.jobs.j003": [[89, "module-mergernet.jobs.j003"]], "Train": [[90, "train"]], "mergernet.jobs.j004": [[91, "module-mergernet.jobs.j004"]], "mergernet.jobs.j005": [[93, "module-mergernet.jobs.j005"]], "mergernet.model": [[95, "module-mergernet.model"]], "mergernet.model.automl": [[96, "module-mergernet.model.automl"]], "mergernet.model.automl.optuna_train": [[97, "mergernet-model-automl-optuna-train"]], "mergernet.model.baseline": [[98, "module-mergernet.model.baseline"]], "mergernet.model.baseline.finetune_train": [[99, "mergernet-model-baseline-finetune-train"]], "mergernet.model.callbacks": [[100, "module-mergernet.model.callbacks"]], "DeltaStopping": [[101, "deltastopping"]], "MWandbCallback": [[102, "mwandbcallback"]], "MyWandbCallback": [[103, "mywandbcallback"]], "Examples": [[103, null], [129, null]], "PruneCallback": [[104, "prunecallback"]], "SaveBestTrialCallback": [[105, "savebesttrialcallback"]], "mergernet.model.inference": [[106, "module-mergernet.model.inference"]], "Predictor": [[107, "predictor"]], "mergernet.model.utils": [[108, "module-mergernet.model.utils"]], "mergernet.model.utils.get_conv_arch": [[109, "mergernet-model-utils-get-conv-arch"]], "mergernet.model.utils.history_to_dataframe": [[110, "mergernet-model-utils-history-to-dataframe"]], "mergernet.model.utils.load_model": [[111, "mergernet-model-utils-load-model"]], "mergernet.model.utils.set_trainable_state": [[112, "mergernet-model-utils-set-trainable-state"]], "mergernet.model.utils.setup_seeds": [[113, "mergernet-model-utils-setup-seeds"]], "mergernet.services": [[114, "module-mergernet.services"]], "mergernet.services.github": [[115, "module-mergernet.services.github"]], "GithubService": [[116, "githubservice"]], "mergernet.services.google": [[117, "module-mergernet.services.google"]], "GDrive": [[118, "gdrive"]], "mergernet.services.imaging": [[119, "module-mergernet.services.imaging"]], "ImagingService": [[120, "imagingservice"]], "mergernet.services.legacy": [[121, "module-mergernet.services.legacy"]], "LegacyService": [[122, "legacyservice"]], "mergernet.services.sciserver": [[123, "module-mergernet.services.sciserver"]], "SciServer": [[124, "sciserver"]], "mergernet.services.sdss": [[125, "module-mergernet.services.sdss"]], "SloanService": [[126, "sloanservice"]], "mergernet.services.splus": [[127, "module-mergernet.services.splus"]], "Features": [[127, "features"]], "Authors": [[127, "authors"]], "ImageType": [[128, "imagetype"]], "SplusService": [[129, "splusservice"]], "mergernet.services.splus.update_authorization": [[130, "mergernet-services-splus-update-authorization"]], "mergernet.services.tap": [[131, "module-mergernet.services.tap"]], "TapService": [[132, "tapservice"]], "mergernet.services.tensorboard": [[133, "module-mergernet.services.tensorboard"]], "TensorboardService": [[134, "tensorboardservice"]], "mergernet.services.utils": [[135, "module-mergernet.services.utils"]], "mergernet.services.utils.append_query_params": [[136, "mergernet-services-utils-append-query-params"]], "mergernet.services.utils.batch_download_file": [[137, "mergernet-services-utils-batch-download-file"]], "mergernet.services.utils.download_file": [[138, "mergernet-services-utils-download-file"]], "mergernet.services.utils.parallel_function_executor": [[139, "mergernet-services-utils-parallel-function-executor"]], "mergernet.visualization": [[140, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[141, "module-mergernet.visualization.plot"]], "Serie": [[142, "serie"]], "mergernet.visualization.plot.color_color": [[143, "mergernet-visualization-plot-color-color"]], "mergernet.visualization.plot.conf_matrix": [[144, "mergernet-visualization-plot-conf-matrix"]], "mergernet.visualization.plot.data_distribution": [[145, "mergernet-visualization-plot-data-distribution"]], "mergernet.visualization.plot.mag_class_distribution": [[146, "mergernet-visualization-plot-mag-class-distribution"]], "mergernet.visualization.plot.object_position": [[147, "mergernet-visualization-plot-object-position"]], "mergernet.visualization.plot.roc": [[148, "mergernet-visualization-plot-roc"]], "Notes": [[148, null]], "mergernet.visualization.plot.train_metrics": [[149, "mergernet-visualization-plot-train-metrics"]], "Experiments": [[150, "experiments"]], "Welcome to mergernet\u2019s documentation!": [[151, "welcome-to-mergernet-s-documentation"]], "Contents:": [[151, null]], "Indices and tables": [[151, "indices-and-tables"]], "API Reference": [[152, "api-reference"]]}, "indexentries": {"mergernet.core": [[0, "module-mergernet.core"]], "module": [[0, "module-mergernet.core"], [1, "module-mergernet.core.constants"], [2, "module-mergernet.core.experiment"], [5, "module-mergernet.core.hp"], [13, "module-mergernet.core.logging"], [15, "module-mergernet.core.utils"], [32, "module-mergernet.data"], [33, "module-mergernet.data.dataset"], [35, "module-mergernet.data.dataset_config"], [38, "module-mergernet.data.image"], [44, "module-mergernet.data.kfold"], [47, "module-mergernet.data.match"], [51, "module-mergernet.data.preprocessing"], [57, "module-mergernet.data.rgb"], [59, "module-mergernet.data.sanitization"], [61, "module-mergernet.data.trilogy"], [73, "module-mergernet.estimators"], [74, "module-mergernet.estimators.automl"], [76, "module-mergernet.estimators.base"], [80, "module-mergernet.estimators.decals"], [82, "module-mergernet.estimators.parametric"], [84, "module-mergernet.jobs"], [85, "module-mergernet.jobs.j001"], [87, "module-mergernet.jobs.j002"], [89, "module-mergernet.jobs.j003"], [91, "module-mergernet.jobs.j004"], [93, "module-mergernet.jobs.j005"], [95, "module-mergernet.model"], [96, "module-mergernet.model.automl"], [98, "module-mergernet.model.baseline"], [100, "module-mergernet.model.callbacks"], [106, "module-mergernet.model.inference"], [108, "module-mergernet.model.utils"], [114, "module-mergernet.services"], [115, "module-mergernet.services.github"], [117, "module-mergernet.services.google"], [119, "module-mergernet.services.imaging"], [121, "module-mergernet.services.legacy"], [123, "module-mergernet.services.sciserver"], [125, "module-mergernet.services.sdss"], [127, "module-mergernet.services.splus"], [131, "module-mergernet.services.tap"], [133, "module-mergernet.services.tensorboard"], [135, "module-mergernet.services.utils"], [140, "module-mergernet.visualization"], [141, "module-mergernet.visualization.plot"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "experiment (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment"]], "experiment.tracer (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment.Tracer"]], "_exp_created (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._exp_created"]], "_post_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._post_run"]], "_pre_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._pre_run"]], "_registered_artifacts (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._setup_experiment_attributes"]], "download_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.download_file_gd"]], "exp_id (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_id"]], "exp_name (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_name"]], "finish_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.finish_wandb"]], "gd_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_exp_path"]], "gd_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_shared_path"]], "init_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.init_wandb"]], "local_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_exp_path"]], "local_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_shared_path"]], "notes (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.notes"]], "register_artifact() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.register_artifact"]], "run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment.run"]], "upload_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_file_gd"]], "upload_registered_artifacts() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_registered_artifacts"]], "backup_model() (in module mergernet.core.experiment)": [[4, "mergernet.core.experiment.backup_model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "categoricalhyperparameter (class in mergernet.core.hp)": [[6, "mergernet.core.hp.CategoricalHyperParameter"]], "clear_last_value() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.categoricalhyperparameter static method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.to_dict"]], "constanthyperparameter (class in mergernet.core.hp)": [[7, "mergernet.core.hp.ConstantHyperParameter"]], "clear_last_value() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.constanthyperparameter static method)": [[7, "mergernet.core.hp.ConstantHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.to_dict"]], "floathyperparameter (class in mergernet.core.hp)": [[8, "mergernet.core.hp.FloatHyperParameter"]], "clear_last_value() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.floathyperparameter static method)": [[8, "mergernet.core.hp.FloatHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.to_dict"]], "hp (class in mergernet.core.hp)": [[9, "mergernet.core.hp.HP"]], "cat() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.cat"]], "const() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.const"]], "num() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.num"]], "hyperparameter (class in mergernet.core.hp)": [[10, "mergernet.core.hp.HyperParameter"]], "clear_last_value() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.hyperparameter static method)": [[10, "mergernet.core.hp.HyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_trial"]], "suggest() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.suggest"]], "to_dict() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.to_dict"]], "hyperparameterset (class in mergernet.core.hp)": [[11, "mergernet.core.hp.HyperParameterSet"]], "add() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.add"]], "clear_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.clear_values_dict"]], "get() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.get"]], "set_trial() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.set_trial"]], "to_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.to_values_dict"]], "inthyperparameter (class in mergernet.core.hp)": [[12, "mergernet.core.hp.IntHyperParameter"]], "clear_last_value() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.inthyperparameter static method)": [[12, "mergernet.core.hp.IntHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.to_dict"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "configure_root_logger() (in module mergernet.core.logging)": [[14, "mergernet.core.logging.configure_root_logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "cacheddataframe (class in mergernet.core.utils)": [[16, "mergernet.core.utils.CachedDataFrame"]], "_cache (mergernet.core.utils.cacheddataframe attribute)": [[16, "mergernet.core.utils.CachedDataFrame._cache"]], "load() (mergernet.core.utils.cacheddataframe class method)": [[16, "mergernet.core.utils.CachedDataFrame.load"]], "singletonmeta (class in mergernet.core.utils)": [[17, "mergernet.core.utils.SingletonMeta"]], "__new__() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.__new__"]], "_instances (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._instances"]], "_lock (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._lock"]], "mro() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.mro"]], "timming (class in mergernet.core.utils)": [[18, "mergernet.core.utils.Timming"]], "_format_time() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming._format_time"]], "duration() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.duration"]], "end() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.end"]], "start() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.start"]], "array_fallback() (in module mergernet.core.utils)": [[19, "mergernet.core.utils.array_fallback"]], "__new__() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.__new__"]], "classproperty (class in mergernet.core.utils)": [[20, "mergernet.core.utils.classproperty"]], "deleter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.deleter"]], "fdel (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fdel"]], "fget (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fget"]], "fset (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fset"]], "getter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.getter"]], "setter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.setter"]], "deep_update() (in module mergernet.core.utils)": [[21, "mergernet.core.utils.deep_update"]], "find_by_value() (in module mergernet.core.utils)": [[22, "mergernet.core.utils.find_by_value"]], "heading() (in module mergernet.core.utils)": [[23, "mergernet.core.utils.heading"]], "iauname() (in module mergernet.core.utils)": [[24, "mergernet.core.utils.iauname"]], "iauname_relative_path() (in module mergernet.core.utils)": [[25, "mergernet.core.utils.iauname_relative_path"]], "load_image() (in module mergernet.core.utils)": [[26, "mergernet.core.utils.load_image"]], "load_table() (in module mergernet.core.utils)": [[27, "mergernet.core.utils.load_table"]], "not_in() (in module mergernet.core.utils)": [[28, "mergernet.core.utils.not_in"]], "save_table() (in module mergernet.core.utils)": [[29, "mergernet.core.utils.save_table"]], "serialize() (in module mergernet.core.utils)": [[30, "mergernet.core.utils.serialize"]], "unique_path() (in module mergernet.core.utils)": [[31, "mergernet.core.utils.unique_path"]], "mergernet.data": [[32, "module-mergernet.data"]], "mergernet.data.dataset": [[33, "module-mergernet.data.dataset"]], "dataset (class in mergernet.data.dataset)": [[34, "mergernet.data.dataset.Dataset"]], "_create_dataset_table() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset._create_dataset_table"]], "_discretize_label() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset._discretize_label"]], "_transform_images() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset._transform_images"]], "compute_class_weight() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.compute_class_weight"]], "concat_fold_column() (mergernet.data.dataset.dataset static method)": [[34, "mergernet.data.dataset.Dataset.concat_fold_column"]], "download() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.download"]], "get_x() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.get_X"]], "get_x_by_fold() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.get_X_by_fold"]], "get_fold() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.get_fold"]], "get_images_paths() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.get_images_paths"]], "get_preds_dataset() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.get_preds_dataset"]], "get_table() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.get_table"]], "is_dataset_downloaded() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.is_dataset_downloaded"]], "prepare_data() (mergernet.data.dataset.dataset method)": [[34, "mergernet.data.dataset.Dataset.prepare_data"]], "registry (mergernet.data.dataset.dataset attribute)": [[34, "mergernet.data.dataset.Dataset.registry"]], "mergernet.data.dataset_config": [[35, "module-mergernet.data.dataset_config"]], "datasetconfig (class in mergernet.data.dataset_config)": [[36, "mergernet.data.dataset_config.DatasetConfig"]], "bin_legacy_north_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BIN_LEGACY_NORTH_RGB_128"]], "bin_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BIN_SDSS_128"]], "blind_splus_gal80_ls10_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_GAL80_LS10_RGB_128"]], "blind_splus_lupton_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_128"]], "blind_splus_lupton_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_150"]], "blind_splus_trilogy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_128"]], "blind_splus_trilogy_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_150"]], "darg_no_inspection (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.DARG_NO_INSPECTION"]], "datasetregistry (class in mergernet.data.dataset_config)": [[37, "mergernet.data.dataset_config.DatasetRegistry"]], "mesd_legacy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.MESD_LEGACY_128"]], "mesd_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[37, "mergernet.data.dataset_config.DatasetRegistry.MESD_SDSS_128"]], "mergernet.data.image": [[38, "module-mergernet.data.image"]], "imagetransform (class in mergernet.data.image)": [[39, "mergernet.data.image.ImageTransform"]], "_abc_impl (mergernet.data.image.imagetransform attribute)": [[39, "mergernet.data.image.ImageTransform._abc_impl"]], "batch_transform() (mergernet.data.image.imagetransform method)": [[39, "mergernet.data.image.ImageTransform.batch_transform"]], "transform() (mergernet.data.image.imagetransform method)": [[39, "mergernet.data.image.ImageTransform.transform"]], "legacyrgb (class in mergernet.data.image)": [[40, "mergernet.data.image.LegacyRGB"]], "_abc_impl (mergernet.data.image.legacyrgb attribute)": [[40, "mergernet.data.image.LegacyRGB._abc_impl"]], "batch_transform() (mergernet.data.image.legacyrgb method)": [[40, "mergernet.data.image.LegacyRGB.batch_transform"]], "transform() (mergernet.data.image.legacyrgb method)": [[40, "mergernet.data.image.LegacyRGB.transform"]], "luptonrgb (class in mergernet.data.image)": [[41, "mergernet.data.image.LuptonRGB"]], "_abc_impl (mergernet.data.image.luptonrgb attribute)": [[41, "mergernet.data.image.LuptonRGB._abc_impl"]], "batch_transform() (mergernet.data.image.luptonrgb method)": [[41, "mergernet.data.image.LuptonRGB.batch_transform"]], "transform() (mergernet.data.image.luptonrgb method)": [[41, "mergernet.data.image.LuptonRGB.transform"]], "asinh_map() (in module mergernet.data.image)": [[42, "mergernet.data.image.asinh_map"]], "asinh_map2() (in module mergernet.data.image)": [[43, "mergernet.data.image.asinh_map2"]], "mergernet.data.kfold": [[44, "module-mergernet.data.kfold"]], "distributionkfold (class in mergernet.data.kfold)": [[45, "mergernet.data.kfold.DistributionKFold"]], "split() (mergernet.data.kfold.distributionkfold method)": [[45, "mergernet.data.kfold.DistributionKFold.split"]], "stratifieddistributionkfold (class in mergernet.data.kfold)": [[46, "mergernet.data.kfold.StratifiedDistributionKFold"]], "compute_max_bins() (mergernet.data.kfold.stratifieddistributionkfold static method)": [[46, "mergernet.data.kfold.StratifiedDistributionKFold.compute_max_bins"]], "split_all() (mergernet.data.kfold.stratifieddistributionkfold method)": [[46, "mergernet.data.kfold.StratifiedDistributionKFold.split_all"]], "split_ids() (mergernet.data.kfold.stratifieddistributionkfold method)": [[46, "mergernet.data.kfold.StratifiedDistributionKFold.split_ids"]], "mergernet.data.match": [[47, "module-mergernet.data.match"]], "crossmatch (class in mergernet.data.match)": [[48, "mergernet.data.match.CrossMatch"]], "crossmatch() (mergernet.data.match.crossmatch method)": [[48, "mergernet.data.match.CrossMatch.crossmatch"]], "pair_match() (mergernet.data.match.crossmatch method)": [[48, "mergernet.data.match.CrossMatch.pair_match"]], "unique() (mergernet.data.match.crossmatch method)": [[48, "mergernet.data.match.CrossMatch.unique"]], "crossmatchresult (class in mergernet.data.match)": [[49, "mergernet.data.match.CrossMatchResult"]], "distance (mergernet.data.match.crossmatchresult attribute)": [[49, "mergernet.data.match.CrossMatchResult.distance"]], "primary_idx (mergernet.data.match.crossmatchresult attribute)": [[49, "mergernet.data.match.CrossMatchResult.primary_idx"]], "secondary_idx (mergernet.data.match.crossmatchresult attribute)": [[49, "mergernet.data.match.CrossMatchResult.secondary_idx"]], "table (mergernet.data.match.crossmatchresult attribute)": [[49, "mergernet.data.match.CrossMatchResult.table"]], "xtable (class in mergernet.data.match)": [[50, "mergernet.data.match.XTable"]], "get_coords() (mergernet.data.match.xtable method)": [[50, "mergernet.data.match.XTable.get_coords"]], "to_df() (mergernet.data.match.xtable method)": [[50, "mergernet.data.match.XTable.to_df"]], "mergernet.data.preprocessing": [[51, "module-mergernet.data.preprocessing"]], "load_jpg() (in module mergernet.data.preprocessing)": [[52, "mergernet.data.preprocessing.load_jpg"]], "load_png() (in module mergernet.data.preprocessing)": [[53, "mergernet.data.preprocessing.load_png"]], "normalize_rgb() (in module mergernet.data.preprocessing)": [[54, "mergernet.data.preprocessing.normalize_rgb"]], "one_hot_factory() (in module mergernet.data.preprocessing)": [[55, "mergernet.data.preprocessing.one_hot_factory"]], "standardize_rgb() (in module mergernet.data.preprocessing)": [[56, "mergernet.data.preprocessing.standardize_rgb"]], "mergernet.data.rgb": [[57, "module-mergernet.data.rgb"]], "rgb (class in mergernet.data.rgb)": [[58, "mergernet.data.rgb.RGB"]], "make_trilogy_fits() (mergernet.data.rgb.rgb method)": [[58, "mergernet.data.rgb.RGB.make_trilogy_fits"]], "trilogy_fits_to_png() (mergernet.data.rgb.rgb method)": [[58, "mergernet.data.rgb.RGB.trilogy_fits_to_png"]], "mergernet.data.sanitization": [[59, "module-mergernet.data.sanitization"]], "datasetsanitization (class in mergernet.data.sanitization)": [[60, "mergernet.data.sanitization.DatasetSanitization"]], "check_images() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.check_images"]], "drop_images_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_filesize"]], "drop_images_by_iauname() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_iauname"]], "filesize_histogram() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.filesize_histogram"]], "get_filesize_distribution() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.get_filesize_distribution"]], "get_iauname_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.get_iauname_by_filesize"]], "sample() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.sample"]], "sanitize() (mergernet.data.sanitization.datasetsanitization method)": [[60, "mergernet.data.sanitization.DatasetSanitization.sanitize"]], "mergernet.data.trilogy": [[61, "module-mergernet.data.trilogy"]], "makeimg (class in mergernet.data.trilogy)": [[62, "mergernet.data.trilogy.MakeImg"]], "color() (mergernet.data.trilogy.makeimg method)": [[62, "mergernet.data.trilogy.MakeImg.color"]], "get_array() (mergernet.data.trilogy.makeimg method)": [[62, "mergernet.data.trilogy.MakeImg.get_array"]], "savefig() (mergernet.data.trilogy.makeimg method)": [[62, "mergernet.data.trilogy.MakeImg.savefig"]], "rgb2im() (in module mergernet.data.trilogy)": [[63, "mergernet.data.trilogy.RGB2im"]], "adjust_saturation() (in module mergernet.data.trilogy)": [[64, "mergernet.data.trilogy.adjust_saturation"]], "da() (in module mergernet.data.trilogy)": [[65, "mergernet.data.trilogy.da"]], "get_clip() (in module mergernet.data.trilogy)": [[66, "mergernet.data.trilogy.get_clip"]], "get_levels() (in module mergernet.data.trilogy)": [[67, "mergernet.data.trilogy.get_levels"]], "imscale() (in module mergernet.data.trilogy)": [[68, "mergernet.data.trilogy.imscale"]], "meanstd() (in module mergernet.data.trilogy)": [[69, "mergernet.data.trilogy.meanstd"]], "rms() (in module mergernet.data.trilogy)": [[70, "mergernet.data.trilogy.rms"]], "satk2m() (in module mergernet.data.trilogy)": [[71, "mergernet.data.trilogy.satK2m"]], "setlevel() (in module mergernet.data.trilogy)": [[72, "mergernet.data.trilogy.setLevel"]], "mergernet.estimators": [[73, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[74, "module-mergernet.estimators.automl"]], "optunaestimator (class in mergernet.estimators.automl)": [[75, "mergernet.estimators.automl.OptunaEstimator"]], "_abc_impl (mergernet.estimators.automl.optunaestimator attribute)": [[75, "mergernet.estimators.automl.OptunaEstimator._abc_impl"]], "_objective() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator._objective"]], "build() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.build"]], "compile_model() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.compile_model"]], "download() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.download"]], "get_conv_arch() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.plot"]], "predict() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.predict"]], "registry (mergernet.estimators.automl.optunaestimator attribute)": [[75, "mergernet.estimators.automl.OptunaEstimator.registry"]], "set_trainable() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.set_trainable"]], "tf_model (mergernet.estimators.automl.optunaestimator property)": [[75, "mergernet.estimators.automl.OptunaEstimator.tf_model"]], "train() (mergernet.estimators.automl.optunaestimator method)": [[75, "mergernet.estimators.automl.OptunaEstimator.train"]], "mergernet.estimators.base": [[76, "module-mergernet.estimators.base"]], "estimator (class in mergernet.estimators.base)": [[77, "mergernet.estimators.base.Estimator"]], "_abc_impl (mergernet.estimators.base.estimator attribute)": [[77, "mergernet.estimators.base.Estimator._abc_impl"]], "build() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.build"]], "compile_model() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.compile_model"]], "download() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.download"]], "get_conv_arch() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.get_dataaug_block"]], "plot() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.plot"]], "predict() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.predict"]], "registry (mergernet.estimators.base.estimator attribute)": [[77, "mergernet.estimators.base.Estimator.registry"]], "set_trainable() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.set_trainable"]], "tf_model (mergernet.estimators.base.estimator property)": [[77, "mergernet.estimators.base.Estimator.tf_model"]], "train() (mergernet.estimators.base.estimator method)": [[77, "mergernet.estimators.base.Estimator.train"]], "estimatorconfig (class in mergernet.estimators.base)": [[78, "mergernet.estimators.base.EstimatorConfig"]], "estimatorregistry (class in mergernet.estimators.base)": [[79, "mergernet.estimators.base.EstimatorRegistry"]], "zoobot_greyscale (mergernet.estimators.base.estimatorregistry attribute)": [[79, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_GREYSCALE"]], "zoobot_rgb (mergernet.estimators.base.estimatorregistry attribute)": [[79, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_RGB"]], "mergernet.estimators.decals": [[80, "module-mergernet.estimators.decals"]], "zoobotestimator (class in mergernet.estimators.decals)": [[81, "mergernet.estimators.decals.ZoobotEstimator"]], "_abc_impl (mergernet.estimators.decals.zoobotestimator attribute)": [[81, "mergernet.estimators.decals.ZoobotEstimator._abc_impl"]], "_prepare_dataset() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator._prepare_dataset"]], "build() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.build"]], "cnn_representations() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.cnn_representations"]], "compile_model() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.compile_model"]], "download() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.download"]], "get_conv_arch() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.get_dataaug_block"]], "pca() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.pca"]], "plot() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.plot"]], "predict() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.predict"]], "registry (mergernet.estimators.decals.zoobotestimator attribute)": [[81, "mergernet.estimators.decals.ZoobotEstimator.registry"]], "set_trainable() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.set_trainable"]], "tf_model (mergernet.estimators.decals.zoobotestimator property)": [[81, "mergernet.estimators.decals.ZoobotEstimator.tf_model"]], "train() (mergernet.estimators.decals.zoobotestimator method)": [[81, "mergernet.estimators.decals.ZoobotEstimator.train"]], "mergernet.estimators.parametric": [[82, "module-mergernet.estimators.parametric"]], "parametricestimator (class in mergernet.estimators.parametric)": [[83, "mergernet.estimators.parametric.ParametricEstimator"]], "_abc_impl (mergernet.estimators.parametric.parametricestimator attribute)": [[83, "mergernet.estimators.parametric.ParametricEstimator._abc_impl"]], "build() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.build"]], "compile_model() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.compile_model"]], "download() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.download"]], "get_conv_arch() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.plot"]], "predict() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.predict"]], "registry (mergernet.estimators.parametric.parametricestimator attribute)": [[83, "mergernet.estimators.parametric.ParametricEstimator.registry"]], "set_trainable() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.set_trainable"]], "tf_model (mergernet.estimators.parametric.parametricestimator property)": [[83, "mergernet.estimators.parametric.ParametricEstimator.tf_model"]], "train() (mergernet.estimators.parametric.parametricestimator method)": [[83, "mergernet.estimators.parametric.ParametricEstimator.train"]], "mergernet.jobs": [[84, "module-mergernet.jobs"]], "mergernet.jobs.j001": [[85, "module-mergernet.jobs.j001"]], "job (class in mergernet.jobs.j001)": [[86, "mergernet.jobs.j001.Job"]], "job.tracer (class in mergernet.jobs.j001)": [[86, "mergernet.jobs.j001.Job.Tracer"]], "_exp_created (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job._exp_created"]], "_post_run() (mergernet.jobs.j001.job method)": [[86, "mergernet.jobs.j001.Job._post_run"]], "_pre_run() (mergernet.jobs.j001.job method)": [[86, "mergernet.jobs.j001.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j001.job method)": [[86, "mergernet.jobs.j001.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j001.job method)": [[86, "mergernet.jobs.j001.Job.call"]], "download_file_gd() (mergernet.jobs.j001.job class method)": [[86, "mergernet.jobs.j001.Job.download_file_gd"]], "exp_id (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.exp_id"]], "exp_name (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j001.job class method)": [[86, "mergernet.jobs.j001.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j001.job class method)": [[86, "mergernet.jobs.j001.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.local_shared_path"]], "notes (mergernet.jobs.j001.job attribute)": [[86, "mergernet.jobs.j001.Job.notes"]], "register_artifact() (mergernet.jobs.j001.job class method)": [[86, "mergernet.jobs.j001.Job.register_artifact"]], "run() (mergernet.jobs.j001.job method)": [[86, "mergernet.jobs.j001.Job.run"]], "upload_file_gd() (mergernet.jobs.j001.job class method)": [[86, "mergernet.jobs.j001.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j001.job class method)": [[86, "mergernet.jobs.j001.Job.upload_registered_artifacts"]], "mergernet.jobs.j002": [[87, "module-mergernet.jobs.j002"]], "job (class in mergernet.jobs.j002)": [[88, "mergernet.jobs.j002.Job"]], "job.tracer (class in mergernet.jobs.j002)": [[88, "mergernet.jobs.j002.Job.Tracer"]], "_exp_created (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job._exp_created"]], "_post_run() (mergernet.jobs.j002.job method)": [[88, "mergernet.jobs.j002.Job._post_run"]], "_pre_run() (mergernet.jobs.j002.job method)": [[88, "mergernet.jobs.j002.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j002.job method)": [[88, "mergernet.jobs.j002.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j002.job method)": [[88, "mergernet.jobs.j002.Job.call"]], "download_file_gd() (mergernet.jobs.j002.job class method)": [[88, "mergernet.jobs.j002.Job.download_file_gd"]], "exp_id (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.exp_id"]], "exp_name (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j002.job class method)": [[88, "mergernet.jobs.j002.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j002.job class method)": [[88, "mergernet.jobs.j002.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.local_shared_path"]], "notes (mergernet.jobs.j002.job attribute)": [[88, "mergernet.jobs.j002.Job.notes"]], "register_artifact() (mergernet.jobs.j002.job class method)": [[88, "mergernet.jobs.j002.Job.register_artifact"]], "run() (mergernet.jobs.j002.job method)": [[88, "mergernet.jobs.j002.Job.run"]], "upload_file_gd() (mergernet.jobs.j002.job class method)": [[88, "mergernet.jobs.j002.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j002.job class method)": [[88, "mergernet.jobs.j002.Job.upload_registered_artifacts"]], "mergernet.jobs.j003": [[89, "module-mergernet.jobs.j003"]], "job (class in mergernet.jobs.j003)": [[90, "mergernet.jobs.j003.Job"]], "job.tracer (class in mergernet.jobs.j003)": [[90, "mergernet.jobs.j003.Job.Tracer"]], "_exp_created (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job._exp_created"]], "_post_run() (mergernet.jobs.j003.job method)": [[90, "mergernet.jobs.j003.Job._post_run"]], "_pre_run() (mergernet.jobs.j003.job method)": [[90, "mergernet.jobs.j003.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j003.job method)": [[90, "mergernet.jobs.j003.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j003.job method)": [[90, "mergernet.jobs.j003.Job.call"]], "download_file_gd() (mergernet.jobs.j003.job class method)": [[90, "mergernet.jobs.j003.Job.download_file_gd"]], "exp_id (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.exp_id"]], "exp_name (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j003.job class method)": [[90, "mergernet.jobs.j003.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j003.job class method)": [[90, "mergernet.jobs.j003.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.local_shared_path"]], "notes (mergernet.jobs.j003.job attribute)": [[90, "mergernet.jobs.j003.Job.notes"]], "register_artifact() (mergernet.jobs.j003.job class method)": [[90, "mergernet.jobs.j003.Job.register_artifact"]], "run() (mergernet.jobs.j003.job method)": [[90, "mergernet.jobs.j003.Job.run"]], "upload_file_gd() (mergernet.jobs.j003.job class method)": [[90, "mergernet.jobs.j003.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j003.job class method)": [[90, "mergernet.jobs.j003.Job.upload_registered_artifacts"]], "mergernet.jobs.j004": [[91, "module-mergernet.jobs.j004"]], "job (class in mergernet.jobs.j004)": [[92, "mergernet.jobs.j004.Job"]], "job.tracer (class in mergernet.jobs.j004)": [[92, "mergernet.jobs.j004.Job.Tracer"]], "_exp_created (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job._exp_created"]], "_post_run() (mergernet.jobs.j004.job method)": [[92, "mergernet.jobs.j004.Job._post_run"]], "_pre_run() (mergernet.jobs.j004.job method)": [[92, "mergernet.jobs.j004.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j004.job method)": [[92, "mergernet.jobs.j004.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j004.job method)": [[92, "mergernet.jobs.j004.Job.call"]], "download_file_gd() (mergernet.jobs.j004.job class method)": [[92, "mergernet.jobs.j004.Job.download_file_gd"]], "exp_id (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.exp_id"]], "exp_name (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j004.job class method)": [[92, "mergernet.jobs.j004.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j004.job class method)": [[92, "mergernet.jobs.j004.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.local_shared_path"]], "notes (mergernet.jobs.j004.job attribute)": [[92, "mergernet.jobs.j004.Job.notes"]], "register_artifact() (mergernet.jobs.j004.job class method)": [[92, "mergernet.jobs.j004.Job.register_artifact"]], "run() (mergernet.jobs.j004.job method)": [[92, "mergernet.jobs.j004.Job.run"]], "upload_file_gd() (mergernet.jobs.j004.job class method)": [[92, "mergernet.jobs.j004.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j004.job class method)": [[92, "mergernet.jobs.j004.Job.upload_registered_artifacts"]], "mergernet.jobs.j005": [[93, "module-mergernet.jobs.j005"]], "job (class in mergernet.jobs.j005)": [[94, "mergernet.jobs.j005.Job"]], "job.tracer (class in mergernet.jobs.j005)": [[94, "mergernet.jobs.j005.Job.Tracer"]], "_exp_created (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job._exp_created"]], "_post_run() (mergernet.jobs.j005.job method)": [[94, "mergernet.jobs.j005.Job._post_run"]], "_pre_run() (mergernet.jobs.j005.job method)": [[94, "mergernet.jobs.j005.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j005.job method)": [[94, "mergernet.jobs.j005.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j005.job method)": [[94, "mergernet.jobs.j005.Job.call"]], "download_file_gd() (mergernet.jobs.j005.job class method)": [[94, "mergernet.jobs.j005.Job.download_file_gd"]], "exp_id (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.exp_id"]], "exp_name (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j005.job class method)": [[94, "mergernet.jobs.j005.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j005.job class method)": [[94, "mergernet.jobs.j005.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.local_shared_path"]], "notes (mergernet.jobs.j005.job attribute)": [[94, "mergernet.jobs.j005.Job.notes"]], "register_artifact() (mergernet.jobs.j005.job class method)": [[94, "mergernet.jobs.j005.Job.register_artifact"]], "run() (mergernet.jobs.j005.job method)": [[94, "mergernet.jobs.j005.Job.run"]], "upload_file_gd() (mergernet.jobs.j005.job class method)": [[94, "mergernet.jobs.j005.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j005.job class method)": [[94, "mergernet.jobs.j005.Job.upload_registered_artifacts"]], "mergernet.model": [[95, "module-mergernet.model"]], "mergernet.model.automl": [[96, "module-mergernet.model.automl"]], "optuna_train() (in module mergernet.model.automl)": [[97, "mergernet.model.automl.optuna_train"]], "mergernet.model.baseline": [[98, "module-mergernet.model.baseline"]], "finetune_train() (in module mergernet.model.baseline)": [[99, "mergernet.model.baseline.finetune_train"]], "mergernet.model.callbacks": [[100, "module-mergernet.model.callbacks"]], "deltastopping (class in mergernet.model.callbacks)": [[101, "mergernet.model.callbacks.DeltaStopping"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.deltastopping attribute)": [[101, "mergernet.model.callbacks.DeltaStopping._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.deltastopping attribute)": [[101, "mergernet.model.callbacks.DeltaStopping._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.on_train_end"]], "set_model() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.set_model"]], "set_params() (mergernet.model.callbacks.deltastopping method)": [[101, "mergernet.model.callbacks.DeltaStopping.set_params"]], "mwandbcallback (class in mergernet.model.callbacks)": [[102, "mergernet.model.callbacks.MWandbCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mwandbcallback attribute)": [[102, "mergernet.model.callbacks.MWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mwandbcallback attribute)": [[102, "mergernet.model.callbacks.MWandbCallback._keras_api_names_v1"]], "get_flops() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mwandbcallback method)": [[102, "mergernet.model.callbacks.MWandbCallback.set_params"]], "mywandbcallback (class in mergernet.model.callbacks)": [[103, "mergernet.model.callbacks.MyWandbCallback"]], "_attempt_evaluation_log() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._attempt_evaluation_log"]], "_build_grad_accumulator_model() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._build_grad_accumulator_model"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mywandbcallback attribute)": [[103, "mergernet.model.callbacks.MyWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mywandbcallback attribute)": [[103, "mergernet.model.callbacks.MyWandbCallback._keras_api_names_v1"]], "_log_dataframe() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._log_dataframe"]], "_log_gradients() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._log_gradients"]], "_log_images() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._log_images"]], "_log_weights() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._log_weights"]], "_logits_to_captions() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._logits_to_captions"]], "_masks_to_pixels() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._masks_to_pixels"]], "_save_model() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._save_model"]], "_save_model_as_artifact() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback._save_model_as_artifact"]], "get_flops() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mywandbcallback method)": [[103, "mergernet.model.callbacks.MyWandbCallback.set_params"]], "prunecallback (class in mergernet.model.callbacks)": [[104, "mergernet.model.callbacks.PruneCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.prunecallback attribute)": [[104, "mergernet.model.callbacks.PruneCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.prunecallback attribute)": [[104, "mergernet.model.callbacks.PruneCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.set_model"]], "set_params() (mergernet.model.callbacks.prunecallback method)": [[104, "mergernet.model.callbacks.PruneCallback.set_params"]], "savebesttrialcallback (class in mergernet.model.callbacks)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.savebesttrialcallback attribute)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.savebesttrialcallback attribute)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.set_model"]], "set_params() (mergernet.model.callbacks.savebesttrialcallback method)": [[105, "mergernet.model.callbacks.SaveBestTrialCallback.set_params"]], "mergernet.model.inference": [[106, "module-mergernet.model.inference"]], "predictor (class in mergernet.model.inference)": [[107, "mergernet.model.inference.Predictor"]], "predict() (mergernet.model.inference.predictor method)": [[107, "mergernet.model.inference.Predictor.predict"]], "upload() (mergernet.model.inference.predictor method)": [[107, "mergernet.model.inference.Predictor.upload"]], "mergernet.model.utils": [[108, "module-mergernet.model.utils"]], "get_conv_arch() (in module mergernet.model.utils)": [[109, "mergernet.model.utils.get_conv_arch"]], "history_to_dataframe() (in module mergernet.model.utils)": [[110, "mergernet.model.utils.history_to_dataframe"]], "load_model() (in module mergernet.model.utils)": [[111, "mergernet.model.utils.load_model"]], "set_trainable_state() (in module mergernet.model.utils)": [[112, "mergernet.model.utils.set_trainable_state"]], "setup_seeds() (in module mergernet.model.utils)": [[113, "mergernet.model.utils.setup_seeds"]], "mergernet.services": [[114, "module-mergernet.services"]], "mergernet.services.github": [[115, "module-mergernet.services.github"]], "githubservice (class in mergernet.services.github)": [[116, "mergernet.services.github.GithubService"]], "_encode_content() (mergernet.services.github.githubservice method)": [[116, "mergernet.services.github.GithubService._encode_content"]], "_get_url() (mergernet.services.github.githubservice method)": [[116, "mergernet.services.github.GithubService._get_url"]], "commit() (mergernet.services.github.githubservice method)": [[116, "mergernet.services.github.GithubService.commit"]], "download() (mergernet.services.github.githubservice method)": [[116, "mergernet.services.github.GithubService.download"]], "get_lastest_job_run() (mergernet.services.github.githubservice method)": [[116, "mergernet.services.github.GithubService.get_lastest_job_run"]], "list_dir() (mergernet.services.github.githubservice method)": [[116, "mergernet.services.github.GithubService.list_dir"]], "mergernet.services.google": [[117, "module-mergernet.services.google"]], "gdrive (class in mergernet.services.google)": [[118, "mergernet.services.google.GDrive"]], "base_path (mergernet.services.google.gdrive attribute)": [[118, "mergernet.services.google.GDrive.base_path"]], "exists() (mergernet.services.google.gdrive method)": [[118, "mergernet.services.google.GDrive.exists"]], "get() (mergernet.services.google.gdrive method)": [[118, "mergernet.services.google.GDrive.get"]], "get_url() (mergernet.services.google.gdrive static method)": [[118, "mergernet.services.google.GDrive.get_url"]], "is_mounted() (mergernet.services.google.gdrive method)": [[118, "mergernet.services.google.GDrive.is_mounted"]], "move() (mergernet.services.google.gdrive method)": [[118, "mergernet.services.google.GDrive.move"]], "send() (mergernet.services.google.gdrive method)": [[118, "mergernet.services.google.GDrive.send"]], "send_dir() (mergernet.services.google.gdrive method)": [[118, "mergernet.services.google.GDrive.send_dir"]], "mergernet.services.imaging": [[119, "module-mergernet.services.imaging"]], "imagingservice (class in mergernet.services.imaging)": [[120, "mergernet.services.imaging.ImagingService"]], "_abc_impl (mergernet.services.imaging.imagingservice attribute)": [[120, "mergernet.services.imaging.ImagingService._abc_impl"]], "_batch_download_rgb() (mergernet.services.imaging.imagingservice method)": [[120, "mergernet.services.imaging.ImagingService._batch_download_rgb"]], "_download_rgb() (mergernet.services.imaging.imagingservice method)": [[120, "mergernet.services.imaging.ImagingService._download_rgb"]], "batch_cutout() (mergernet.services.imaging.imagingservice method)": [[120, "mergernet.services.imaging.ImagingService.batch_cutout"]], "cutout() (mergernet.services.imaging.imagingservice method)": [[120, "mergernet.services.imaging.ImagingService.cutout"]], "mergernet.services.legacy": [[121, "module-mergernet.services.legacy"]], "legacyservice (class in mergernet.services.legacy)": [[122, "mergernet.services.legacy.LegacyService"]], "_abc_impl (mergernet.services.legacy.legacyservice attribute)": [[122, "mergernet.services.legacy.LegacyService._abc_impl"]], "_batch_download_rgb() (mergernet.services.legacy.legacyservice method)": [[122, "mergernet.services.legacy.LegacyService._batch_download_rgb"]], "_download_rgb() (mergernet.services.legacy.legacyservice method)": [[122, "mergernet.services.legacy.LegacyService._download_rgb"]], "batch_cutout() (mergernet.services.legacy.legacyservice method)": [[122, "mergernet.services.legacy.LegacyService.batch_cutout"]], "cutout() (mergernet.services.legacy.legacyservice method)": [[122, "mergernet.services.legacy.LegacyService.cutout"]], "mergernet.services.sciserver": [[123, "module-mergernet.services.sciserver"]], "sciserver (class in mergernet.services.sciserver)": [[124, "mergernet.services.sciserver.SciServer"]], "get_url() (mergernet.services.sciserver.sciserver static method)": [[124, "mergernet.services.sciserver.SciServer.get_url"]], "mergernet.services.sdss": [[125, "module-mergernet.services.sdss"]], "sloanservice (class in mergernet.services.sdss)": [[126, "mergernet.services.sdss.SloanService"]], "batch_download_fits() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.batch_download_fits"]], "batch_download_rgb() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.batch_download_rgb"]], "crossmatch() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.crossmatch"]], "cutout() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.cutout"]], "download_fits() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.download_fits"]], "download_rgb() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.download_rgb"]], "get_image_filename() (mergernet.services.sdss.sloanservice method)": [[126, "mergernet.services.sdss.SloanService.get_image_filename"]], "mergernet.services.splus": [[127, "module-mergernet.services.splus"]], "imagetype (class in mergernet.services.splus)": [[128, "mergernet.services.splus.ImageType"]], "fits (mergernet.services.splus.imagetype attribute)": [[128, "mergernet.services.splus.ImageType.fits"]], "lupton (mergernet.services.splus.imagetype attribute)": [[128, "mergernet.services.splus.ImageType.lupton"]], "trilogy (mergernet.services.splus.imagetype attribute)": [[128, "mergernet.services.splus.ImageType.trilogy"]], "splusservice (class in mergernet.services.splus)": [[129, "mergernet.services.splus.SplusService"]], "_batch_download() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService._batch_download"]], "_download_image() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService._download_image"]], "_get_url() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService._get_url"]], "_lock (mergernet.services.splus.splusservice attribute)": [[129, "mergernet.services.splus.SplusService._lock"]], "_track_tap_job() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService._track_tap_job"]], "batch_image_download() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.batch_image_download"]], "batch_query() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.batch_query"]], "download_fits() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.download_fits"]], "download_lupton_rgb() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.download_lupton_rgb"]], "download_trilogy_rgb() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.download_trilogy_rgb"]], "query() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.query"]], "update_token() (mergernet.services.splus.splusservice method)": [[129, "mergernet.services.splus.SplusService.update_token"]], "update_authorization() (in module mergernet.services.splus)": [[130, "mergernet.services.splus.update_authorization"]], "mergernet.services.tap": [[131, "module-mergernet.services.tap"]], "tapservice (class in mergernet.services.tap)": [[132, "mergernet.services.tap.TapService"]], "batch_sync_query() (mergernet.services.tap.tapservice method)": [[132, "mergernet.services.tap.TapService.batch_sync_query"]], "sync_query() (mergernet.services.tap.tapservice method)": [[132, "mergernet.services.tap.TapService.sync_query"]], "mergernet.services.tensorboard": [[133, "module-mergernet.services.tensorboard"]], "tensorboardservice (class in mergernet.services.tensorboard)": [[134, "mergernet.services.tensorboard.TensorboardService"]], "upload_assets() (mergernet.services.tensorboard.tensorboardservice method)": [[134, "mergernet.services.tensorboard.TensorboardService.upload_assets"]], "mergernet.services.utils": [[135, "module-mergernet.services.utils"]], "append_query_params() (in module mergernet.services.utils)": [[136, "mergernet.services.utils.append_query_params"]], "batch_download_file() (in module mergernet.services.utils)": [[137, "mergernet.services.utils.batch_download_file"]], "download_file() (in module mergernet.services.utils)": [[138, "mergernet.services.utils.download_file"]], "parallel_function_executor() (in module mergernet.services.utils)": [[139, "mergernet.services.utils.parallel_function_executor"]], "mergernet.visualization": [[140, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[141, "module-mergernet.visualization.plot"]], "serie (class in mergernet.visualization.plot)": [[142, "mergernet.visualization.plot.Serie"]], "get_serie() (mergernet.visualization.plot.serie method)": [[142, "mergernet.visualization.plot.Serie.get_serie"]], "get_std() (mergernet.visualization.plot.serie method)": [[142, "mergernet.visualization.plot.Serie.get_std"]], "has_std() (mergernet.visualization.plot.serie method)": [[142, "mergernet.visualization.plot.Serie.has_std"]], "color_color() (in module mergernet.visualization.plot)": [[143, "mergernet.visualization.plot.color_color"]], "conf_matrix() (in module mergernet.visualization.plot)": [[144, "mergernet.visualization.plot.conf_matrix"]], "data_distribution() (in module mergernet.visualization.plot)": [[145, "mergernet.visualization.plot.data_distribution"]], "mag_class_distribution() (in module mergernet.visualization.plot)": [[146, "mergernet.visualization.plot.mag_class_distribution"]], "object_position() (in module mergernet.visualization.plot)": [[147, "mergernet.visualization.plot.object_position"]], "roc() (in module mergernet.visualization.plot)": [[148, "mergernet.visualization.plot.roc"]], "train_metrics() (in module mergernet.visualization.plot)": [[149, "mergernet.visualization.plot.train_metrics"]]}})