Search.setIndex({"docnames": ["api/mergernet.core", "api/mergernet.core.constants", "api/mergernet.core.experiment", "api/mergernet.core.experiment.Experiment", "api/mergernet.core.experiment.backup_model", "api/mergernet.core.hp", "api/mergernet.core.hp.CategoricalHyperParameter", "api/mergernet.core.hp.ConstantHyperParameter", "api/mergernet.core.hp.FloatHyperParameter", "api/mergernet.core.hp.HP", "api/mergernet.core.hp.HyperParameter", "api/mergernet.core.hp.HyperParameterSet", "api/mergernet.core.hp.IntHyperParameter", "api/mergernet.core.logging", "api/mergernet.core.logging.configure_root_logger", "api/mergernet.core.utils", "api/mergernet.core.utils.CachedDataFrame", "api/mergernet.core.utils.SingletonMeta", "api/mergernet.core.utils.Timming", "api/mergernet.core.utils.array_fallback", "api/mergernet.core.utils.classproperty", "api/mergernet.core.utils.compress_fits", "api/mergernet.core.utils.deep_update", "api/mergernet.core.utils.find_by_value", "api/mergernet.core.utils.heading", "api/mergernet.core.utils.iauname", "api/mergernet.core.utils.iauname_relative_path", "api/mergernet.core.utils.load_image", "api/mergernet.core.utils.load_table", "api/mergernet.core.utils.not_in", "api/mergernet.core.utils.save_table", "api/mergernet.core.utils.serialize", "api/mergernet.core.utils.unique_path", "api/mergernet.data", "api/mergernet.data.dataset", "api/mergernet.data.dataset.Dataset", "api/mergernet.data.dataset_config", "api/mergernet.data.dataset_config.DatasetConfig", "api/mergernet.data.dataset_config.DatasetRegistry", "api/mergernet.data.image", "api/mergernet.data.image.ImageTransform", "api/mergernet.data.image.LegacyRGB", "api/mergernet.data.image.LuptonRGB", "api/mergernet.data.image.asinh_map", "api/mergernet.data.image.asinh_map2", "api/mergernet.data.kfold", "api/mergernet.data.kfold.DistributionKFold", "api/mergernet.data.kfold.StratifiedDistributionKFold", "api/mergernet.data.match", "api/mergernet.data.match.CrossMatch", "api/mergernet.data.match.CrossMatchResult", "api/mergernet.data.match.XTable", "api/mergernet.data.preprocessing", "api/mergernet.data.preprocessing.load_jpg", "api/mergernet.data.preprocessing.load_png", "api/mergernet.data.preprocessing.normalize_rgb", "api/mergernet.data.preprocessing.one_hot_factory", "api/mergernet.data.preprocessing.standardize_rgb", "api/mergernet.data.rgb", "api/mergernet.data.rgb.RGB", "api/mergernet.data.sanitization", "api/mergernet.data.sanitization.DatasetSanitization", "api/mergernet.data.trilogy", "api/mergernet.data.trilogy.MakeImg", "api/mergernet.data.trilogy.RGB2im", "api/mergernet.data.trilogy.adjust_saturation", "api/mergernet.data.trilogy.da", "api/mergernet.data.trilogy.get_clip", "api/mergernet.data.trilogy.get_levels", "api/mergernet.data.trilogy.imscale", "api/mergernet.data.trilogy.meanstd", "api/mergernet.data.trilogy.rms", "api/mergernet.data.trilogy.satK2m", "api/mergernet.data.trilogy.setLevel", "api/mergernet.estimators", "api/mergernet.estimators.automl", "api/mergernet.estimators.automl.OptunaEstimator", "api/mergernet.estimators.base", "api/mergernet.estimators.base.Estimator", "api/mergernet.estimators.base.EstimatorConfig", "api/mergernet.estimators.base.EstimatorRegistry", "api/mergernet.estimators.decals", "api/mergernet.estimators.decals.ZoobotEstimator", "api/mergernet.estimators.parametric", "api/mergernet.estimators.parametric.ParametricEstimator", "api/mergernet.estimators.similarity", "api/mergernet.estimators.similarity.SimilarityEstimator", "api/mergernet.jobs", "api/mergernet.jobs.j001", "api/mergernet.jobs.j001.Job", "api/mergernet.jobs.j002", "api/mergernet.jobs.j002.Job", "api/mergernet.jobs.j003", "api/mergernet.jobs.j003.Job", "api/mergernet.jobs.j004", "api/mergernet.jobs.j004.Job", "api/mergernet.jobs.j005", "api/mergernet.jobs.j005.Job", "api/mergernet.jobs.j006", "api/mergernet.jobs.j006.Job", "api/mergernet.jobs.j007", "api/mergernet.jobs.j007.Job", "api/mergernet.jobs.j008", "api/mergernet.jobs.j008.Job", "api/mergernet.jobs.j009", "api/mergernet.jobs.j009.Job", "api/mergernet.model", "api/mergernet.model.automl", "api/mergernet.model.automl.optuna_train", "api/mergernet.model.baseline", "api/mergernet.model.baseline.finetune_train", "api/mergernet.model.callbacks", "api/mergernet.model.callbacks.DeltaStopping", "api/mergernet.model.callbacks.MWandbCallback", "api/mergernet.model.callbacks.MyWandbCallback", "api/mergernet.model.callbacks.PruneCallback", "api/mergernet.model.callbacks.SaveBestTrialCallback", "api/mergernet.model.inference", "api/mergernet.model.inference.Predictor", "api/mergernet.model.utils", "api/mergernet.model.utils.get_conv_arch", "api/mergernet.model.utils.history_to_dataframe", "api/mergernet.model.utils.load_model", "api/mergernet.model.utils.set_trainable_state", "api/mergernet.model.utils.setup_seeds", "api/mergernet.services", "api/mergernet.services.github", "api/mergernet.services.github.GithubService", "api/mergernet.services.google", "api/mergernet.services.google.GDrive", "api/mergernet.services.imaging", "api/mergernet.services.imaging.ImagingService", "api/mergernet.services.legacy", "api/mergernet.services.legacy.LegacyService", "api/mergernet.services.sciserver", "api/mergernet.services.sciserver.SciServer", "api/mergernet.services.sdss", "api/mergernet.services.sdss.SloanService", "api/mergernet.services.splus", "api/mergernet.services.splus.ImageType", "api/mergernet.services.splus.SplusService", "api/mergernet.services.splus.update_authorization", "api/mergernet.services.tap", "api/mergernet.services.tap.TapService", "api/mergernet.services.tensorboard", "api/mergernet.services.tensorboard.TensorboardService", "api/mergernet.services.utils", "api/mergernet.services.utils.append_query_params", "api/mergernet.services.utils.batch_download_file", "api/mergernet.services.utils.download_file", "api/mergernet.services.utils.parallel_function_executor", "api/mergernet.visualization", "api/mergernet.visualization.plot", "api/mergernet.visualization.plot.Serie", "api/mergernet.visualization.plot.color_color", "api/mergernet.visualization.plot.conf_matrix", "api/mergernet.visualization.plot.data_distribution", "api/mergernet.visualization.plot.mag_class_distribution", "api/mergernet.visualization.plot.object_position", "api/mergernet.visualization.plot.roc", "api/mergernet.visualization.plot.train_metrics", "experiments", "index", "reference"], "filenames": ["api/mergernet.core.rst", "api/mergernet.core.constants.rst", "api/mergernet.core.experiment.rst", "api/mergernet.core.experiment.Experiment.rst", "api/mergernet.core.experiment.backup_model.rst", "api/mergernet.core.hp.rst", "api/mergernet.core.hp.CategoricalHyperParameter.rst", "api/mergernet.core.hp.ConstantHyperParameter.rst", "api/mergernet.core.hp.FloatHyperParameter.rst", "api/mergernet.core.hp.HP.rst", "api/mergernet.core.hp.HyperParameter.rst", "api/mergernet.core.hp.HyperParameterSet.rst", "api/mergernet.core.hp.IntHyperParameter.rst", "api/mergernet.core.logging.rst", "api/mergernet.core.logging.configure_root_logger.rst", "api/mergernet.core.utils.rst", "api/mergernet.core.utils.CachedDataFrame.rst", "api/mergernet.core.utils.SingletonMeta.rst", "api/mergernet.core.utils.Timming.rst", "api/mergernet.core.utils.array_fallback.rst", "api/mergernet.core.utils.classproperty.rst", "api/mergernet.core.utils.compress_fits.rst", "api/mergernet.core.utils.deep_update.rst", "api/mergernet.core.utils.find_by_value.rst", "api/mergernet.core.utils.heading.rst", "api/mergernet.core.utils.iauname.rst", "api/mergernet.core.utils.iauname_relative_path.rst", "api/mergernet.core.utils.load_image.rst", "api/mergernet.core.utils.load_table.rst", "api/mergernet.core.utils.not_in.rst", "api/mergernet.core.utils.save_table.rst", "api/mergernet.core.utils.serialize.rst", "api/mergernet.core.utils.unique_path.rst", "api/mergernet.data.rst", "api/mergernet.data.dataset.rst", "api/mergernet.data.dataset.Dataset.rst", "api/mergernet.data.dataset_config.rst", "api/mergernet.data.dataset_config.DatasetConfig.rst", "api/mergernet.data.dataset_config.DatasetRegistry.rst", "api/mergernet.data.image.rst", "api/mergernet.data.image.ImageTransform.rst", "api/mergernet.data.image.LegacyRGB.rst", "api/mergernet.data.image.LuptonRGB.rst", "api/mergernet.data.image.asinh_map.rst", "api/mergernet.data.image.asinh_map2.rst", "api/mergernet.data.kfold.rst", "api/mergernet.data.kfold.DistributionKFold.rst", "api/mergernet.data.kfold.StratifiedDistributionKFold.rst", "api/mergernet.data.match.rst", "api/mergernet.data.match.CrossMatch.rst", "api/mergernet.data.match.CrossMatchResult.rst", "api/mergernet.data.match.XTable.rst", "api/mergernet.data.preprocessing.rst", "api/mergernet.data.preprocessing.load_jpg.rst", "api/mergernet.data.preprocessing.load_png.rst", "api/mergernet.data.preprocessing.normalize_rgb.rst", "api/mergernet.data.preprocessing.one_hot_factory.rst", "api/mergernet.data.preprocessing.standardize_rgb.rst", "api/mergernet.data.rgb.rst", "api/mergernet.data.rgb.RGB.rst", "api/mergernet.data.sanitization.rst", "api/mergernet.data.sanitization.DatasetSanitization.rst", "api/mergernet.data.trilogy.rst", "api/mergernet.data.trilogy.MakeImg.rst", "api/mergernet.data.trilogy.RGB2im.rst", "api/mergernet.data.trilogy.adjust_saturation.rst", "api/mergernet.data.trilogy.da.rst", "api/mergernet.data.trilogy.get_clip.rst", "api/mergernet.data.trilogy.get_levels.rst", "api/mergernet.data.trilogy.imscale.rst", "api/mergernet.data.trilogy.meanstd.rst", "api/mergernet.data.trilogy.rms.rst", "api/mergernet.data.trilogy.satK2m.rst", "api/mergernet.data.trilogy.setLevel.rst", "api/mergernet.estimators.rst", "api/mergernet.estimators.automl.rst", "api/mergernet.estimators.automl.OptunaEstimator.rst", "api/mergernet.estimators.base.rst", "api/mergernet.estimators.base.Estimator.rst", "api/mergernet.estimators.base.EstimatorConfig.rst", "api/mergernet.estimators.base.EstimatorRegistry.rst", "api/mergernet.estimators.decals.rst", "api/mergernet.estimators.decals.ZoobotEstimator.rst", "api/mergernet.estimators.parametric.rst", "api/mergernet.estimators.parametric.ParametricEstimator.rst", "api/mergernet.estimators.similarity.rst", "api/mergernet.estimators.similarity.SimilarityEstimator.rst", "api/mergernet.jobs.rst", "api/mergernet.jobs.j001.rst", "api/mergernet.jobs.j001.Job.rst", "api/mergernet.jobs.j002.rst", "api/mergernet.jobs.j002.Job.rst", "api/mergernet.jobs.j003.rst", "api/mergernet.jobs.j003.Job.rst", "api/mergernet.jobs.j004.rst", "api/mergernet.jobs.j004.Job.rst", "api/mergernet.jobs.j005.rst", "api/mergernet.jobs.j005.Job.rst", "api/mergernet.jobs.j006.rst", "api/mergernet.jobs.j006.Job.rst", "api/mergernet.jobs.j007.rst", "api/mergernet.jobs.j007.Job.rst", "api/mergernet.jobs.j008.rst", "api/mergernet.jobs.j008.Job.rst", "api/mergernet.jobs.j009.rst", "api/mergernet.jobs.j009.Job.rst", "api/mergernet.model.rst", "api/mergernet.model.automl.rst", "api/mergernet.model.automl.optuna_train.rst", "api/mergernet.model.baseline.rst", "api/mergernet.model.baseline.finetune_train.rst", "api/mergernet.model.callbacks.rst", "api/mergernet.model.callbacks.DeltaStopping.rst", "api/mergernet.model.callbacks.MWandbCallback.rst", "api/mergernet.model.callbacks.MyWandbCallback.rst", "api/mergernet.model.callbacks.PruneCallback.rst", "api/mergernet.model.callbacks.SaveBestTrialCallback.rst", "api/mergernet.model.inference.rst", "api/mergernet.model.inference.Predictor.rst", "api/mergernet.model.utils.rst", "api/mergernet.model.utils.get_conv_arch.rst", "api/mergernet.model.utils.history_to_dataframe.rst", "api/mergernet.model.utils.load_model.rst", "api/mergernet.model.utils.set_trainable_state.rst", "api/mergernet.model.utils.setup_seeds.rst", "api/mergernet.services.rst", "api/mergernet.services.github.rst", "api/mergernet.services.github.GithubService.rst", "api/mergernet.services.google.rst", "api/mergernet.services.google.GDrive.rst", "api/mergernet.services.imaging.rst", "api/mergernet.services.imaging.ImagingService.rst", "api/mergernet.services.legacy.rst", "api/mergernet.services.legacy.LegacyService.rst", "api/mergernet.services.sciserver.rst", "api/mergernet.services.sciserver.SciServer.rst", "api/mergernet.services.sdss.rst", "api/mergernet.services.sdss.SloanService.rst", "api/mergernet.services.splus.rst", "api/mergernet.services.splus.ImageType.rst", "api/mergernet.services.splus.SplusService.rst", "api/mergernet.services.splus.update_authorization.rst", "api/mergernet.services.tap.rst", "api/mergernet.services.tap.TapService.rst", "api/mergernet.services.tensorboard.rst", "api/mergernet.services.tensorboard.TensorboardService.rst", "api/mergernet.services.utils.rst", "api/mergernet.services.utils.append_query_params.rst", "api/mergernet.services.utils.batch_download_file.rst", "api/mergernet.services.utils.download_file.rst", "api/mergernet.services.utils.parallel_function_executor.rst", "api/mergernet.visualization.rst", "api/mergernet.visualization.plot.rst", "api/mergernet.visualization.plot.Serie.rst", "api/mergernet.visualization.plot.color_color.rst", "api/mergernet.visualization.plot.conf_matrix.rst", "api/mergernet.visualization.plot.data_distribution.rst", "api/mergernet.visualization.plot.mag_class_distribution.rst", "api/mergernet.visualization.plot.object_position.rst", "api/mergernet.visualization.plot.roc.rst", "api/mergernet.visualization.plot.train_metrics.rst", "experiments.rst", "index.rst", "reference.rst"], "titles": ["mergernet.core", "mergernet.core.constants", "mergernet.core.experiment", "Experiment", "mergernet.core.experiment.backup_model", "mergernet.core.hp", "CategoricalHyperParameter", "ConstantHyperParameter", "FloatHyperParameter", "HP", "HyperParameter", "HyperParameterSet", "IntHyperParameter", "mergernet.core.logging", "mergernet.core.logging.configure_root_logger", "mergernet.core.utils", "CachedDataFrame", "SingletonMeta", "Timming", "mergernet.core.utils.array_fallback", "classproperty", "mergernet.core.utils.compress_fits", "mergernet.core.utils.deep_update", "mergernet.core.utils.find_by_value", "mergernet.core.utils.heading", "mergernet.core.utils.iauname", "mergernet.core.utils.iauname_relative_path", "mergernet.core.utils.load_image", "mergernet.core.utils.load_table", "mergernet.core.utils.not_in", "mergernet.core.utils.save_table", "mergernet.core.utils.serialize", "mergernet.core.utils.unique_path", "mergernet.data", "mergernet.data.dataset", "Dataset", "mergernet.data.dataset_config", "DatasetConfig", "DatasetRegistry", "mergernet.data.image", "ImageTransform", "LegacyRGB", "LuptonRGB", "mergernet.data.image.asinh_map", "mergernet.data.image.asinh_map2", "mergernet.data.kfold", "DistributionKFold", "StratifiedDistributionKFold", "mergernet.data.match", "CrossMatch", "CrossMatchResult", "XTable", "mergernet.data.preprocessing", "mergernet.data.preprocessing.load_jpg", "mergernet.data.preprocessing.load_png", "mergernet.data.preprocessing.normalize_rgb", "mergernet.data.preprocessing.one_hot_factory", "mergernet.data.preprocessing.standardize_rgb", "mergernet.data.rgb", "RGB", "mergernet.data.sanitization", "DatasetSanitization", "mergernet.data.trilogy", "MakeImg", "mergernet.data.trilogy.RGB2im", "mergernet.data.trilogy.adjust_saturation", "mergernet.data.trilogy.da", "mergernet.data.trilogy.get_clip", "mergernet.data.trilogy.get_levels", "mergernet.data.trilogy.imscale", "mergernet.data.trilogy.meanstd", "mergernet.data.trilogy.rms", "mergernet.data.trilogy.satK2m", "mergernet.data.trilogy.setLevel", "mergernet.estimators", "mergernet.estimators.automl", "OptunaEstimator", "mergernet.estimators.base", "Estimator", "EstimatorConfig", "EstimatorRegistry", "mergernet.estimators.decals", "ZoobotEstimator", "mergernet.estimators.parametric", "ParametricEstimator", "mergernet.estimators.similarity", "SimilarityEstimator", "mergernet.jobs", "mergernet.jobs.j001", "Job", "mergernet.jobs.j002", "Job", "mergernet.jobs.j003", "Job", "mergernet.jobs.j004", "Job", "mergernet.jobs.j005", "Job", "mergernet.jobs.j006", "Job", "mergernet.jobs.j007", "Job", "mergernet.jobs.j008", "Job", "mergernet.jobs.j009", "Job", "mergernet.model", "mergernet.model.automl", "mergernet.model.automl.optuna_train", "mergernet.model.baseline", "mergernet.model.baseline.finetune_train", "mergernet.model.callbacks", "DeltaStopping", "MWandbCallback", "MyWandbCallback", "PruneCallback", "SaveBestTrialCallback", "mergernet.model.inference", "Predictor", "mergernet.model.utils", "mergernet.model.utils.get_conv_arch", "mergernet.model.utils.history_to_dataframe", "mergernet.model.utils.load_model", "mergernet.model.utils.set_trainable_state", "mergernet.model.utils.setup_seeds", "mergernet.services", "mergernet.services.github", "GithubService", "mergernet.services.google", "GDrive", "mergernet.services.imaging", "ImagingService", "mergernet.services.legacy", "LegacyService", "mergernet.services.sciserver", "SciServer", "mergernet.services.sdss", "SloanService", "mergernet.services.splus", "ImageType", "SplusService", "mergernet.services.splus.update_authorization", "mergernet.services.tap", "TapService", "mergernet.services.tensorboard", "TensorboardService", "mergernet.services.utils", "mergernet.services.utils.append_query_params", "mergernet.services.utils.batch_download_file", "mergernet.services.utils.download_file", "mergernet.services.utils.parallel_function_executor", "mergernet.visualization", "mergernet.visualization.plot", "Serie", "mergernet.visualization.plot.color_color", "mergernet.visualization.plot.conf_matrix", "mergernet.visualization.plot.data_distribution", "mergernet.visualization.plot.mag_class_distribution", "mergernet.visualization.plot.object_position", "mergernet.visualization.plot.roc", "mergernet.visualization.plot.train_metrics", "Experiments", "Welcome to mergernet\u2019s documentation!", "API Reference"], "terms": {"modul": [0, 33, 34, 60, 74, 87, 106, 125, 138, 151, 162], "function": [2, 13, 15, 26, 34, 39, 52, 61, 62, 76, 107, 108, 109, 112, 113, 114, 115, 116, 119, 138, 140, 141, 146, 152], "class": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 152, 153, 159], "mergernet": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 35, 37, 38, 40, 41, 42, 46, 47, 49, 50, 51, 59, 61, 63, 76, 78, 79, 80, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 118, 127, 129, 131, 133, 135, 137, 139, 140, 143, 145, 153, 161], "core": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 61, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 162], "sourc": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 129, 131, 133, 135, 137, 139, 140, 141, 143, 145, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160], "base": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 35, 37, 38, 40, 41, 42, 46, 47, 49, 50, 51, 59, 61, 63, 76, 78, 79, 80, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 118, 127, 129, 131, 133, 135, 137, 139, 140, 143, 145, 153], "object": [3, 9, 10, 11, 16, 17, 18, 25, 26, 31, 35, 37, 38, 40, 41, 42, 46, 47, 49, 50, 51, 59, 61, 63, 76, 78, 79, 80, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 118, 127, 129, 131, 133, 135, 137, 140, 143, 145, 153], "thi": [3, 11, 26, 34, 35, 61, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 138, 140, 141], "store": [3, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 133], "all": [3, 11, 26, 29, 34, 35, 38, 42, 61, 62, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 140, 159], "relev": [3, 11, 89, 91, 93, 95, 97, 99, 101, 103, 105], "inform": 3, "an": [3, 31, 42, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "which": [3, 34, 35, 42, 61, 114], "can": [3, 34, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 140, 141, 159], "access": [3, 11, 16, 17, 161], "from": [3, 27, 35, 42, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "anywher": 3, "applic": 3, "": [3, 11, 17, 25, 38, 42, 112, 113, 114, 115, 116, 139, 140, 141], "implement": [3, 17, 42], "singleton": [3, 17], "pattern": 3, "The": [3, 4, 11, 16, 23, 24, 25, 26, 29, 31, 34, 35, 61, 76, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 133, 140, 141, 159], "ar": [3, 29, 35, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 133, 140], "track": 3, "us": [3, 11, 17, 26, 34, 35, 42, 43, 44, 61, 105, 113, 114, 138, 140], "two": [3, 35, 61, 114], "valu": [3, 6, 7, 8, 9, 10, 11, 12, 23, 35, 42, 61, 112, 113, 114, 115, 116, 140, 159], "exp_id": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 122], "run_id": [3, 122], "first": [3, 17, 35], "i": [3, 26, 34, 35, 43, 44, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 133, 140, 159], "human": [3, 42], "readabl": 3, "integ": [3, 112, 113, 114, 115, 116], "set": [3, 11, 42, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "user": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "relat": 3, "task": [3, 34, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105], "specifi": [3, 11, 35, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105], "entrypoint": 3, "file": [3, 21, 27, 35, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 133, 137, 140], "And": 3, "second": 3, "auto": [3, 114], "gener": [3, 34, 35, 46, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 140], "hex": 3, "token": [3, 140, 141], "differ": [3, 11], "re": 3, "run": [3, 61, 84, 89, 91, 93, 95, 97, 99, 101, 103, 105, 110, 112, 113, 114, 115, 116, 137], "same": [3, 24, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 133, 140], "attribut": [3, 20, 35, 38, 50, 76, 78, 80, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 129, 139], "tracker": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "context": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "manag": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "creat": [3, 11, 35, 42, 61, 88, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "wandb": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "project": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "paramet": [3, 4, 11, 16, 23, 24, 25, 26, 27, 29, 31, 35, 42, 43, 44, 61, 76, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 133, 140, 141, 159], "config": [3, 35, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105], "dict": [3, 6, 7, 8, 10, 11, 12, 23, 35, 47, 59, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 118, 121, 127, 137, 140, 147, 150, 157], "configur": [3, 14, 35, 37, 38, 89, 91, 93, 95, 97, 99, 101, 103, 105], "job_typ": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "str": [3, 9, 11, 16, 18, 21, 24, 25, 26, 27, 28, 30, 31, 32, 35, 40, 41, 42, 59, 61, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 110, 114, 115, 116, 118, 120, 122, 123, 127, 129, 131, 133, 137, 140, 143, 145, 147, 148, 149, 150, 155, 157, 158], "job": [3, 162], "type": [3, 9, 11, 16, 17, 23, 25, 26, 27, 29, 31, 35, 42, 43, 44, 59, 61, 76, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 139, 140, 141], "name": [3, 9, 11, 25, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 118, 122, 145], "tag": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "list": [3, 11, 25, 26, 29, 35, 40, 41, 42, 47, 61, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 110, 114, 118, 131, 133, 137, 140, 143, 148, 159], "init_wandb": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "_post_run": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "post": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "automat": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "perform": [3, 31, 34, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 138, 140], "when": [3, 11, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "call": [3, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 141], "includ": [3, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 159], "upload": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 118], "regist": [3, 11, 89, 91, 93, 95, 97, 99, 101, 103, 105], "artifact": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "upload_registered_artifact": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "_pre_run": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "pre": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "clear": [3, 11, 89, 91, 93, 95, 97, 99, 101, 103, 105], "log": [3, 9, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "setup": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "global": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "_setup_experiment_attribut": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "identifi": [3, 11, 89, 91, 93, 95, 97, 99, 101, 103, 105], "system": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "need": [3, 27, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 141], "e": [3, 35, 89, 91, 93, 95, 97, 99, 101, 103, 105, 140], "g": [3, 35, 89, 91, 93, 95, 97, 99, 101, 103, 105, 140], "dataset": [3, 4, 37, 38, 60, 61, 89, 91, 93, 95, 97, 98, 99, 100, 103, 108, 110], "model": [3, 4, 34, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 100, 101, 103, 105, 112, 113, 114, 115, 116, 118, 159, 162], "predict": [3, 4, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 118, 159], "classmethod": [3, 16, 89, 91, 93, 95, 97, 99, 101, 103, 105], "download_file_gd": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "fname": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "option": [3, 6, 7, 8, 9, 10, 11, 12, 21, 26, 35, 42, 43, 44, 61, 82, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 110, 113, 114, 118, 121, 127, 129, 131, 133, 137, 140, 148, 149, 155, 157, 158], "int": [3, 9, 12, 21, 35, 47, 49, 59, 61, 82, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 113, 114, 115, 122, 127, 131, 133, 137, 140, 143, 148, 150, 157, 159], "none": [3, 6, 7, 8, 9, 10, 11, 12, 19, 21, 26, 35, 50, 53, 54, 55, 57, 61, 67, 82, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 110, 112, 113, 114, 115, 116, 118, 127, 129, 131, 133, 137, 140, 148, 149, 154, 155, 156, 157, 158, 159, 160], "share": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "bool": [3, 4, 6, 7, 8, 9, 10, 12, 21, 28, 30, 35, 42, 61, 63, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 123, 127, 129, 137, 140, 143, 148, 149, 155], "fals": [3, 6, 7, 8, 9, 10, 12, 35, 61, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 127, 137, 140, 143, 148, 149, 153, 154, 155], "download": [3, 35, 76, 78, 82, 84, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 127, 133, 138, 140], "googl": [3, 4, 89, 91, 93, 95, 97, 99, 101, 103, 105, 129], "drive": [3, 4, 89, 91, 93, 95, 97, 99, 101, 103, 105], "insid": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "gd_artifact_path": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "default": [3, 11, 28, 30, 35, 38, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 140], "current": [3, 76, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "id": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "onli": [3, 26, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 140], "folder": [3, 35, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105], "finish_wandb": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "close": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "connect": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "tracer": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "register_artifact": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "servic": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 127, 129, 131, 133, 135, 137, 139, 140, 143, 145, 162], "correspond": [3, 23, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105], "end": [3, 18, 26, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "filenam": [3, 35, 76, 78, 82, 84, 89, 91, 93, 95, 97, 99, 101, 103, 105, 154, 156, 159, 160], "one": [3, 35, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "gdrive": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "github": [3, 4, 62, 89, 91, 93, 95, 97, 99, 101, 103, 105, 127], "both": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "defin": [3, 34, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 133], "abstract": [3, 34, 35, 40, 78, 89, 91, 93, 95, 97, 99, 101, 103, 105, 131], "method": [3, 11, 17, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 138, 140], "execut": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 140], "upload_file_gd": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "data": [3, 30, 35, 37, 38, 40, 41, 42, 46, 47, 49, 50, 51, 59, 61, 63, 89, 91, 93, 95, 97, 98, 99, 101, 103, 105, 112, 113, 114, 115, 116, 127, 162], "ani": [3, 4, 6, 7, 9, 11, 23, 31, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 140, 150], "content": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 127], "If": [3, 42, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 140, 159], "consid": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "local_artifact_path": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "json": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "serializ": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "python": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114], "byte": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 149], "_exp_creat": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "flag": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "wa": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 140], "start": [3, 18, 76, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "_registered_artifact": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "exp_nam": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "exp_": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "gd_exp_path": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "path": [3, 16, 21, 26, 27, 28, 30, 32, 35, 40, 41, 42, 59, 61, 63, 82, 86, 89, 91, 93, 95, 97, 99, 101, 103, 105, 127, 129, 131, 133, 137, 140, 143, 145, 148, 149, 157], "where": [3, 43, 44, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 114, 133, 140, 159], "gd_shared_path": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "extern": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "local_exp_path": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "local": [3, 27, 35, 89, 91, 93, 95, 97, 99, 101, 103, 105, 129], "environ": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 140], "output": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116, 140], "local_shared_path": [3, 35, 89, 91, 93, 95, 97, 99, 101, 103, 105], "experiemnt": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105], "note": [3, 89, 91, 93, 95, 97, 99, 101, 103, 105, 112, 113, 114, 115, 116], "save_histori": 4, "true": [4, 21, 28, 30, 35, 42, 61, 63, 76, 78, 82, 84, 86, 114, 140, 159], "save_test_pr": 4, "save_dataset_config": 4, "save_model": [4, 114], "tf": [4, 35, 76, 112, 113, 114, 115, 116], "kera": [4, 76, 112, 113, 114, 115, 116], "backup": 4, "instanc": [4, 11], "train": [4, 11, 35, 76, 78, 82, 84, 86, 101, 104, 112, 113, 114, 115, 116], "histori": [4, 76, 78, 84, 114, 121], "must": [4, 26, 61, 86, 133, 140], "save": [4, 61, 114, 133, 140, 157, 158], "test": [4, 35, 88, 89, 112, 113, 114, 115, 116], "dataset_config": [4, 35, 37, 38], "tensorflow": 4, "hp": [6, 7, 8, 10, 11, 12, 108, 110], "hyperparamet": [6, 7, 8, 11, 12], "clear_last_valu": [6, 7, 8, 10, 12], "static": [6, 7, 8, 9, 10, 12, 35, 47, 86, 129, 135], "from_dict": [6, 7, 8, 10, 12], "param": [6, 7, 8, 10, 12, 37, 112, 113, 114, 115, 116, 140, 150, 159], "set_attr": [6, 7, 8, 10, 12], "kei": [6, 7, 8, 10, 11, 12, 23, 35, 112, 113, 114, 115, 116], "set_trial": [6, 7, 8, 10, 11, 12], "trial": [6, 7, 8, 10, 11, 12, 76], "frozentri": [6, 7, 8, 10, 11, 12], "suggest": [6, 7, 8, 10, 11, 12], "to_dict": [6, 7, 8, 10, 12], "show_nam": [6, 7, 8, 10, 12], "float": [8, 9, 25, 26, 42, 43, 44, 47, 49, 59, 61, 63, 76, 78, 82, 84, 86, 113, 114, 131, 133, 137, 140, 157], "cat": 9, "choic": [9, 42], "sequenc": [9, 11, 137, 150, 155], "categoricalhyperparamet": 9, "const": 9, "constanthyperparamet": [9, 11], "num": 9, "low": [9, 42], "union": [9, 11, 16, 21, 25, 26, 27, 28, 30, 32, 40, 41, 42, 61, 76, 78, 82, 84, 86, 127, 129, 133, 137, 140, 143, 145, 148, 149, 157], "high": [9, 34, 35], "step": [9, 114], "dtype": 9, "floathyperparamet": 9, "inthyperparamet": 9, "repres": [11, 42, 114, 139], "handl": 11, "arg": [11, 22, 76], "factori": 11, "add": 11, "pars": 11, "dictionari": [11, 23], "arrai": [11, 19, 25, 27, 42, 61, 114], "like": [11, 61], "arrar": 11, "ad": [11, 61], "clear_values_dict": 11, "last_valu": 11, "properti": [11, 20, 76, 78, 82, 84, 86], "condit": 11, "get": [11, 35, 129, 140], "its": [11, 61], "For": [11, 112, 113, 114, 115, 116], "than": [11, 61], "optuna": [11, 76, 104, 105], "seggest": 11, "api": [11, 162], "hyperparam": 11, "optuan": 11, "return": [11, 16, 17, 23, 25, 26, 27, 29, 31, 35, 42, 43, 44, 61, 76, 112, 113, 114, 115, 116, 140, 141], "wasn": 11, "t": [11, 114], "found": [11, 35], "to_values_dict": 11, "represent": [11, 34, 35], "last": [11, 112, 113, 114, 115, 116], "root": 14, "logger": 14, "util": [16, 17, 18, 20, 61], "hold": 16, "cach": 16, "version": 16, "panda": [16, 86], "datafram": [16, 28, 30, 35, 50, 61, 86, 121, 137, 157], "memori": 16, "later": [16, 114], "load": [16, 27, 34], "pd": 16, "_cach": 16, "thread": [17, 140], "safe": 17, "__new__": [17, 20], "kwarg": [17, 20, 61, 76, 131, 133, 137, 140], "mro": 17, "resolut": 17, "order": [17, 42, 61, 114], "_instanc": 17, "_lock": [17, 140], "allocate_lock": 17, "unlock": 17, "_thread": 17, "lock": [17, 140], "synchron": 17, "dure": [17, 42, 112, 113, 114, 115, 116], "_format_tim": 18, "dt": 18, "timedelta": 18, "durat": 18, "prefix": [19, 26, 112, 113, 114, 115, 116], "delet": 20, "descriptor": 20, "chang": [20, 61, 112, 113, 114, 115, 116], "getter": 20, "setter": 20, "fdel": 20, "fget": 20, "fset": 20, "binaryio": 21, "compress_typ": 21, "hcompress_1": 21, "hcomp_scal": 21, "3": [21, 35, 42, 61, 70, 100, 101, 140, 143], "quantize_level": 21, "10": [21, 38, 61], "quantize_method": 21, "1": [21, 42, 43, 44, 49, 61, 114, 140, 157, 158], "ext": 21, "0": [21, 38, 42, 43, 61, 63, 76, 78, 82, 84, 86, 112, 113, 114, 115, 116, 131, 133, 137, 140, 158, 159], "save_path": [21, 40, 41, 42, 59, 86, 131, 133, 137, 140, 143, 148, 149], "replac": [21, 35, 76, 78, 82, 84, 86, 137, 140, 148, 149], "origin": [22, 62], "new": [22, 61], "d": [23, 35], "search": [23, 162], "msg": 24, "sep": 24, "print": [24, 61], "messag": 24, "rule": [24, 34], "bellow": 24, "width": [24, 131, 133, 137], "string": [24, 61, 114, 140], "charact": [24, 42], "ra": [25, 26, 59, 86, 131, 133, 137, 140, 158], "ndarrai": [25, 27, 35, 40, 41, 42, 43, 44, 49, 50, 61, 63, 82, 114, 137], "dec": [25, 26, 59, 86, 131, 133, 137, 140, 158], "receiv": [25, 114, 140], "angular": 25, "posit": 25, "iau2000": [25, 61], "right": [25, 133, 140], "ascens": [25, 133, 140], "declin": [25, 133, 140], "187": 25, "70592": 25, "12": [25, 157, 158], "39112": 25, "j123049": [25, 26], "42": [25, 26, 140], "122328": [25, 26], "03": [25, 26], "format": [25, 114], "iau": 25, "iaunam": [26, 35, 61], "suffix": [26, 61], "calcul": [26, 113, 114], "nest": 26, "given": 26, "pass": [26, 61, 112, 113, 114, 115, 116, 140], "comput": [26, 29, 61, 114, 159], "prepend": [26, 114], "begin": [26, 112, 113, 114, 115, 116], "append": [26, 133], "iaunames_relative_path": 26, "png": [26, 27, 76, 78, 82, 84, 140], "j123": 26, "rel": [26, 154], "imag": [27, 35, 38, 40, 41, 42, 61, 63, 104, 105, 114, 131, 138, 139, 140], "storag": 27, "numpi": [27, 35, 42, 43, 44], "support": 27, "sever": 27, "inclu": 27, "jpg": [27, 86, 137], "npy": 27, "npz": 27, "fit": [27, 98, 99, 112, 113, 114, 115, 116, 138, 139, 140], "pathlib": 27, "desir": [27, 133], "convert": [27, 114], "ref": 29, "comp": 29, "element": [29, 61], "refer": [29, 162], "comparison": 29, "A": [29, 35, 38, 61, 112, 113, 114, 115, 116, 140], "contain": [29, 35, 61, 114], "obj": 31, "cast": 31, "depend": 31, "level": [34, 35, 69], "previous": 34, "tfrecord": 34, "main": 34, "develop": 34, "process": [34, 140], "deep": 34, "learn": 34, "other": [34, 35, 114], "well": 34, "who": 34, "complementari": 34, "io": 35, "oper": 35, "prepar": 35, "split": [35, 46], "datasetconfig": [35, 38], "databas": [35, 138, 140], "registri": [35, 38, 76, 78, 82, 84, 86], "_create_dataset_t": 35, "scan": 35, "tabl": [35, 49, 50, 61, 86, 114], "csv": [35, 140], "ha": [35, 114], "_discretize_label": 35, "y": [35, 43, 44, 47, 53, 54, 55, 57, 114], "find": 35, "ocurr": 35, "match": [35, 49, 50, 51], "label_map": [35, 118, 157], "respect": 35, "np": 35, "_transform_imag": 35, "compute_class_weight": 35, "concat_fold_column": 35, "df": [35, 157], "fname_column": 35, "class_column": 35, "r_column": 35, "n_split": [35, 47], "5": [35, 38, 70, 82, 158], "bin": [35, 61], "check": [35, 61, 140], "destin": 35, "exist": [35, 129, 140], "miss": [35, 114], "web": 35, "resourc": 35, "get_x": 35, "get_x_by_fold": 35, "fold": 35, "kind": 35, "x": [35, 43, 44, 47, 53, 54, 55, 57, 71, 114], "number": [35, 61, 114, 140, 159], "get_fold": 35, "tupl": [35, 49, 61, 76, 78, 82, 84, 86, 114, 120, 133, 137, 157], "datasetv2": 35, "select": 35, "secound": 35, "get_images_path": 35, "get_preds_dataset": 35, "get_tabl": 35, "is_dataset_download": 35, "experi": [35, 88, 89, 91, 93, 95, 97, 99, 100, 101, 103, 105, 162], "dir": 35, "otherwis": [35, 140], "prepare_data": 35, "batch_siz": 35, "64": 35, "buffer_s": 35, "1000": 35, "datasetregistri": 35, "bin_legacy_north_rgb_128": [38, 101, 105], "binari": [38, 104, 105, 114], "merger": [38, 104, 105], "non": [38, 43, 44, 104, 105], "legaci": [38, 104, 105, 133], "128x128": 38, "rgb": [38, 42, 64, 65, 104, 105, 114, 133, 138, 140], "north": [38, 104, 105], "sky": [38, 42], "pixscal": 38, "55": [38, 131, 133, 137], "arcsec": [38, 86], "pixel": [38, 42, 43, 44, 140], "bin_sdss_128": 38, "sdss": [38, 59, 137], "blind_splus_gal80_ls10_rgb_128": [38, 100, 101], "plu": [38, 139, 140, 141], "blind": 38, "sampl": [38, 61, 158], "13": 38, "r_auto": 38, "17": 38, "l": 38, "earli": 38, "grz": 38, "blind_splus_lupton_128": 38, "lupton": [38, 42, 138, 139, 140], "blind_splus_lupton_150": 38, "150x150": 38, "blind_splus_trilogy_128": 38, "trilogi": [38, 63, 138, 139, 140], "blind_splus_trilogy_150": 38, "darg_no_inspect": 38, "mesd_legacy_128": 38, "mesd": 38, "survei": [38, 133], "mesd_sdss_128": 38, "abc": [40, 78, 131], "batch_transform": [40, 41, 42], "transform": [40, 41, 42, 43, 44], "_abc_impl": [40, 41, 42, 76, 78, 82, 84, 86, 131, 133], "_abc_data": [40, 41, 42, 76, 78, 82, 84, 86, 131, 133], "imagetransform": [41, 42], "img": [41, 42, 114], "interpret": 42, "multi": [42, 140], "band": [42, 137, 138, 140], "follow": [42, 43, 44, 61], "comment": 42, "2004": 42, "preserv": 42, "colour": 42, "rescal": [42, 43, 44], "linearli": 42, "scale": [42, 131, 133, 137], "each": [42, 112, 113, 114, 115, 116, 159], "have": [42, 43, 44, 133, 140], "good": 42, "spread": 42, "subject": 42, "2": [42, 61, 63, 86, 112, 113, 114, 115, 116, 140, 148, 150], "nonlinear": 42, "total": 42, "intens": 42, "arcsinh": [42, 43, 44], "lie": 42, "between": 42, "mn": 42, "mx": 42, "4": [42, 59, 137, 140], "clip": 42, "desatur": 42, "signal": 42, "nois": [42, 140], "avoid": 42, "speckl": 42, "partial": 42, "shape": [42, 159], "h": 42, "w": 42, "c": 42, "dim": 42, "soften": 42, "factor": 42, "min": [42, 114], "befor": [42, 140, 141], "max": [42, 114], "reduc": 42, "satur": [42, 140], "n": [42, 70, 112, 113, 114, 115, 116, 159], "desaturate_factor": 42, "control": 42, "proport": 42, "arai": 42, "gain": [43, 44], "appli": [43, 44, 114], "linear": [43, 44], "map": [43, 44, 140], "input": [43, 44, 61, 114], "matrix": [43, 44], "telescop": [43, 44], "view": [43, 44], "textrm": [43, 44], "alpha": [43, 44, 158], "frac": 44, "sqrt": 44, "kfold": [46, 47], "distribut": [46, 47, 61], "compute_max_bin": 47, "n_class": [47, 56, 159], "split_al": 47, "split_id": 47, "table1": 49, "xtabl": 49, "table2": 49, "radiu": [49, 137], "pair_match": 49, "nthneighbor": 49, "uniqu": 49, "distanc": 50, "primary_idx": 50, "secondary_idx": 50, "get_coord": 51, "to_df": 51, "make_trilogy_fit": 59, "source_dict": 59, "r_path": 59, "g_path": 59, "b_path": 59, "trilogy_fits_to_png": 59, "r_fit": 59, "g_fit": 59, "b_fit": 59, "sky_siz": 59, "70": 59, "fig_siz": 59, "128": [59, 140], "sanit": 61, "tool": 61, "visual": [61, 114, 153, 162], "size": [61, 140, 158], "stamp": [61, 99, 133], "drop": 61, "corrupt": 61, "after": 61, "inspect": 61, "remov": 61, "row": [61, 114], "without": 61, "images_fold": 61, "check_imag": 61, "imeg": 61, "drop_images_by_files": 61, "threshold": 61, "lower": 61, "cutoff": 61, "drop_images_by_iaunam": 61, "filesize_histogram": 61, "plot": [61, 76, 78, 82, 84, 86, 153], "histogram": [61, 114], "argument": [61, 112, 113, 114, 115, 116, 140], "directli": 61, "plt": 61, "hist": 61, "get_filesize_distribut": 61, "files": 61, "get_iauname_by_files": 61, "upper": 61, "filter": 61, "iaunaem": 61, "temp": 61, "dry_run": 61, "follw": 61, "kb": 61, "_sanit": 61, "dry": 61, "mode": [61, 112, 113, 114, 115, 116], "made": 61, "just": 61, "would": 61, "instead": [61, 114, 140], "kilobyt": 61, "program": 62, "credit": 62, "author": [62, 140, 141], "dan": 62, "coe": 62, "http": [62, 138, 140], "www": 62, "stsci": 62, "edu": 62, "dcoe": 62, "intro": 62, "html": 62, "modif": 62, "gustavo": 62, "b": [62, 140], "o": 62, "schwarz": 62, "com": 62, "schwarzam": 62, "color": [63, 138], "noiselum": 63, "15": [63, 76, 78, 82, 84, 86, 140], "satperc": 63, "colorsatfac": 63, "inplac": 63, "get_arrai": 63, "savefig": 63, "k": [65, 66, 72], "m": 67, "m_min": 67, "m_max": 67, "stampsrgb": 68, "unsatperc": 68, "y1": 69, "datasort": 70, "n_sigma": 70, "pp": 73, "estim": [76, 79, 80, 82, 84, 86, 162], "automl": [76, 105], "_object": 76, "optim": [76, 78, 82, 84, 86], "oputna": 76, "metric": [76, 78, 82, 84, 86, 112, 113, 114, 115, 116], "build": [76, 78, 82, 84, 86, 114], "compile_model": [76, 78, 82, 84, 86], "tf_model": [76, 78, 82, 84, 86], "estimatorconfig": [76, 78, 80, 82, 84, 86], "get_conv_arch": [76, 78, 82, 84, 86], "pretrained_arch": [76, 78, 82, 84, 86, 120], "callabl": [76, 78, 82, 84, 86, 114, 120, 141, 150], "get_dataaug_block": [76, 78, 82, 84, 86], "flip_horizont": [76, 78, 82, 84, 86], "flip_vert": [76, 78, 82, 84, 86], "rotat": [76, 78, 82, 84, 86], "08": [76, 78, 82, 84, 86], "zoom": [76, 78, 82, 84, 86], "set_train": [76, 78, 82, 84, 86], "layer": [76, 78, 82, 84, 86, 114, 123], "trainabl": [76, 78, 82, 84, 86, 123], "best": [76, 100, 101, 114, 156, 157, 160], "estimatorregistri": [76, 78, 82, 84, 86], "freeze_conv": [78, 84], "run_nam": [78, 84, 110], "zoobot_greyscal": 80, "zoobot_rgb": 80, "decal": [82, 98, 99], "_prepare_dataset": 82, "include_top": 82, "cnn_represent": 82, "rebuild": 82, "pca": 82, "featur": 82, "n_compon": 82, "n_sampl": 82, "parametr": [84, 105], "callback": [84, 110, 112, 113, 114, 115, 116], "similar": 86, "pca_tabl": 86, "feat_0_pca": 86, "feat_1_pca": 86, "feat_n_pca": 86, "column": 86, "_get_nontrivial_neighbour": 86, "query_galaxi": 86, "seri": [86, 159], "neighbour": 86, "frame": 86, "min_sep": 86, "quantiti": 86, "100": [86, 114], "_match": 86, "n_neighbor": 86, "500": [86, 137], "manhattan": 86, "query_df": 86, "neighbours_df": 86, "images_path": 86, "image_typ": 86, "max_separ": 86, "purpos": [88, 89], "j001": 89, "j002": 91, "j003": 93, "j004": 95, "j005": 97, "1m": [98, 99], "compress": [98, 99], "j006": 99, "evalu": [100, 101, 112, 113, 114, 115, 116], "j007": 101, "j008": 103, "finetun": [104, 105], "classif": [104, 105, 114], "j009": 105, "resnet50v2": 105, "train_func": 108, "hyperparameterset": [108, 110], "n_trial": 108, "pruner": 108, "hyperband": 108, "objective_metr": 108, "val_loss": [108, 114], "objective_direct": 108, "minim": [108, 114], "resume_hash": 108, "_implements_predict_batch_hook": [112, 113, 114, 115, 116], "determin": [112, 113, 114, 115, 116], "should": [112, 113, 114, 115, 116, 133], "batch": [112, 113, 114, 115, 116, 138, 140], "_implements_test_batch_hook": [112, 113, 114, 115, 116], "_implements_train_batch_hook": [112, 113, 114, 115, 116], "on_batch_begin": [112, 113, 114, 115, 116], "backward": [112, 113, 114, 115, 116], "compat": [112, 113, 114, 115, 116], "alia": [112, 113, 114, 115, 116], "on_train_batch_begin": [112, 113, 114, 115, 116], "on_batch_end": [112, 113, 114, 115, 116], "on_train_batch_end": [112, 113, 114, 115, 116], "on_epoch_begin": [112, 113, 114, 115, 116], "epoch": [112, 113, 114, 115, 116], "subclass": [112, 113, 114, 115, 116], "overrid": [112, 113, 114, 115, 116], "action": [112, 113, 114, 115, 116], "index": [112, 113, 114, 115, 116, 162], "mai": [112, 113, 114, 115, 116], "futur": [112, 113, 114, 115, 116], "on_epoch_end": [112, 113, 114, 115, 116], "result": [112, 113, 114, 115, 116], "valid": [112, 113, 114, 115, 116], "val_": [112, 113, 114, 115, 116], "exampl": [112, 113, 115, 116, 159], "loss": [112, 113, 114, 115, 116], "accuraci": [112, 113, 114, 115, 116], "7": [112, 113, 114, 115, 116], "on_predict_batch_begin": [112, 113, 114, 115, 116], "steps_per_execut": [112, 113, 114, 115, 116], "compil": [112, 113, 114, 115, 116], "everi": [112, 113, 114, 115, 116, 133], "within": [112, 113, 114, 115, 116], "on_predict_batch_end": [112, 113, 114, 115, 116], "aggreg": [112, 113, 114, 115, 116], "up": [112, 113, 114, 115, 116], "until": [112, 113, 114, 115, 116], "on_predict_begin": [112, 113, 114, 115, 116], "on_predict_end": [112, 113, 114, 115, 116], "on_test_batch_begin": [112, 113, 114, 115, 116], "also": [112, 113, 114, 115, 116], "provid": [112, 113, 114, 115, 116], "on_test_batch_end": [112, 113, 114, 115, 116], "on_test_begin": [112, 113, 114, 115, 116], "on_test_end": [112, 113, 114, 115, 116], "on_train_begin": [112, 113, 114, 115, 116], "on_train_end": [112, 113, 114, 115, 116], "set_model": [112, 113, 114, 115, 116], "set_param": [112, 113, 114, 115, 116], "_keras_api_nam": [112, 113, 114, 115, 116], "_keras_api_names_v1": [112, 113, 114, 115, 116], "get_flop": [113, 114], "flop": [113, 114], "gflop": [113, 114], "infer": [113, 114, 118], "It": [113, 114], "v1": [113, 114], "profil": [113, 114], "under": [113, 114], "hood": [113, 114], "wandbcallback": 114, "integr": 114, "collect": 114, "anyth": 114, "keras_model": 114, "summari": 114, "associ": 114, "monitor": 114, "minimum": 114, "gradient": 114, "maxim": 114, "try": 114, "guess": 114, "beat": 114, "previou": 114, "don": 114, "save_graph": 114, "boolean": 114, "graph": 114, "save_weights_onli": 114, "weight": 114, "save_weight": 114, "filepath": 114, "els": 114, "full": [114, 140], "log_weight": 114, "log_gradi": 114, "training_data": 114, "mandatori": [114, 133], "validation_data": 114, "make": 114, "small": 114, "In": 114, "case": 114, "you": [114, 140], "work": 114, "pleas": 114, "input_typ": 114, "output_typ": 114, "correctli": 114, "either": 114, "validate_data": 114, "specif": [114, 159], "validation_step": 114, "how": 114, "mani": 114, "label": [114, 155, 159], "your": 114, "numer": 114, "understand": 114, "multiclass": 114, "classifi": 114, "won": 114, "do": 114, "help": 114, "segmentation_mask": 114, "log_evalu": 114, "see": 114, "validation_index": 114, "validation_row_processor": 114, "output_row_processor": 114, "addit": 114, "detail": 114, "class_color": 114, "segment": 114, "mask": 114, "rang": 114, "log_batch_frequ": 114, "log_best_prefix": 114, "extra": 114, "data_typ": 114, "_tablelinkmixin": 114, "tablelinkmixin": 114, "most": 114, "common": 114, "wai": 114, "obtain": 114, "get_index": 114, "commonli": 114, "ndx": 114, "singl": [114, 133, 138, 140], "slot": 114, "take": 114, "target": 114, "wish": 114, "lambda": 114, "processor": 114, "ignor": 114, "present": 114, "infer_missing_processor": 114, "we": 114, "attempt": 114, "appropri": 114, "log_evaluation_frequ": 114, "frequenc": 114, "so": 114, "effect": 114, "compute_flop": 114, "sequenti": 114, "gigaflop": 114, "unit": [114, 150], "x_train": 114, "y_train": 114, "x_test": 114, "y_test": 114, "_attempt_evaluation_log": 114, "commit": [114, 127], "_build_grad_accumulator_model": 114, "_log_datafram": 114, "_log_gradi": 114, "_log_imag": 114, "num_imag": 114, "36": 114, "_log_weight": 114, "_logits_to_capt": 114, "logit": 114, "_masks_to_pixel": 114, "_save_model": 114, "_save_model_as_artifact": 114, "_encode_cont": 127, "from_byt": 127, "_get_url": [127, 140], "rout": [127, 140], "branch": 127, "remote_path": 127, "dest_path": 127, "get_lastest_job_run": 127, "jobid": 127, "list_dir": 127, "remot": 129, "get_url": [129, 135], "fileid": [129, 135], "is_mount": 129, "move": 129, "from_path": 129, "to_path": 129, "send": [129, 140], "send_dir": 129, "base_path": [129, 133], "_batch_download_rgb": [131, 133], "worker": [131, 133, 137, 140, 143, 148, 150], "_download_rgb": [131, 133], "256": [131, 133, 137, 140], "height": [131, 133, 137], "opt": [131, 133, 137], "batch_cutout": [131, 133], "cutout": [131, 133, 137], "imagingservic": 133, "coordin": 133, "length": 133, "beggin": 133, "batch_download_fit": 137, "rerun": 137, "camcol": 137, "field": 137, "batch_download_rgb": 137, "crossmatch": 137, "search_typ": 137, "photo": 137, "search_radiu": 137, "02": 137, "chunk_siz": 137, "download_fit": [137, 140], "download_rgb": 137, "get_image_filenam": 137, "dr8objid": 137, "dr7objid": 137, "extens": 137, "basepath": 137, "request": 138, "cloud": [138, 140], "server": [138, 140], "over": [138, 140], "donwload": [138, 140], "fast": 138, "multiprocess": 138, "async": 138, "queri": [138, 140, 143], "natanael": 138, "magalh\u00e3": 138, "cardoso": 138, "net": 138, "splu": [139, 140], "enum": 139, "interact": 140, "usernam": 140, "authent": [140, 141], "splus_us": 140, "variabl": 140, "password": 140, "splus_pass": 140, "_batch_download": 140, "download_funct": 140, "download_arg": 140, "theread": 140, "spawn": 140, "multipl": 140, "parallel": 140, "_download_imag": 140, "url": [140, 147, 148, 149], "_track_tap_job": 140, "batch_image_download": 140, "img_typ": 140, "imagetyp": 140, "posist": 140, "accept": 140, "custom": 140, "degre": 140, "download_lupton_rgb": 140, "download_trilogy_rgb": 140, "download_fits_rgb": 140, "These": 140, "mention": 140, "172": 140, "193": 140, "9": 140, "63": 140, "24": 140, "fig1": 140, "fig2": 140, "fig3": 140, "batch_queri": 140, "sql": 140, "scope": 140, "public": 140, "fmt": 140, "text": 140, "repalac": 140, "locat": 140, "ovewrit": 140, "sava_path": 140, "skip": 140, "privat": 140, "assign": 140, "collabor": 140, "mimi": 140, "r": [140, 157], "r_band": 140, "g_band": 140, "b_band": 140, "stretch": 140, "q": 140, "8": [140, 157], "channel": 140, "formula": 140, "f861": 140, "z": 140, "f515": 140, "f660": 140, "u": 140, "f378": 140, "f395": 140, "f410": 140, "f430": 140, "algorithm": 140, "update_token": 140, "updat": [140, 141], "owner": 140, "f": 141, "decor": 141, "place": 141, "tap": 143, "batch_sync_queri": 143, "join_output": 143, "sync_queri": 143, "tensorboard": 145, "upload_asset": 145, "logdir": 145, "descript": 145, "query_param": 147, "http_client": [148, 149], "session": [148, 149], "extract": 149, "return_byt": 149, "func": 150, "get_seri": 153, "median": 153, "get_std": 153, "has_std": 153, "table_": 154, "xlim": [154, 160], "ylim": [154, 160], "y_true": 155, "y_pred": 155, "one_hot": 155, "train_seri": 156, "test_seri": 156, "blind_seri": 156, "min_rang": 156, "max_rang": 156, "xlabel": [156, 157], "ylabel": [156, 157], "loc": 156, "vline": 156, "n_fold": 157, "n_bin": 157, "color_map": [157, 158], "mag": 157, "count": 157, "titl": [157, 158], "figsiz": [157, 158], "legend_po": 157, "legend_col": 157, "6": 158, "true_seri": 159, "pred_seri": 159, "curv": 159, "zoom_rang": 159, "zoom_po": 159, "show": 159, "rep": 159, "repetit": 159, "std": 159, "macro": 159, "micro": 159, "plote": 159, "averag": 159, "assert": 159, "len": 159, "mean_seri": 160, "error_seri": 160, "legend_loc": 160, "page": 162}, "objects": {"mergernet": [[0, 0, 0, "-", "core"], [33, 0, 0, "-", "data"], [74, 0, 0, "-", "estimators"], [87, 0, 0, "-", "jobs"], [106, 0, 0, "-", "model"], [125, 0, 0, "-", "services"], [151, 0, 0, "-", "visualization"]], "mergernet.core": [[1, 0, 0, "-", "constants"], [2, 0, 0, "-", "experiment"], [5, 0, 0, "-", "hp"], [13, 0, 0, "-", "logging"], [15, 0, 0, "-", "utils"]], "mergernet.core.experiment": [[3, 1, 1, "", "Experiment"], [4, 4, 1, "", "backup_model"]], "mergernet.core.experiment.Experiment": [[3, 1, 1, "", "Tracker"], [3, 2, 1, "", "_exp_created"], [3, 3, 1, "", "_post_run"], [3, 3, 1, "", "_pre_run"], [3, 2, 1, "", "_registered_artifacts"], [3, 3, 1, "", "_setup_experiment_attributes"], [3, 3, 1, "", "download_file_gd"], [3, 2, 1, "", "exp_id"], [3, 2, 1, "", "exp_name"], [3, 3, 1, "", "finish_wandb"], [3, 2, 1, "", "gd_exp_path"], [3, 2, 1, "", "gd_shared_path"], [3, 3, 1, "", "init_wandb"], [3, 2, 1, "", "local_exp_path"], [3, 2, 1, "", "local_shared_path"], [3, 2, 1, "", "notes"], [3, 3, 1, "", "register_artifact"], [3, 3, 1, "", "run"], [3, 3, 1, "", "upload_file_gd"], [3, 3, 1, "", "upload_registered_artifacts"]], "mergernet.core.hp": [[6, 1, 1, "", "CategoricalHyperParameter"], [7, 1, 1, "", "ConstantHyperParameter"], [8, 1, 1, "", "FloatHyperParameter"], [9, 1, 1, "", "HP"], [10, 1, 1, "", "HyperParameter"], [11, 1, 1, "", "HyperParameterSet"], [12, 1, 1, "", "IntHyperParameter"]], "mergernet.core.hp.CategoricalHyperParameter": [[6, 3, 1, "", "clear_last_value"], [6, 3, 1, "", "from_dict"], [6, 3, 1, "", "set_attr"], [6, 3, 1, "", "set_trial"], [6, 3, 1, "", "suggest"], [6, 3, 1, "", "to_dict"]], "mergernet.core.hp.ConstantHyperParameter": [[7, 3, 1, "", "clear_last_value"], [7, 3, 1, "", "from_dict"], [7, 3, 1, "", "set_attr"], [7, 3, 1, "", "set_trial"], [7, 3, 1, "", "suggest"], [7, 3, 1, "", "to_dict"]], "mergernet.core.hp.FloatHyperParameter": [[8, 3, 1, "", "clear_last_value"], [8, 3, 1, "", "from_dict"], [8, 3, 1, "", "set_attr"], [8, 3, 1, "", "set_trial"], [8, 3, 1, "", "suggest"], [8, 3, 1, "", "to_dict"]], "mergernet.core.hp.HP": [[9, 3, 1, "", "cat"], [9, 3, 1, "", "const"], [9, 3, 1, "", "num"]], "mergernet.core.hp.HyperParameter": [[10, 3, 1, "", "clear_last_value"], [10, 3, 1, "", "from_dict"], [10, 3, 1, "", "set_attr"], [10, 3, 1, "", "set_trial"], [10, 3, 1, "", "suggest"], [10, 3, 1, "", "to_dict"]], "mergernet.core.hp.HyperParameterSet": [[11, 3, 1, "", "add"], [11, 3, 1, "", "clear_values_dict"], [11, 3, 1, "", "get"], [11, 3, 1, "", "set_trial"], [11, 3, 1, "", "to_values_dict"]], "mergernet.core.hp.IntHyperParameter": [[12, 3, 1, "", "clear_last_value"], [12, 3, 1, "", "from_dict"], [12, 3, 1, "", "set_attr"], [12, 3, 1, "", "set_trial"], [12, 3, 1, "", "suggest"], [12, 3, 1, "", "to_dict"]], "mergernet.core.logging": [[14, 4, 1, "", "configure_root_logger"]], "mergernet.core.utils": [[16, 1, 1, "", "CachedDataFrame"], [17, 1, 1, "", "SingletonMeta"], [18, 1, 1, "", "Timming"], [19, 4, 1, "", "array_fallback"], [20, 1, 1, "", "classproperty"], [21, 4, 1, "", "compress_fits"], [22, 4, 1, "", "deep_update"], [23, 4, 1, "", "find_by_value"], [24, 4, 1, "", "heading"], [25, 4, 1, "", "iauname"], [26, 4, 1, "", "iauname_relative_path"], [27, 4, 1, "", "load_image"], [28, 4, 1, "", "load_table"], [29, 4, 1, "", "not_in"], [30, 4, 1, "", "save_table"], [31, 4, 1, "", "serialize"], [32, 4, 1, "", "unique_path"]], "mergernet.core.utils.CachedDataFrame": [[16, 2, 1, "", "_cache"], [16, 3, 1, "", "load"]], "mergernet.core.utils.SingletonMeta": [[17, 3, 1, "", "__new__"], [17, 2, 1, "", "_instances"], [17, 2, 1, "", "_lock"], [17, 3, 1, "", "mro"]], "mergernet.core.utils.Timming": [[18, 3, 1, "", "_format_time"], [18, 3, 1, "", "duration"], [18, 3, 1, "", "end"], [18, 3, 1, "", "start"]], "mergernet.core.utils.classproperty": [[20, 3, 1, "", "__new__"], [20, 3, 1, "", "deleter"], [20, 2, 1, "", "fdel"], [20, 2, 1, "", "fget"], [20, 2, 1, "", "fset"], [20, 3, 1, "", "getter"], [20, 3, 1, "", "setter"]], "mergernet.data": [[34, 0, 0, "-", "dataset"], [36, 0, 0, "-", "dataset_config"], [39, 0, 0, "-", "image"], [45, 0, 0, "-", "kfold"], [48, 0, 0, "-", "match"], [52, 0, 0, "-", "preprocessing"], [58, 0, 0, "-", "rgb"], [60, 0, 0, "-", "sanitization"], [62, 0, 0, "-", "trilogy"]], "mergernet.data.dataset": [[35, 1, 1, "", "Dataset"]], "mergernet.data.dataset.Dataset": [[35, 3, 1, "", "_create_dataset_table"], [35, 3, 1, "", "_discretize_label"], [35, 3, 1, "", "_transform_images"], [35, 3, 1, "", "compute_class_weight"], [35, 3, 1, "", "concat_fold_column"], [35, 3, 1, "", "download"], [35, 3, 1, "", "get_X"], [35, 3, 1, "", "get_X_by_fold"], [35, 3, 1, "", "get_fold"], [35, 3, 1, "", "get_images_paths"], [35, 3, 1, "", "get_preds_dataset"], [35, 3, 1, "", "get_table"], [35, 3, 1, "", "is_dataset_downloaded"], [35, 3, 1, "", "prepare_data"], [35, 2, 1, "", "registry"]], "mergernet.data.dataset_config": [[37, 1, 1, "", "DatasetConfig"], [38, 1, 1, "", "DatasetRegistry"]], "mergernet.data.dataset_config.DatasetRegistry": [[38, 2, 1, "", "BIN_LEGACY_NORTH_RGB_128"], [38, 2, 1, "", "BIN_SDSS_128"], [38, 2, 1, "", "BLIND_SPLUS_GAL80_LS10_RGB_128"], [38, 2, 1, "", "BLIND_SPLUS_LUPTON_128"], [38, 2, 1, "", "BLIND_SPLUS_LUPTON_150"], [38, 2, 1, "", "BLIND_SPLUS_TRILOGY_128"], [38, 2, 1, "", "BLIND_SPLUS_TRILOGY_150"], [38, 2, 1, "", "DARG_NO_INSPECTION"], [38, 2, 1, "", "MESD_LEGACY_128"], [38, 2, 1, "", "MESD_SDSS_128"]], "mergernet.data.image": [[40, 1, 1, "", "ImageTransform"], [41, 1, 1, "", "LegacyRGB"], [42, 1, 1, "", "LuptonRGB"], [43, 4, 1, "", "asinh_map"], [44, 4, 1, "", "asinh_map2"]], "mergernet.data.image.ImageTransform": [[40, 2, 1, "", "_abc_impl"], [40, 3, 1, "", "batch_transform"], [40, 3, 1, "", "transform"]], "mergernet.data.image.LegacyRGB": [[41, 2, 1, "", "_abc_impl"], [41, 3, 1, "", "batch_transform"], [41, 3, 1, "", "transform"]], "mergernet.data.image.LuptonRGB": [[42, 2, 1, "", "_abc_impl"], [42, 3, 1, "", "batch_transform"], [42, 3, 1, "", "transform"]], "mergernet.data.kfold": [[46, 1, 1, "", "DistributionKFold"], [47, 1, 1, "", "StratifiedDistributionKFold"]], "mergernet.data.kfold.DistributionKFold": [[46, 3, 1, "", "split"]], "mergernet.data.kfold.StratifiedDistributionKFold": [[47, 3, 1, "", "compute_max_bins"], [47, 3, 1, "", "split_all"], [47, 3, 1, "", "split_ids"]], "mergernet.data.match": [[49, 1, 1, "", "CrossMatch"], [50, 1, 1, "", "CrossMatchResult"], [51, 1, 1, "", "XTable"]], "mergernet.data.match.CrossMatch": [[49, 3, 1, "", "crossmatch"], [49, 3, 1, "", "pair_match"], [49, 3, 1, "", "unique"]], "mergernet.data.match.CrossMatchResult": [[50, 2, 1, "", "distance"], [50, 2, 1, "", "primary_idx"], [50, 2, 1, "", "secondary_idx"], [50, 2, 1, "", "table"]], "mergernet.data.match.XTable": [[51, 3, 1, "", "get_coords"], [51, 3, 1, "", "to_df"]], "mergernet.data.preprocessing": [[53, 4, 1, "", "load_jpg"], [54, 4, 1, "", "load_png"], [55, 4, 1, "", "normalize_rgb"], [56, 4, 1, "", "one_hot_factory"], [57, 4, 1, "", "standardize_rgb"]], "mergernet.data.rgb": [[59, 1, 1, "", "RGB"]], "mergernet.data.rgb.RGB": [[59, 3, 1, "", "make_trilogy_fits"], [59, 3, 1, "", "trilogy_fits_to_png"]], "mergernet.data.sanitization": [[61, 1, 1, "", "DatasetSanitization"]], "mergernet.data.sanitization.DatasetSanitization": [[61, 3, 1, "", "check_images"], [61, 3, 1, "", "drop_images_by_filesize"], [61, 3, 1, "", "drop_images_by_iauname"], [61, 3, 1, "", "filesize_histogram"], [61, 3, 1, "", "get_filesize_distribution"], [61, 3, 1, "", "get_iauname_by_filesize"], [61, 3, 1, "", "sample"], [61, 3, 1, "", "sanitize"]], "mergernet.data.trilogy": [[63, 1, 1, "", "MakeImg"], [64, 4, 1, "", "RGB2im"], [65, 4, 1, "", "adjust_saturation"], [66, 4, 1, "", "da"], [67, 4, 1, "", "get_clip"], [68, 4, 1, "", "get_levels"], [69, 4, 1, "", "imscale"], [70, 4, 1, "", "meanstd"], [71, 4, 1, "", "rms"], [72, 4, 1, "", "satK2m"], [73, 4, 1, "", "setLevel"]], "mergernet.data.trilogy.MakeImg": [[63, 3, 1, "", "color"], [63, 3, 1, "", "get_array"], [63, 3, 1, "", "savefig"]], "mergernet.estimators": [[75, 0, 0, "-", "automl"], [77, 0, 0, "-", "base"], [81, 0, 0, "-", "decals"], [83, 0, 0, "-", "parametric"], [85, 0, 0, "-", "similarity"]], "mergernet.estimators.automl": [[76, 1, 1, "", "OptunaEstimator"]], "mergernet.estimators.automl.OptunaEstimator": [[76, 2, 1, "", "_abc_impl"], [76, 3, 1, "", "_objective"], [76, 3, 1, "", "build"], [76, 3, 1, "", "compile_model"], [76, 3, 1, "", "download"], [76, 3, 1, "", "get_conv_arch"], [76, 3, 1, "", "get_dataaug_block"], [76, 3, 1, "", "plot"], [76, 3, 1, "", "predict"], [76, 2, 1, "", "registry"], [76, 3, 1, "", "set_trainable"], [76, 5, 1, "", "tf_model"], [76, 3, 1, "", "train"]], "mergernet.estimators.base": [[78, 1, 1, "", "Estimator"], [79, 1, 1, "", "EstimatorConfig"], [80, 1, 1, "", "EstimatorRegistry"]], "mergernet.estimators.base.Estimator": [[78, 2, 1, "", "_abc_impl"], [78, 3, 1, "", "build"], [78, 3, 1, "", "compile_model"], [78, 3, 1, "", "download"], [78, 3, 1, "", "get_conv_arch"], [78, 3, 1, "", "get_dataaug_block"], [78, 3, 1, "", "plot"], [78, 3, 1, "", "predict"], [78, 2, 1, "", "registry"], [78, 3, 1, "", "set_trainable"], [78, 5, 1, "", "tf_model"], [78, 3, 1, "", "train"]], "mergernet.estimators.base.EstimatorRegistry": [[80, 2, 1, "", "ZOOBOT_GREYSCALE"], [80, 2, 1, "", "ZOOBOT_RGB"]], "mergernet.estimators.decals": [[82, 1, 1, "", "ZoobotEstimator"]], "mergernet.estimators.decals.ZoobotEstimator": [[82, 2, 1, "", "_abc_impl"], [82, 3, 1, "", "_prepare_dataset"], [82, 3, 1, "", "build"], [82, 3, 1, "", "cnn_representations"], [82, 3, 1, "", "compile_model"], [82, 3, 1, "", "download"], [82, 3, 1, "", "get_conv_arch"], [82, 3, 1, "", "get_dataaug_block"], [82, 3, 1, "", "pca"], [82, 3, 1, "", "plot"], [82, 3, 1, "", "predict"], [82, 2, 1, "", "registry"], [82, 3, 1, "", "set_trainable"], [82, 5, 1, "", "tf_model"], [82, 3, 1, "", "train"]], "mergernet.estimators.parametric": [[84, 1, 1, "", "ParametricEstimator"]], "mergernet.estimators.parametric.ParametricEstimator": [[84, 2, 1, "", "_abc_impl"], [84, 3, 1, "", "build"], [84, 3, 1, "", "compile_model"], [84, 3, 1, "", "download"], [84, 3, 1, "", "get_conv_arch"], [84, 3, 1, "", "get_dataaug_block"], [84, 3, 1, "", "plot"], [84, 3, 1, "", "predict"], [84, 2, 1, "", "registry"], [84, 3, 1, "", "set_trainable"], [84, 5, 1, "", "tf_model"], [84, 3, 1, "", "train"]], "mergernet.estimators.similarity": [[86, 1, 1, "", "SimilarityEstimator"]], "mergernet.estimators.similarity.SimilarityEstimator": [[86, 2, 1, "", "_abc_impl"], [86, 3, 1, "", "_get_nontrivial_neighbours"], [86, 3, 1, "", "_match"], [86, 3, 1, "", "build"], [86, 3, 1, "", "compile_model"], [86, 3, 1, "", "download"], [86, 3, 1, "", "get_conv_arch"], [86, 3, 1, "", "get_dataaug_block"], [86, 3, 1, "", "plot"], [86, 3, 1, "", "predict"], [86, 2, 1, "", "registry"], [86, 3, 1, "", "set_trainable"], [86, 5, 1, "", "tf_model"], [86, 3, 1, "", "train"]], "mergernet.jobs": [[88, 0, 0, "-", "j001"], [90, 0, 0, "-", "j002"], [92, 0, 0, "-", "j003"], [94, 0, 0, "-", "j004"], [96, 0, 0, "-", "j005"], [98, 0, 0, "-", "j006"], [100, 0, 0, "-", "j007"], [102, 0, 0, "-", "j008"], [104, 0, 0, "-", "j009"]], "mergernet.jobs.j001": [[89, 1, 1, "", "Job"]], "mergernet.jobs.j001.Job": [[89, 1, 1, "", "Tracker"], [89, 2, 1, "", "_exp_created"], [89, 3, 1, "", "_post_run"], [89, 3, 1, "", "_pre_run"], [89, 2, 1, "", "_registered_artifacts"], [89, 3, 1, "", "_setup_experiment_attributes"], [89, 3, 1, "", "call"], [89, 3, 1, "", "download_file_gd"], [89, 2, 1, "", "exp_id"], [89, 2, 1, "", "exp_name"], [89, 3, 1, "", "finish_wandb"], [89, 2, 1, "", "gd_exp_path"], [89, 2, 1, "", "gd_shared_path"], [89, 3, 1, "", "init_wandb"], [89, 2, 1, "", "local_exp_path"], [89, 2, 1, "", "local_shared_path"], [89, 2, 1, "", "notes"], [89, 3, 1, "", "register_artifact"], [89, 3, 1, "", "run"], [89, 3, 1, "", "upload_file_gd"], [89, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j002": [[91, 1, 1, "", "Job"]], "mergernet.jobs.j002.Job": [[91, 1, 1, "", "Tracker"], [91, 2, 1, "", "_exp_created"], [91, 3, 1, "", "_post_run"], [91, 3, 1, "", "_pre_run"], [91, 2, 1, "", "_registered_artifacts"], [91, 3, 1, "", "_setup_experiment_attributes"], [91, 3, 1, "", "call"], [91, 3, 1, "", "download_file_gd"], [91, 2, 1, "", "exp_id"], [91, 2, 1, "", "exp_name"], [91, 3, 1, "", "finish_wandb"], [91, 2, 1, "", "gd_exp_path"], [91, 2, 1, "", "gd_shared_path"], [91, 3, 1, "", "init_wandb"], [91, 2, 1, "", "local_exp_path"], [91, 2, 1, "", "local_shared_path"], [91, 2, 1, "", "notes"], [91, 3, 1, "", "register_artifact"], [91, 3, 1, "", "run"], [91, 3, 1, "", "upload_file_gd"], [91, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j003": [[93, 1, 1, "", "Job"]], "mergernet.jobs.j003.Job": [[93, 1, 1, "", "Tracker"], [93, 2, 1, "", "_exp_created"], [93, 3, 1, "", "_post_run"], [93, 3, 1, "", "_pre_run"], [93, 2, 1, "", "_registered_artifacts"], [93, 3, 1, "", "_setup_experiment_attributes"], [93, 3, 1, "", "call"], [93, 3, 1, "", "download_file_gd"], [93, 2, 1, "", "exp_id"], [93, 2, 1, "", "exp_name"], [93, 3, 1, "", "finish_wandb"], [93, 2, 1, "", "gd_exp_path"], [93, 2, 1, "", "gd_shared_path"], [93, 3, 1, "", "init_wandb"], [93, 2, 1, "", "local_exp_path"], [93, 2, 1, "", "local_shared_path"], [93, 2, 1, "", "notes"], [93, 3, 1, "", "register_artifact"], [93, 3, 1, "", "run"], [93, 3, 1, "", "upload_file_gd"], [93, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j004": [[95, 1, 1, "", "Job"]], "mergernet.jobs.j004.Job": [[95, 1, 1, "", "Tracker"], [95, 2, 1, "", "_exp_created"], [95, 3, 1, "", "_post_run"], [95, 3, 1, "", "_pre_run"], [95, 2, 1, "", "_registered_artifacts"], [95, 3, 1, "", "_setup_experiment_attributes"], [95, 3, 1, "", "call"], [95, 3, 1, "", "download_file_gd"], [95, 2, 1, "", "exp_id"], [95, 2, 1, "", "exp_name"], [95, 3, 1, "", "finish_wandb"], [95, 2, 1, "", "gd_exp_path"], [95, 2, 1, "", "gd_shared_path"], [95, 3, 1, "", "init_wandb"], [95, 2, 1, "", "local_exp_path"], [95, 2, 1, "", "local_shared_path"], [95, 2, 1, "", "notes"], [95, 3, 1, "", "register_artifact"], [95, 3, 1, "", "run"], [95, 3, 1, "", "upload_file_gd"], [95, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j005": [[97, 1, 1, "", "Job"]], "mergernet.jobs.j005.Job": [[97, 1, 1, "", "Tracker"], [97, 2, 1, "", "_exp_created"], [97, 3, 1, "", "_post_run"], [97, 3, 1, "", "_pre_run"], [97, 2, 1, "", "_registered_artifacts"], [97, 3, 1, "", "_setup_experiment_attributes"], [97, 3, 1, "", "call"], [97, 3, 1, "", "download_file_gd"], [97, 2, 1, "", "exp_id"], [97, 2, 1, "", "exp_name"], [97, 3, 1, "", "finish_wandb"], [97, 2, 1, "", "gd_exp_path"], [97, 2, 1, "", "gd_shared_path"], [97, 3, 1, "", "init_wandb"], [97, 2, 1, "", "local_exp_path"], [97, 2, 1, "", "local_shared_path"], [97, 2, 1, "", "notes"], [97, 3, 1, "", "register_artifact"], [97, 3, 1, "", "run"], [97, 3, 1, "", "upload_file_gd"], [97, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j006": [[99, 1, 1, "", "Job"]], "mergernet.jobs.j006.Job": [[99, 1, 1, "", "Tracker"], [99, 2, 1, "", "_exp_created"], [99, 3, 1, "", "_post_run"], [99, 3, 1, "", "_pre_run"], [99, 2, 1, "", "_registered_artifacts"], [99, 3, 1, "", "_setup_experiment_attributes"], [99, 3, 1, "", "call"], [99, 3, 1, "", "download_file_gd"], [99, 2, 1, "", "exp_id"], [99, 2, 1, "", "exp_name"], [99, 3, 1, "", "finish_wandb"], [99, 2, 1, "", "gd_exp_path"], [99, 2, 1, "", "gd_shared_path"], [99, 3, 1, "", "init_wandb"], [99, 2, 1, "", "local_exp_path"], [99, 2, 1, "", "local_shared_path"], [99, 2, 1, "", "notes"], [99, 3, 1, "", "register_artifact"], [99, 3, 1, "", "run"], [99, 3, 1, "", "upload_file_gd"], [99, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j007": [[101, 1, 1, "", "Job"]], "mergernet.jobs.j007.Job": [[101, 1, 1, "", "Tracker"], [101, 2, 1, "", "_exp_created"], [101, 3, 1, "", "_post_run"], [101, 3, 1, "", "_pre_run"], [101, 2, 1, "", "_registered_artifacts"], [101, 3, 1, "", "_setup_experiment_attributes"], [101, 3, 1, "", "call"], [101, 3, 1, "", "download_file_gd"], [101, 2, 1, "", "exp_id"], [101, 2, 1, "", "exp_name"], [101, 3, 1, "", "finish_wandb"], [101, 2, 1, "", "gd_exp_path"], [101, 2, 1, "", "gd_shared_path"], [101, 3, 1, "", "init_wandb"], [101, 2, 1, "", "local_exp_path"], [101, 2, 1, "", "local_shared_path"], [101, 2, 1, "", "notes"], [101, 3, 1, "", "register_artifact"], [101, 3, 1, "", "run"], [101, 3, 1, "", "upload_file_gd"], [101, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j008": [[103, 1, 1, "", "Job"]], "mergernet.jobs.j008.Job": [[103, 1, 1, "", "Tracker"], [103, 2, 1, "", "_exp_created"], [103, 3, 1, "", "_post_run"], [103, 3, 1, "", "_pre_run"], [103, 2, 1, "", "_registered_artifacts"], [103, 3, 1, "", "_setup_experiment_attributes"], [103, 3, 1, "", "call"], [103, 3, 1, "", "download_file_gd"], [103, 2, 1, "", "exp_id"], [103, 2, 1, "", "exp_name"], [103, 3, 1, "", "finish_wandb"], [103, 2, 1, "", "gd_exp_path"], [103, 2, 1, "", "gd_shared_path"], [103, 3, 1, "", "init_wandb"], [103, 2, 1, "", "local_exp_path"], [103, 2, 1, "", "local_shared_path"], [103, 2, 1, "", "notes"], [103, 3, 1, "", "register_artifact"], [103, 3, 1, "", "run"], [103, 3, 1, "", "upload_file_gd"], [103, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j009": [[105, 1, 1, "", "Job"]], "mergernet.jobs.j009.Job": [[105, 1, 1, "", "Tracker"], [105, 2, 1, "", "_exp_created"], [105, 3, 1, "", "_post_run"], [105, 3, 1, "", "_pre_run"], [105, 2, 1, "", "_registered_artifacts"], [105, 3, 1, "", "_setup_experiment_attributes"], [105, 3, 1, "", "call"], [105, 3, 1, "", "download_file_gd"], [105, 2, 1, "", "exp_id"], [105, 2, 1, "", "exp_name"], [105, 3, 1, "", "finish_wandb"], [105, 2, 1, "", "gd_exp_path"], [105, 2, 1, "", "gd_shared_path"], [105, 3, 1, "", "init_wandb"], [105, 2, 1, "", "local_exp_path"], [105, 2, 1, "", "local_shared_path"], [105, 2, 1, "", "notes"], [105, 3, 1, "", "register_artifact"], [105, 3, 1, "", "run"], [105, 3, 1, "", "upload_file_gd"], [105, 3, 1, "", "upload_registered_artifacts"]], "mergernet.model": [[107, 0, 0, "-", "automl"], [109, 0, 0, "-", "baseline"], [111, 0, 0, "-", "callbacks"], [117, 0, 0, "-", "inference"], [119, 0, 0, "-", "utils"]], "mergernet.model.automl": [[108, 4, 1, "", "optuna_train"]], "mergernet.model.baseline": [[110, 4, 1, "", "finetune_train"]], "mergernet.model.callbacks": [[112, 1, 1, "", "DeltaStopping"], [113, 1, 1, "", "MWandbCallback"], [114, 1, 1, "", "MyWandbCallback"], [115, 1, 1, "", "PruneCallback"], [116, 1, 1, "", "SaveBestTrialCallback"]], "mergernet.model.callbacks.DeltaStopping": [[112, 3, 1, "", "_implements_predict_batch_hooks"], [112, 3, 1, "", "_implements_test_batch_hooks"], [112, 3, 1, "", "_implements_train_batch_hooks"], [112, 2, 1, "", "_keras_api_names"], [112, 2, 1, "", "_keras_api_names_v1"], [112, 3, 1, "", "on_batch_begin"], [112, 3, 1, "", "on_batch_end"], [112, 3, 1, "", "on_epoch_begin"], [112, 3, 1, "", "on_epoch_end"], [112, 3, 1, "", "on_predict_batch_begin"], [112, 3, 1, "", "on_predict_batch_end"], [112, 3, 1, "", "on_predict_begin"], [112, 3, 1, "", "on_predict_end"], [112, 3, 1, "", "on_test_batch_begin"], [112, 3, 1, "", "on_test_batch_end"], [112, 3, 1, "", "on_test_begin"], [112, 3, 1, "", "on_test_end"], [112, 3, 1, "", "on_train_batch_begin"], [112, 3, 1, "", "on_train_batch_end"], [112, 3, 1, "", "on_train_begin"], [112, 3, 1, "", "on_train_end"], [112, 3, 1, "", "set_model"], [112, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MWandbCallback": [[113, 3, 1, "", "_implements_predict_batch_hooks"], [113, 3, 1, "", "_implements_test_batch_hooks"], [113, 3, 1, "", "_implements_train_batch_hooks"], [113, 2, 1, "", "_keras_api_names"], [113, 2, 1, "", "_keras_api_names_v1"], [113, 3, 1, "", "get_flops"], [113, 3, 1, "", "on_batch_begin"], [113, 3, 1, "", "on_batch_end"], [113, 3, 1, "", "on_epoch_begin"], [113, 3, 1, "", "on_epoch_end"], [113, 3, 1, "", "on_predict_batch_begin"], [113, 3, 1, "", "on_predict_batch_end"], [113, 3, 1, "", "on_predict_begin"], [113, 3, 1, "", "on_predict_end"], [113, 3, 1, "", "on_test_batch_begin"], [113, 3, 1, "", "on_test_batch_end"], [113, 3, 1, "", "on_test_begin"], [113, 3, 1, "", "on_test_end"], [113, 3, 1, "", "on_train_batch_begin"], [113, 3, 1, "", "on_train_batch_end"], [113, 3, 1, "", "on_train_begin"], [113, 3, 1, "", "on_train_end"], [113, 3, 1, "", "set_model"], [113, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MyWandbCallback": [[114, 3, 1, "", "_attempt_evaluation_log"], [114, 3, 1, "", "_build_grad_accumulator_model"], [114, 3, 1, "", "_implements_predict_batch_hooks"], [114, 3, 1, "", "_implements_test_batch_hooks"], [114, 3, 1, "", "_implements_train_batch_hooks"], [114, 2, 1, "", "_keras_api_names"], [114, 2, 1, "", "_keras_api_names_v1"], [114, 3, 1, "", "_log_dataframe"], [114, 3, 1, "", "_log_gradients"], [114, 3, 1, "", "_log_images"], [114, 3, 1, "", "_log_weights"], [114, 3, 1, "", "_logits_to_captions"], [114, 3, 1, "", "_masks_to_pixels"], [114, 3, 1, "", "_save_model"], [114, 3, 1, "", "_save_model_as_artifact"], [114, 3, 1, "", "get_flops"], [114, 3, 1, "", "on_batch_begin"], [114, 3, 1, "", "on_batch_end"], [114, 3, 1, "", "on_epoch_begin"], [114, 3, 1, "", "on_epoch_end"], [114, 3, 1, "", "on_predict_batch_begin"], [114, 3, 1, "", "on_predict_batch_end"], [114, 3, 1, "", "on_predict_begin"], [114, 3, 1, "", "on_predict_end"], [114, 3, 1, "", "on_test_batch_begin"], [114, 3, 1, "", "on_test_batch_end"], [114, 3, 1, "", "on_test_begin"], [114, 3, 1, "", "on_test_end"], [114, 3, 1, "", "on_train_batch_begin"], [114, 3, 1, "", "on_train_batch_end"], [114, 3, 1, "", "on_train_begin"], [114, 3, 1, "", "on_train_end"], [114, 3, 1, "", "set_model"], [114, 3, 1, "", "set_params"]], "mergernet.model.callbacks.PruneCallback": [[115, 3, 1, "", "_implements_predict_batch_hooks"], [115, 3, 1, "", "_implements_test_batch_hooks"], [115, 3, 1, "", "_implements_train_batch_hooks"], [115, 2, 1, "", "_keras_api_names"], [115, 2, 1, "", "_keras_api_names_v1"], [115, 3, 1, "", "on_batch_begin"], [115, 3, 1, "", "on_batch_end"], [115, 3, 1, "", "on_epoch_begin"], [115, 3, 1, "", "on_epoch_end"], [115, 3, 1, "", "on_predict_batch_begin"], [115, 3, 1, "", "on_predict_batch_end"], [115, 3, 1, "", "on_predict_begin"], [115, 3, 1, "", "on_predict_end"], [115, 3, 1, "", "on_test_batch_begin"], [115, 3, 1, "", "on_test_batch_end"], [115, 3, 1, "", "on_test_begin"], [115, 3, 1, "", "on_test_end"], [115, 3, 1, "", "on_train_batch_begin"], [115, 3, 1, "", "on_train_batch_end"], [115, 3, 1, "", "on_train_begin"], [115, 3, 1, "", "on_train_end"], [115, 3, 1, "", "set_model"], [115, 3, 1, "", "set_params"]], "mergernet.model.callbacks.SaveBestTrialCallback": [[116, 3, 1, "", "_implements_predict_batch_hooks"], [116, 3, 1, "", "_implements_test_batch_hooks"], [116, 3, 1, "", "_implements_train_batch_hooks"], [116, 2, 1, "", "_keras_api_names"], [116, 2, 1, "", "_keras_api_names_v1"], [116, 3, 1, "", "on_batch_begin"], [116, 3, 1, "", "on_batch_end"], [116, 3, 1, "", "on_epoch_begin"], [116, 3, 1, "", "on_epoch_end"], [116, 3, 1, "", "on_predict_batch_begin"], [116, 3, 1, "", "on_predict_batch_end"], [116, 3, 1, "", "on_predict_begin"], [116, 3, 1, "", "on_predict_end"], [116, 3, 1, "", "on_test_batch_begin"], [116, 3, 1, "", "on_test_batch_end"], [116, 3, 1, "", "on_test_begin"], [116, 3, 1, "", "on_test_end"], [116, 3, 1, "", "on_train_batch_begin"], [116, 3, 1, "", "on_train_batch_end"], [116, 3, 1, "", "on_train_begin"], [116, 3, 1, "", "on_train_end"], [116, 3, 1, "", "set_model"], [116, 3, 1, "", "set_params"]], "mergernet.model.inference": [[118, 1, 1, "", "Predictor"]], "mergernet.model.inference.Predictor": [[118, 3, 1, "", "predict"], [118, 3, 1, "", "upload"]], "mergernet.model.utils": [[120, 4, 1, "", "get_conv_arch"], [121, 4, 1, "", "history_to_dataframe"], [122, 4, 1, "", "load_model"], [123, 4, 1, "", "set_trainable_state"], [124, 4, 1, "", "setup_seeds"]], "mergernet.services": [[126, 0, 0, "-", "github"], [128, 0, 0, "-", "google"], [130, 0, 0, "-", "imaging"], [132, 0, 0, "-", "legacy"], [134, 0, 0, "-", "sciserver"], [136, 0, 0, "-", "sdss"], [138, 0, 0, "-", "splus"], [142, 0, 0, "-", "tap"], [144, 0, 0, "-", "tensorboard"], [146, 0, 0, "-", "utils"]], "mergernet.services.github": [[127, 1, 1, "", "GithubService"]], "mergernet.services.github.GithubService": [[127, 3, 1, "", "_encode_content"], [127, 3, 1, "", "_get_url"], [127, 3, 1, "", "commit"], [127, 3, 1, "", "download"], [127, 3, 1, "", "get_lastest_job_run"], [127, 3, 1, "", "list_dir"]], "mergernet.services.google": [[129, 1, 1, "", "GDrive"]], "mergernet.services.google.GDrive": [[129, 2, 1, "", "base_path"], [129, 3, 1, "", "exists"], [129, 3, 1, "", "get"], [129, 3, 1, "", "get_url"], [129, 3, 1, "", "is_mounted"], [129, 3, 1, "", "move"], [129, 3, 1, "", "send"], [129, 3, 1, "", "send_dir"]], "mergernet.services.imaging": [[131, 1, 1, "", "ImagingService"]], "mergernet.services.imaging.ImagingService": [[131, 2, 1, "", "_abc_impl"], [131, 3, 1, "", "_batch_download_rgb"], [131, 3, 1, "", "_download_rgb"], [131, 3, 1, "", "batch_cutout"], [131, 3, 1, "", "cutout"]], "mergernet.services.legacy": [[133, 1, 1, "", "LegacyService"]], "mergernet.services.legacy.LegacyService": [[133, 2, 1, "", "_abc_impl"], [133, 3, 1, "", "_batch_download_rgb"], [133, 3, 1, "", "_download_rgb"], [133, 3, 1, "", "batch_cutout"], [133, 3, 1, "", "cutout"]], "mergernet.services.sciserver": [[135, 1, 1, "", "SciServer"]], "mergernet.services.sciserver.SciServer": [[135, 3, 1, "", "get_url"]], "mergernet.services.sdss": [[137, 1, 1, "", "SloanService"]], "mergernet.services.sdss.SloanService": [[137, 3, 1, "", "batch_download_fits"], [137, 3, 1, "", "batch_download_rgb"], [137, 3, 1, "", "crossmatch"], [137, 3, 1, "", "cutout"], [137, 3, 1, "", "download_fits"], [137, 3, 1, "", "download_rgb"], [137, 3, 1, "", "get_image_filename"]], "mergernet.services.splus": [[139, 1, 1, "", "ImageType"], [140, 1, 1, "", "SplusService"], [141, 4, 1, "", "update_authorization"]], "mergernet.services.splus.ImageType": [[139, 2, 1, "", "fits"], [139, 2, 1, "", "lupton"], [139, 2, 1, "", "trilogy"]], "mergernet.services.splus.SplusService": [[140, 3, 1, "", "_batch_download"], [140, 3, 1, "", "_download_image"], [140, 3, 1, "", "_get_url"], [140, 2, 1, "", "_lock"], [140, 3, 1, "", "_track_tap_job"], [140, 3, 1, "", "batch_image_download"], [140, 3, 1, "", "batch_query"], [140, 3, 1, "", "download_fits"], [140, 3, 1, "", "download_lupton_rgb"], [140, 3, 1, "", "download_trilogy_rgb"], [140, 3, 1, "", "query"], [140, 3, 1, "", "update_token"]], "mergernet.services.tap": [[143, 1, 1, "", "TapService"]], "mergernet.services.tap.TapService": [[143, 3, 1, "", "batch_sync_query"], [143, 3, 1, "", "sync_query"]], "mergernet.services.tensorboard": [[145, 1, 1, "", "TensorboardService"]], "mergernet.services.tensorboard.TensorboardService": [[145, 3, 1, "", "upload_assets"]], "mergernet.services.utils": [[147, 4, 1, "", "append_query_params"], [148, 4, 1, "", "batch_download_file"], [149, 4, 1, "", "download_file"], [150, 4, 1, "", "parallel_function_executor"]], "mergernet.visualization": [[152, 0, 0, "-", "plot"]], "mergernet.visualization.plot": [[153, 1, 1, "", "Serie"], [154, 4, 1, "", "color_color"], [155, 4, 1, "", "conf_matrix"], [156, 4, 1, "", "data_distribution"], [157, 4, 1, "", "mag_class_distribution"], [158, 4, 1, "", "object_position"], [159, 4, 1, "", "roc"], [160, 4, 1, "", "train_metrics"]], "mergernet.visualization.plot.Serie": [[153, 3, 1, "", "get_serie"], [153, 3, 1, "", "get_std"], [153, 3, 1, "", "has_std"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"mergernet": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 107, 108, 109, 110, 111, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 132, 134, 136, 138, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162], "core": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "constant": 1, "experi": [2, 3, 4, 161], "backup_model": 4, "hp": [5, 9], "categoricalhyperparamet": 6, "constanthyperparamet": 7, "floathyperparamet": 8, "hyperparamet": 10, "hyperparameterset": 11, "inthyperparamet": 12, "log": [13, 14], "configure_root_logg": 14, "util": [15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 119, 120, 121, 122, 123, 124, 146, 147, 148, 149, 150], "cacheddatafram": 16, "singletonmeta": 17, "tim": 18, "array_fallback": 19, "classproperti": 20, "compress_fit": 21, "deep_upd": 22, "find_by_valu": 23, "head": 24, "iaunam": 25, "exampl": [25, 26, 114, 140], "iauname_relative_path": 26, "load_imag": 27, "load_tabl": 28, "not_in": 29, "save_t": 30, "serial": 31, "unique_path": 32, "data": [33, 34, 36, 39, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "dataset": [34, 35, 101, 105], "dataset_config": 36, "datasetconfig": 37, "datasetregistri": 38, "imag": [39, 43, 44, 130], "imagetransform": 40, "legacyrgb": 41, "luptonrgb": 42, "asinh_map": 43, "asinh_map2": 44, "kfold": 45, "distributionkfold": 46, "stratifieddistributionkfold": 47, "match": 48, "crossmatch": 49, "crossmatchresult": 50, "xtabl": 51, "preprocess": [52, 53, 54, 55, 56, 57], "load_jpg": 53, "load_png": 54, "normalize_rgb": 55, "one_hot_factori": 56, "standardize_rgb": 57, "rgb": [58, 59], "sanit": 60, "datasetsanit": 61, "trilogi": [62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "makeimg": 63, "rgb2im": 64, "adjust_satur": 65, "da": 66, "get_clip": 67, "get_level": 68, "imscal": 69, "meanstd": 70, "rm": 71, "satk2m": 72, "setlevel": 73, "estim": [74, 75, 77, 78, 81, 83, 85], "automl": [75, 107, 108], "optunaestim": 76, "base": 77, "estimatorconfig": 79, "estimatorregistri": 80, "decal": 81, "zoobotestim": 82, "parametr": 83, "parametricestim": 84, "similar": 85, "similarityestim": 86, "job": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "j001": 88, "j002": 90, "j003": 92, "j004": 94, "j005": 96, "j006": 98, "j007": 100, "j008": 102, "j009": 104, "train": 105, "model": [106, 107, 108, 109, 110, 111, 117, 119, 120, 121, 122, 123, 124], "optuna_train": 108, "baselin": [109, 110], "finetune_train": 110, "callback": 111, "deltastop": 112, "mwandbcallback": 113, "mywandbcallback": 114, "prunecallback": 115, "savebesttrialcallback": 116, "infer": 117, "predictor": 118, "get_conv_arch": 120, "history_to_datafram": 121, "load_model": 122, "set_trainable_st": 123, "setup_se": 124, "servic": [125, 126, 128, 130, 132, 134, 136, 138, 141, 142, 144, 146, 147, 148, 149, 150], "github": 126, "githubservic": 127, "googl": 128, "gdrive": 129, "imagingservic": 131, "legaci": 132, "legacyservic": 133, "sciserv": [134, 135], "sdss": 136, "sloanservic": 137, "splu": [138, 141], "featur": 138, "author": 138, "imagetyp": 139, "splusservic": 140, "update_author": 141, "tap": 142, "tapservic": 143, "tensorboard": 144, "tensorboardservic": 145, "append_query_param": 147, "batch_download_fil": 148, "download_fil": 149, "parallel_function_executor": 150, "visual": [151, 152, 154, 155, 156, 157, 158, 159, 160], "plot": [152, 154, 155, 156, 157, 158, 159, 160], "seri": 153, "color_color": 154, "conf_matrix": 155, "data_distribut": 156, "mag_class_distribut": 157, "object_posit": 158, "roc": 159, "note": 159, "train_metr": 160, "welcom": 162, "": 162, "document": 162, "content": 162, "indic": 162, "tabl": 162, "api": 163, "refer": 163}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"mergernet.core": [[0, "module-mergernet.core"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "Experiment": [[3, "experiment"]], "mergernet.core.experiment.backup_model": [[4, "mergernet-core-experiment-backup-model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "CategoricalHyperParameter": [[6, "categoricalhyperparameter"]], "ConstantHyperParameter": [[7, "constanthyperparameter"]], "FloatHyperParameter": [[8, "floathyperparameter"]], "HP": [[9, "hp"]], "HyperParameter": [[10, "hyperparameter"]], "HyperParameterSet": [[11, "hyperparameterset"]], "IntHyperParameter": [[12, "inthyperparameter"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "mergernet.core.logging.configure_root_logger": [[14, "mergernet-core-logging-configure-root-logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "CachedDataFrame": [[16, "cacheddataframe"]], "SingletonMeta": [[17, "singletonmeta"]], "Timming": [[18, "timming"]], "mergernet.core.utils.array_fallback": [[19, "mergernet-core-utils-array-fallback"]], "classproperty": [[20, "classproperty"]], "mergernet.core.utils.compress_fits": [[21, "mergernet-core-utils-compress-fits"]], "mergernet.core.utils.deep_update": [[22, "mergernet-core-utils-deep-update"]], "mergernet.core.utils.find_by_value": [[23, "mergernet-core-utils-find-by-value"]], "mergernet.core.utils.heading": [[24, "mergernet-core-utils-heading"]], "mergernet.core.utils.iauname": [[25, "mergernet-core-utils-iauname"]], "Example": [[25, null], [26, null]], "mergernet.core.utils.iauname_relative_path": [[26, "mergernet-core-utils-iauname-relative-path"]], "mergernet.core.utils.load_image": [[27, "mergernet-core-utils-load-image"]], "mergernet.core.utils.load_table": [[28, "mergernet-core-utils-load-table"]], "mergernet.core.utils.not_in": [[29, "mergernet-core-utils-not-in"]], "mergernet.core.utils.save_table": [[30, "mergernet-core-utils-save-table"]], "mergernet.core.utils.serialize": [[31, "mergernet-core-utils-serialize"]], "mergernet.core.utils.unique_path": [[32, "mergernet-core-utils-unique-path"]], "mergernet.data": [[33, "module-mergernet.data"]], "mergernet.data.dataset": [[34, "module-mergernet.data.dataset"]], "Dataset": [[35, "dataset"], [101, "dataset"], [105, "dataset"]], "mergernet.data.dataset_config": [[36, "module-mergernet.data.dataset_config"]], "DatasetConfig": [[37, "datasetconfig"]], "DatasetRegistry": [[38, "datasetregistry"]], "mergernet.data.image": [[39, "module-mergernet.data.image"]], "ImageTransform": [[40, "imagetransform"]], "LegacyRGB": [[41, "legacyrgb"]], "LuptonRGB": [[42, "luptonrgb"]], "mergernet.data.image.asinh_map": [[43, "mergernet-data-image-asinh-map"]], "mergernet.data.image.asinh_map2": [[44, "mergernet-data-image-asinh-map2"]], "mergernet.data.kfold": [[45, "module-mergernet.data.kfold"]], "DistributionKFold": [[46, "distributionkfold"]], "StratifiedDistributionKFold": [[47, "stratifieddistributionkfold"]], "mergernet.data.match": [[48, "module-mergernet.data.match"]], "CrossMatch": [[49, "crossmatch"]], "CrossMatchResult": [[50, "crossmatchresult"]], "XTable": [[51, "xtable"]], "mergernet.data.preprocessing": [[52, "module-mergernet.data.preprocessing"]], "mergernet.data.preprocessing.load_jpg": [[53, "mergernet-data-preprocessing-load-jpg"]], "mergernet.data.preprocessing.load_png": [[54, "mergernet-data-preprocessing-load-png"]], "mergernet.data.preprocessing.normalize_rgb": [[55, "mergernet-data-preprocessing-normalize-rgb"]], "mergernet.data.preprocessing.one_hot_factory": [[56, "mergernet-data-preprocessing-one-hot-factory"]], "mergernet.data.preprocessing.standardize_rgb": [[57, "mergernet-data-preprocessing-standardize-rgb"]], "mergernet.data.rgb": [[58, "module-mergernet.data.rgb"]], "RGB": [[59, "rgb"]], "mergernet.data.sanitization": [[60, "module-mergernet.data.sanitization"]], "DatasetSanitization": [[61, "datasetsanitization"]], "mergernet.data.trilogy": [[62, "module-mergernet.data.trilogy"]], "MakeImg": [[63, "makeimg"]], "mergernet.data.trilogy.RGB2im": [[64, "mergernet-data-trilogy-rgb2im"]], "mergernet.data.trilogy.adjust_saturation": [[65, "mergernet-data-trilogy-adjust-saturation"]], "mergernet.data.trilogy.da": [[66, "mergernet-data-trilogy-da"]], "mergernet.data.trilogy.get_clip": [[67, "mergernet-data-trilogy-get-clip"]], "mergernet.data.trilogy.get_levels": [[68, "mergernet-data-trilogy-get-levels"]], "mergernet.data.trilogy.imscale": [[69, "mergernet-data-trilogy-imscale"]], "mergernet.data.trilogy.meanstd": [[70, "mergernet-data-trilogy-meanstd"]], "mergernet.data.trilogy.rms": [[71, "mergernet-data-trilogy-rms"]], "mergernet.data.trilogy.satK2m": [[72, "mergernet-data-trilogy-satk2m"]], "mergernet.data.trilogy.setLevel": [[73, "mergernet-data-trilogy-setlevel"]], "mergernet.estimators": [[74, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[75, "module-mergernet.estimators.automl"]], "OptunaEstimator": [[76, "optunaestimator"]], "mergernet.estimators.base": [[77, "module-mergernet.estimators.base"]], "Estimator": [[78, "estimator"]], "EstimatorConfig": [[79, "estimatorconfig"]], "EstimatorRegistry": [[80, "estimatorregistry"]], "mergernet.estimators.decals": [[81, "module-mergernet.estimators.decals"]], "ZoobotEstimator": [[82, "zoobotestimator"]], "mergernet.estimators.parametric": [[83, "module-mergernet.estimators.parametric"]], "ParametricEstimator": [[84, "parametricestimator"]], "mergernet.estimators.similarity": [[85, "module-mergernet.estimators.similarity"]], "SimilarityEstimator": [[86, "similarityestimator"]], "mergernet.jobs": [[87, "module-mergernet.jobs"]], "mergernet.jobs.j001": [[88, "module-mergernet.jobs.j001"]], "Job": [[89, "job"], [91, "job"], [93, "job"], [95, "job"], [97, "job"], [99, "job"], [101, "job"], [103, "job"], [105, "job"]], "mergernet.jobs.j002": [[90, "module-mergernet.jobs.j002"]], "mergernet.jobs.j003": [[92, "module-mergernet.jobs.j003"]], "mergernet.jobs.j004": [[94, "module-mergernet.jobs.j004"]], "mergernet.jobs.j005": [[96, "module-mergernet.jobs.j005"]], "mergernet.jobs.j006": [[98, "module-mergernet.jobs.j006"]], "mergernet.jobs.j007": [[100, "module-mergernet.jobs.j007"]], "mergernet.jobs.j008": [[102, "module-mergernet.jobs.j008"]], "mergernet.jobs.j009": [[104, "module-mergernet.jobs.j009"]], "Train": [[105, "train"]], "mergernet.model": [[106, "module-mergernet.model"]], "mergernet.model.automl": [[107, "module-mergernet.model.automl"]], "mergernet.model.automl.optuna_train": [[108, "mergernet-model-automl-optuna-train"]], "mergernet.model.baseline": [[109, "module-mergernet.model.baseline"]], "mergernet.model.baseline.finetune_train": [[110, "mergernet-model-baseline-finetune-train"]], "mergernet.model.callbacks": [[111, "module-mergernet.model.callbacks"]], "DeltaStopping": [[112, "deltastopping"]], "MWandbCallback": [[113, "mwandbcallback"]], "MyWandbCallback": [[114, "mywandbcallback"]], "Examples": [[114, null], [140, null]], "PruneCallback": [[115, "prunecallback"]], "SaveBestTrialCallback": [[116, "savebesttrialcallback"]], "mergernet.model.inference": [[117, "module-mergernet.model.inference"]], "Predictor": [[118, "predictor"]], "mergernet.model.utils": [[119, "module-mergernet.model.utils"]], "mergernet.model.utils.get_conv_arch": [[120, "mergernet-model-utils-get-conv-arch"]], "mergernet.model.utils.history_to_dataframe": [[121, "mergernet-model-utils-history-to-dataframe"]], "mergernet.model.utils.load_model": [[122, "mergernet-model-utils-load-model"]], "mergernet.model.utils.set_trainable_state": [[123, "mergernet-model-utils-set-trainable-state"]], "mergernet.model.utils.setup_seeds": [[124, "mergernet-model-utils-setup-seeds"]], "mergernet.services": [[125, "module-mergernet.services"]], "mergernet.services.github": [[126, "module-mergernet.services.github"]], "GithubService": [[127, "githubservice"]], "mergernet.services.google": [[128, "module-mergernet.services.google"]], "GDrive": [[129, "gdrive"]], "mergernet.services.imaging": [[130, "module-mergernet.services.imaging"]], "ImagingService": [[131, "imagingservice"]], "mergernet.services.legacy": [[132, "module-mergernet.services.legacy"]], "LegacyService": [[133, "legacyservice"]], "mergernet.services.sciserver": [[134, "module-mergernet.services.sciserver"]], "SciServer": [[135, "sciserver"]], "mergernet.services.sdss": [[136, "module-mergernet.services.sdss"]], "SloanService": [[137, "sloanservice"]], "mergernet.services.splus": [[138, "module-mergernet.services.splus"]], "Features": [[138, "features"]], "Authors": [[138, "authors"]], "ImageType": [[139, "imagetype"]], "SplusService": [[140, "splusservice"]], "mergernet.services.splus.update_authorization": [[141, "mergernet-services-splus-update-authorization"]], "mergernet.services.tap": [[142, "module-mergernet.services.tap"]], "TapService": [[143, "tapservice"]], "mergernet.services.tensorboard": [[144, "module-mergernet.services.tensorboard"]], "TensorboardService": [[145, "tensorboardservice"]], "mergernet.services.utils": [[146, "module-mergernet.services.utils"]], "mergernet.services.utils.append_query_params": [[147, "mergernet-services-utils-append-query-params"]], "mergernet.services.utils.batch_download_file": [[148, "mergernet-services-utils-batch-download-file"]], "mergernet.services.utils.download_file": [[149, "mergernet-services-utils-download-file"]], "mergernet.services.utils.parallel_function_executor": [[150, "mergernet-services-utils-parallel-function-executor"]], "mergernet.visualization": [[151, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[152, "module-mergernet.visualization.plot"]], "Serie": [[153, "serie"]], "mergernet.visualization.plot.color_color": [[154, "mergernet-visualization-plot-color-color"]], "mergernet.visualization.plot.conf_matrix": [[155, "mergernet-visualization-plot-conf-matrix"]], "mergernet.visualization.plot.data_distribution": [[156, "mergernet-visualization-plot-data-distribution"]], "mergernet.visualization.plot.mag_class_distribution": [[157, "mergernet-visualization-plot-mag-class-distribution"]], "mergernet.visualization.plot.object_position": [[158, "mergernet-visualization-plot-object-position"]], "mergernet.visualization.plot.roc": [[159, "mergernet-visualization-plot-roc"]], "Notes": [[159, null]], "mergernet.visualization.plot.train_metrics": [[160, "mergernet-visualization-plot-train-metrics"]], "Experiments": [[161, "experiments"]], "Welcome to mergernet\u2019s documentation!": [[162, "welcome-to-mergernet-s-documentation"]], "Contents:": [[162, null]], "Indices and tables": [[162, "indices-and-tables"]], "API Reference": [[163, "api-reference"]]}, "indexentries": {"mergernet.core": [[0, "module-mergernet.core"]], "module": [[0, "module-mergernet.core"], [1, "module-mergernet.core.constants"], [2, "module-mergernet.core.experiment"], [5, "module-mergernet.core.hp"], [13, "module-mergernet.core.logging"], [15, "module-mergernet.core.utils"], [33, "module-mergernet.data"], [34, "module-mergernet.data.dataset"], [36, "module-mergernet.data.dataset_config"], [39, "module-mergernet.data.image"], [45, "module-mergernet.data.kfold"], [48, "module-mergernet.data.match"], [52, "module-mergernet.data.preprocessing"], [58, "module-mergernet.data.rgb"], [60, "module-mergernet.data.sanitization"], [62, "module-mergernet.data.trilogy"], [74, "module-mergernet.estimators"], [75, "module-mergernet.estimators.automl"], [77, "module-mergernet.estimators.base"], [81, "module-mergernet.estimators.decals"], [83, "module-mergernet.estimators.parametric"], [85, "module-mergernet.estimators.similarity"], [87, "module-mergernet.jobs"], [88, "module-mergernet.jobs.j001"], [90, "module-mergernet.jobs.j002"], [92, "module-mergernet.jobs.j003"], [94, "module-mergernet.jobs.j004"], [96, "module-mergernet.jobs.j005"], [98, "module-mergernet.jobs.j006"], [100, "module-mergernet.jobs.j007"], [102, "module-mergernet.jobs.j008"], [104, "module-mergernet.jobs.j009"], [106, "module-mergernet.model"], [107, "module-mergernet.model.automl"], [109, "module-mergernet.model.baseline"], [111, "module-mergernet.model.callbacks"], [117, "module-mergernet.model.inference"], [119, "module-mergernet.model.utils"], [125, "module-mergernet.services"], [126, "module-mergernet.services.github"], [128, "module-mergernet.services.google"], [130, "module-mergernet.services.imaging"], [132, "module-mergernet.services.legacy"], [134, "module-mergernet.services.sciserver"], [136, "module-mergernet.services.sdss"], [138, "module-mergernet.services.splus"], [142, "module-mergernet.services.tap"], [144, "module-mergernet.services.tensorboard"], [146, "module-mergernet.services.utils"], [151, "module-mergernet.visualization"], [152, "module-mergernet.visualization.plot"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "experiment (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment"]], "experiment.tracker (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment.Tracker"]], "_exp_created (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._exp_created"]], "_post_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._post_run"]], "_pre_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._pre_run"]], "_registered_artifacts (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._setup_experiment_attributes"]], "download_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.download_file_gd"]], "exp_id (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_id"]], "exp_name (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_name"]], "finish_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.finish_wandb"]], "gd_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_exp_path"]], "gd_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_shared_path"]], "init_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.init_wandb"]], "local_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_exp_path"]], "local_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_shared_path"]], "notes (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.notes"]], "register_artifact() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.register_artifact"]], "run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment.run"]], "upload_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_file_gd"]], "upload_registered_artifacts() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_registered_artifacts"]], "backup_model() (in module mergernet.core.experiment)": [[4, "mergernet.core.experiment.backup_model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "categoricalhyperparameter (class in mergernet.core.hp)": [[6, "mergernet.core.hp.CategoricalHyperParameter"]], "clear_last_value() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.categoricalhyperparameter static method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.to_dict"]], "constanthyperparameter (class in mergernet.core.hp)": [[7, "mergernet.core.hp.ConstantHyperParameter"]], "clear_last_value() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.constanthyperparameter static method)": [[7, "mergernet.core.hp.ConstantHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.to_dict"]], "floathyperparameter (class in mergernet.core.hp)": [[8, "mergernet.core.hp.FloatHyperParameter"]], "clear_last_value() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.floathyperparameter static method)": [[8, "mergernet.core.hp.FloatHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.to_dict"]], "hp (class in mergernet.core.hp)": [[9, "mergernet.core.hp.HP"]], "cat() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.cat"]], "const() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.const"]], "num() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.num"]], "hyperparameter (class in mergernet.core.hp)": [[10, "mergernet.core.hp.HyperParameter"]], "clear_last_value() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.hyperparameter static method)": [[10, "mergernet.core.hp.HyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_trial"]], "suggest() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.suggest"]], "to_dict() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.to_dict"]], "hyperparameterset (class in mergernet.core.hp)": [[11, "mergernet.core.hp.HyperParameterSet"]], "add() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.add"]], "clear_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.clear_values_dict"]], "get() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.get"]], "set_trial() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.set_trial"]], "to_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.to_values_dict"]], "inthyperparameter (class in mergernet.core.hp)": [[12, "mergernet.core.hp.IntHyperParameter"]], "clear_last_value() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.inthyperparameter static method)": [[12, "mergernet.core.hp.IntHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.to_dict"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "configure_root_logger() (in module mergernet.core.logging)": [[14, "mergernet.core.logging.configure_root_logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "cacheddataframe (class in mergernet.core.utils)": [[16, "mergernet.core.utils.CachedDataFrame"]], "_cache (mergernet.core.utils.cacheddataframe attribute)": [[16, "mergernet.core.utils.CachedDataFrame._cache"]], "load() (mergernet.core.utils.cacheddataframe class method)": [[16, "mergernet.core.utils.CachedDataFrame.load"]], "singletonmeta (class in mergernet.core.utils)": [[17, "mergernet.core.utils.SingletonMeta"]], "__new__() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.__new__"]], "_instances (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._instances"]], "_lock (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._lock"]], "mro() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.mro"]], "timming (class in mergernet.core.utils)": [[18, "mergernet.core.utils.Timming"]], "_format_time() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming._format_time"]], "duration() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.duration"]], "end() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.end"]], "start() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.start"]], "array_fallback() (in module mergernet.core.utils)": [[19, "mergernet.core.utils.array_fallback"]], "__new__() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.__new__"]], "classproperty (class in mergernet.core.utils)": [[20, "mergernet.core.utils.classproperty"]], "deleter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.deleter"]], "fdel (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fdel"]], "fget (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fget"]], "fset (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fset"]], "getter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.getter"]], "setter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.setter"]], "compress_fits() (in module mergernet.core.utils)": [[21, "mergernet.core.utils.compress_fits"]], "deep_update() (in module mergernet.core.utils)": [[22, "mergernet.core.utils.deep_update"]], "find_by_value() (in module mergernet.core.utils)": [[23, "mergernet.core.utils.find_by_value"]], "heading() (in module mergernet.core.utils)": [[24, "mergernet.core.utils.heading"]], "iauname() (in module mergernet.core.utils)": [[25, "mergernet.core.utils.iauname"]], "iauname_relative_path() (in module mergernet.core.utils)": [[26, "mergernet.core.utils.iauname_relative_path"]], "load_image() (in module mergernet.core.utils)": [[27, "mergernet.core.utils.load_image"]], "load_table() (in module mergernet.core.utils)": [[28, "mergernet.core.utils.load_table"]], "not_in() (in module mergernet.core.utils)": [[29, "mergernet.core.utils.not_in"]], "save_table() (in module mergernet.core.utils)": [[30, "mergernet.core.utils.save_table"]], "serialize() (in module mergernet.core.utils)": [[31, "mergernet.core.utils.serialize"]], "unique_path() (in module mergernet.core.utils)": [[32, "mergernet.core.utils.unique_path"]], "mergernet.data": [[33, "module-mergernet.data"]], "mergernet.data.dataset": [[34, "module-mergernet.data.dataset"]], "dataset (class in mergernet.data.dataset)": [[35, "mergernet.data.dataset.Dataset"]], "_create_dataset_table() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset._create_dataset_table"]], "_discretize_label() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset._discretize_label"]], "_transform_images() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset._transform_images"]], "compute_class_weight() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.compute_class_weight"]], "concat_fold_column() (mergernet.data.dataset.dataset static method)": [[35, "mergernet.data.dataset.Dataset.concat_fold_column"]], "download() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.download"]], "get_x() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.get_X"]], "get_x_by_fold() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.get_X_by_fold"]], "get_fold() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.get_fold"]], "get_images_paths() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.get_images_paths"]], "get_preds_dataset() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.get_preds_dataset"]], "get_table() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.get_table"]], "is_dataset_downloaded() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.is_dataset_downloaded"]], "prepare_data() (mergernet.data.dataset.dataset method)": [[35, "mergernet.data.dataset.Dataset.prepare_data"]], "registry (mergernet.data.dataset.dataset attribute)": [[35, "mergernet.data.dataset.Dataset.registry"]], "mergernet.data.dataset_config": [[36, "module-mergernet.data.dataset_config"]], "datasetconfig (class in mergernet.data.dataset_config)": [[37, "mergernet.data.dataset_config.DatasetConfig"]], "bin_legacy_north_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BIN_LEGACY_NORTH_RGB_128"]], "bin_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BIN_SDSS_128"]], "blind_splus_gal80_ls10_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_GAL80_LS10_RGB_128"]], "blind_splus_lupton_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_128"]], "blind_splus_lupton_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_150"]], "blind_splus_trilogy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_128"]], "blind_splus_trilogy_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_150"]], "darg_no_inspection (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.DARG_NO_INSPECTION"]], "datasetregistry (class in mergernet.data.dataset_config)": [[38, "mergernet.data.dataset_config.DatasetRegistry"]], "mesd_legacy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.MESD_LEGACY_128"]], "mesd_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[38, "mergernet.data.dataset_config.DatasetRegistry.MESD_SDSS_128"]], "mergernet.data.image": [[39, "module-mergernet.data.image"]], "imagetransform (class in mergernet.data.image)": [[40, "mergernet.data.image.ImageTransform"]], "_abc_impl (mergernet.data.image.imagetransform attribute)": [[40, "mergernet.data.image.ImageTransform._abc_impl"]], "batch_transform() (mergernet.data.image.imagetransform method)": [[40, "mergernet.data.image.ImageTransform.batch_transform"]], "transform() (mergernet.data.image.imagetransform method)": [[40, "mergernet.data.image.ImageTransform.transform"]], "legacyrgb (class in mergernet.data.image)": [[41, "mergernet.data.image.LegacyRGB"]], "_abc_impl (mergernet.data.image.legacyrgb attribute)": [[41, "mergernet.data.image.LegacyRGB._abc_impl"]], "batch_transform() (mergernet.data.image.legacyrgb method)": [[41, "mergernet.data.image.LegacyRGB.batch_transform"]], "transform() (mergernet.data.image.legacyrgb method)": [[41, "mergernet.data.image.LegacyRGB.transform"]], "luptonrgb (class in mergernet.data.image)": [[42, "mergernet.data.image.LuptonRGB"]], "_abc_impl (mergernet.data.image.luptonrgb attribute)": [[42, "mergernet.data.image.LuptonRGB._abc_impl"]], "batch_transform() (mergernet.data.image.luptonrgb method)": [[42, "mergernet.data.image.LuptonRGB.batch_transform"]], "transform() (mergernet.data.image.luptonrgb method)": [[42, "mergernet.data.image.LuptonRGB.transform"]], "asinh_map() (in module mergernet.data.image)": [[43, "mergernet.data.image.asinh_map"]], "asinh_map2() (in module mergernet.data.image)": [[44, "mergernet.data.image.asinh_map2"]], "mergernet.data.kfold": [[45, "module-mergernet.data.kfold"]], "distributionkfold (class in mergernet.data.kfold)": [[46, "mergernet.data.kfold.DistributionKFold"]], "split() (mergernet.data.kfold.distributionkfold method)": [[46, "mergernet.data.kfold.DistributionKFold.split"]], "stratifieddistributionkfold (class in mergernet.data.kfold)": [[47, "mergernet.data.kfold.StratifiedDistributionKFold"]], "compute_max_bins() (mergernet.data.kfold.stratifieddistributionkfold static method)": [[47, "mergernet.data.kfold.StratifiedDistributionKFold.compute_max_bins"]], "split_all() (mergernet.data.kfold.stratifieddistributionkfold method)": [[47, "mergernet.data.kfold.StratifiedDistributionKFold.split_all"]], "split_ids() (mergernet.data.kfold.stratifieddistributionkfold method)": [[47, "mergernet.data.kfold.StratifiedDistributionKFold.split_ids"]], "mergernet.data.match": [[48, "module-mergernet.data.match"]], "crossmatch (class in mergernet.data.match)": [[49, "mergernet.data.match.CrossMatch"]], "crossmatch() (mergernet.data.match.crossmatch method)": [[49, "mergernet.data.match.CrossMatch.crossmatch"]], "pair_match() (mergernet.data.match.crossmatch method)": [[49, "mergernet.data.match.CrossMatch.pair_match"]], "unique() (mergernet.data.match.crossmatch method)": [[49, "mergernet.data.match.CrossMatch.unique"]], "crossmatchresult (class in mergernet.data.match)": [[50, "mergernet.data.match.CrossMatchResult"]], "distance (mergernet.data.match.crossmatchresult attribute)": [[50, "mergernet.data.match.CrossMatchResult.distance"]], "primary_idx (mergernet.data.match.crossmatchresult attribute)": [[50, "mergernet.data.match.CrossMatchResult.primary_idx"]], "secondary_idx (mergernet.data.match.crossmatchresult attribute)": [[50, "mergernet.data.match.CrossMatchResult.secondary_idx"]], "table (mergernet.data.match.crossmatchresult attribute)": [[50, "mergernet.data.match.CrossMatchResult.table"]], "xtable (class in mergernet.data.match)": [[51, "mergernet.data.match.XTable"]], "get_coords() (mergernet.data.match.xtable method)": [[51, "mergernet.data.match.XTable.get_coords"]], "to_df() (mergernet.data.match.xtable method)": [[51, "mergernet.data.match.XTable.to_df"]], "mergernet.data.preprocessing": [[52, "module-mergernet.data.preprocessing"]], "load_jpg() (in module mergernet.data.preprocessing)": [[53, "mergernet.data.preprocessing.load_jpg"]], "load_png() (in module mergernet.data.preprocessing)": [[54, "mergernet.data.preprocessing.load_png"]], "normalize_rgb() (in module mergernet.data.preprocessing)": [[55, "mergernet.data.preprocessing.normalize_rgb"]], "one_hot_factory() (in module mergernet.data.preprocessing)": [[56, "mergernet.data.preprocessing.one_hot_factory"]], "standardize_rgb() (in module mergernet.data.preprocessing)": [[57, "mergernet.data.preprocessing.standardize_rgb"]], "mergernet.data.rgb": [[58, "module-mergernet.data.rgb"]], "rgb (class in mergernet.data.rgb)": [[59, "mergernet.data.rgb.RGB"]], "make_trilogy_fits() (mergernet.data.rgb.rgb method)": [[59, "mergernet.data.rgb.RGB.make_trilogy_fits"]], "trilogy_fits_to_png() (mergernet.data.rgb.rgb method)": [[59, "mergernet.data.rgb.RGB.trilogy_fits_to_png"]], "mergernet.data.sanitization": [[60, "module-mergernet.data.sanitization"]], "datasetsanitization (class in mergernet.data.sanitization)": [[61, "mergernet.data.sanitization.DatasetSanitization"]], "check_images() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.check_images"]], "drop_images_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_filesize"]], "drop_images_by_iauname() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_iauname"]], "filesize_histogram() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.filesize_histogram"]], "get_filesize_distribution() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.get_filesize_distribution"]], "get_iauname_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.get_iauname_by_filesize"]], "sample() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.sample"]], "sanitize() (mergernet.data.sanitization.datasetsanitization method)": [[61, "mergernet.data.sanitization.DatasetSanitization.sanitize"]], "mergernet.data.trilogy": [[62, "module-mergernet.data.trilogy"]], "makeimg (class in mergernet.data.trilogy)": [[63, "mergernet.data.trilogy.MakeImg"]], "color() (mergernet.data.trilogy.makeimg method)": [[63, "mergernet.data.trilogy.MakeImg.color"]], "get_array() (mergernet.data.trilogy.makeimg method)": [[63, "mergernet.data.trilogy.MakeImg.get_array"]], "savefig() (mergernet.data.trilogy.makeimg method)": [[63, "mergernet.data.trilogy.MakeImg.savefig"]], "rgb2im() (in module mergernet.data.trilogy)": [[64, "mergernet.data.trilogy.RGB2im"]], "adjust_saturation() (in module mergernet.data.trilogy)": [[65, "mergernet.data.trilogy.adjust_saturation"]], "da() (in module mergernet.data.trilogy)": [[66, "mergernet.data.trilogy.da"]], "get_clip() (in module mergernet.data.trilogy)": [[67, "mergernet.data.trilogy.get_clip"]], "get_levels() (in module mergernet.data.trilogy)": [[68, "mergernet.data.trilogy.get_levels"]], "imscale() (in module mergernet.data.trilogy)": [[69, "mergernet.data.trilogy.imscale"]], "meanstd() (in module mergernet.data.trilogy)": [[70, "mergernet.data.trilogy.meanstd"]], "rms() (in module mergernet.data.trilogy)": [[71, "mergernet.data.trilogy.rms"]], "satk2m() (in module mergernet.data.trilogy)": [[72, "mergernet.data.trilogy.satK2m"]], "setlevel() (in module mergernet.data.trilogy)": [[73, "mergernet.data.trilogy.setLevel"]], "mergernet.estimators": [[74, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[75, "module-mergernet.estimators.automl"]], "optunaestimator (class in mergernet.estimators.automl)": [[76, "mergernet.estimators.automl.OptunaEstimator"]], "_abc_impl (mergernet.estimators.automl.optunaestimator attribute)": [[76, "mergernet.estimators.automl.OptunaEstimator._abc_impl"]], "_objective() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator._objective"]], "build() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.build"]], "compile_model() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.compile_model"]], "download() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.download"]], "get_conv_arch() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.plot"]], "predict() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.predict"]], "registry (mergernet.estimators.automl.optunaestimator attribute)": [[76, "mergernet.estimators.automl.OptunaEstimator.registry"]], "set_trainable() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.set_trainable"]], "tf_model (mergernet.estimators.automl.optunaestimator property)": [[76, "mergernet.estimators.automl.OptunaEstimator.tf_model"]], "train() (mergernet.estimators.automl.optunaestimator method)": [[76, "mergernet.estimators.automl.OptunaEstimator.train"]], "mergernet.estimators.base": [[77, "module-mergernet.estimators.base"]], "estimator (class in mergernet.estimators.base)": [[78, "mergernet.estimators.base.Estimator"]], "_abc_impl (mergernet.estimators.base.estimator attribute)": [[78, "mergernet.estimators.base.Estimator._abc_impl"]], "build() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.build"]], "compile_model() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.compile_model"]], "download() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.download"]], "get_conv_arch() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.get_dataaug_block"]], "plot() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.plot"]], "predict() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.predict"]], "registry (mergernet.estimators.base.estimator attribute)": [[78, "mergernet.estimators.base.Estimator.registry"]], "set_trainable() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.set_trainable"]], "tf_model (mergernet.estimators.base.estimator property)": [[78, "mergernet.estimators.base.Estimator.tf_model"]], "train() (mergernet.estimators.base.estimator method)": [[78, "mergernet.estimators.base.Estimator.train"]], "estimatorconfig (class in mergernet.estimators.base)": [[79, "mergernet.estimators.base.EstimatorConfig"]], "estimatorregistry (class in mergernet.estimators.base)": [[80, "mergernet.estimators.base.EstimatorRegistry"]], "zoobot_greyscale (mergernet.estimators.base.estimatorregistry attribute)": [[80, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_GREYSCALE"]], "zoobot_rgb (mergernet.estimators.base.estimatorregistry attribute)": [[80, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_RGB"]], "mergernet.estimators.decals": [[81, "module-mergernet.estimators.decals"]], "zoobotestimator (class in mergernet.estimators.decals)": [[82, "mergernet.estimators.decals.ZoobotEstimator"]], "_abc_impl (mergernet.estimators.decals.zoobotestimator attribute)": [[82, "mergernet.estimators.decals.ZoobotEstimator._abc_impl"]], "_prepare_dataset() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator._prepare_dataset"]], "build() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.build"]], "cnn_representations() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.cnn_representations"]], "compile_model() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.compile_model"]], "download() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.download"]], "get_conv_arch() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.get_dataaug_block"]], "pca() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.pca"]], "plot() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.plot"]], "predict() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.predict"]], "registry (mergernet.estimators.decals.zoobotestimator attribute)": [[82, "mergernet.estimators.decals.ZoobotEstimator.registry"]], "set_trainable() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.set_trainable"]], "tf_model (mergernet.estimators.decals.zoobotestimator property)": [[82, "mergernet.estimators.decals.ZoobotEstimator.tf_model"]], "train() (mergernet.estimators.decals.zoobotestimator method)": [[82, "mergernet.estimators.decals.ZoobotEstimator.train"]], "mergernet.estimators.parametric": [[83, "module-mergernet.estimators.parametric"]], "parametricestimator (class in mergernet.estimators.parametric)": [[84, "mergernet.estimators.parametric.ParametricEstimator"]], "_abc_impl (mergernet.estimators.parametric.parametricestimator attribute)": [[84, "mergernet.estimators.parametric.ParametricEstimator._abc_impl"]], "build() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.build"]], "compile_model() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.compile_model"]], "download() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.download"]], "get_conv_arch() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.plot"]], "predict() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.predict"]], "registry (mergernet.estimators.parametric.parametricestimator attribute)": [[84, "mergernet.estimators.parametric.ParametricEstimator.registry"]], "set_trainable() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.set_trainable"]], "tf_model (mergernet.estimators.parametric.parametricestimator property)": [[84, "mergernet.estimators.parametric.ParametricEstimator.tf_model"]], "train() (mergernet.estimators.parametric.parametricestimator method)": [[84, "mergernet.estimators.parametric.ParametricEstimator.train"]], "mergernet.estimators.similarity": [[85, "module-mergernet.estimators.similarity"]], "similarityestimator (class in mergernet.estimators.similarity)": [[86, "mergernet.estimators.similarity.SimilarityEstimator"]], "_abc_impl (mergernet.estimators.similarity.similarityestimator attribute)": [[86, "mergernet.estimators.similarity.SimilarityEstimator._abc_impl"]], "_get_nontrivial_neighbours() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator._get_nontrivial_neighbours"]], "_match() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator._match"]], "build() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.build"]], "compile_model() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.compile_model"]], "download() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.download"]], "get_conv_arch() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.similarity.similarityestimator static method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.plot"]], "predict() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.predict"]], "registry (mergernet.estimators.similarity.similarityestimator attribute)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.registry"]], "set_trainable() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.set_trainable"]], "tf_model (mergernet.estimators.similarity.similarityestimator property)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.tf_model"]], "train() (mergernet.estimators.similarity.similarityestimator method)": [[86, "mergernet.estimators.similarity.SimilarityEstimator.train"]], "mergernet.jobs": [[87, "module-mergernet.jobs"]], "mergernet.jobs.j001": [[88, "module-mergernet.jobs.j001"]], "job (class in mergernet.jobs.j001)": [[89, "mergernet.jobs.j001.Job"]], "job.tracker (class in mergernet.jobs.j001)": [[89, "mergernet.jobs.j001.Job.Tracker"]], "_exp_created (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job._exp_created"]], "_post_run() (mergernet.jobs.j001.job method)": [[89, "mergernet.jobs.j001.Job._post_run"]], "_pre_run() (mergernet.jobs.j001.job method)": [[89, "mergernet.jobs.j001.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j001.job method)": [[89, "mergernet.jobs.j001.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j001.job method)": [[89, "mergernet.jobs.j001.Job.call"]], "download_file_gd() (mergernet.jobs.j001.job class method)": [[89, "mergernet.jobs.j001.Job.download_file_gd"]], "exp_id (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.exp_id"]], "exp_name (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j001.job class method)": [[89, "mergernet.jobs.j001.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j001.job class method)": [[89, "mergernet.jobs.j001.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.local_shared_path"]], "notes (mergernet.jobs.j001.job attribute)": [[89, "mergernet.jobs.j001.Job.notes"]], "register_artifact() (mergernet.jobs.j001.job class method)": [[89, "mergernet.jobs.j001.Job.register_artifact"]], "run() (mergernet.jobs.j001.job method)": [[89, "mergernet.jobs.j001.Job.run"]], "upload_file_gd() (mergernet.jobs.j001.job class method)": [[89, "mergernet.jobs.j001.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j001.job class method)": [[89, "mergernet.jobs.j001.Job.upload_registered_artifacts"]], "mergernet.jobs.j002": [[90, "module-mergernet.jobs.j002"]], "job (class in mergernet.jobs.j002)": [[91, "mergernet.jobs.j002.Job"]], "job.tracker (class in mergernet.jobs.j002)": [[91, "mergernet.jobs.j002.Job.Tracker"]], "_exp_created (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job._exp_created"]], "_post_run() (mergernet.jobs.j002.job method)": [[91, "mergernet.jobs.j002.Job._post_run"]], "_pre_run() (mergernet.jobs.j002.job method)": [[91, "mergernet.jobs.j002.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j002.job method)": [[91, "mergernet.jobs.j002.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j002.job method)": [[91, "mergernet.jobs.j002.Job.call"]], "download_file_gd() (mergernet.jobs.j002.job class method)": [[91, "mergernet.jobs.j002.Job.download_file_gd"]], "exp_id (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.exp_id"]], "exp_name (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j002.job class method)": [[91, "mergernet.jobs.j002.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j002.job class method)": [[91, "mergernet.jobs.j002.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.local_shared_path"]], "notes (mergernet.jobs.j002.job attribute)": [[91, "mergernet.jobs.j002.Job.notes"]], "register_artifact() (mergernet.jobs.j002.job class method)": [[91, "mergernet.jobs.j002.Job.register_artifact"]], "run() (mergernet.jobs.j002.job method)": [[91, "mergernet.jobs.j002.Job.run"]], "upload_file_gd() (mergernet.jobs.j002.job class method)": [[91, "mergernet.jobs.j002.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j002.job class method)": [[91, "mergernet.jobs.j002.Job.upload_registered_artifacts"]], "mergernet.jobs.j003": [[92, "module-mergernet.jobs.j003"]], "job (class in mergernet.jobs.j003)": [[93, "mergernet.jobs.j003.Job"]], "job.tracker (class in mergernet.jobs.j003)": [[93, "mergernet.jobs.j003.Job.Tracker"]], "_exp_created (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job._exp_created"]], "_post_run() (mergernet.jobs.j003.job method)": [[93, "mergernet.jobs.j003.Job._post_run"]], "_pre_run() (mergernet.jobs.j003.job method)": [[93, "mergernet.jobs.j003.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j003.job method)": [[93, "mergernet.jobs.j003.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j003.job method)": [[93, "mergernet.jobs.j003.Job.call"]], "download_file_gd() (mergernet.jobs.j003.job class method)": [[93, "mergernet.jobs.j003.Job.download_file_gd"]], "exp_id (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.exp_id"]], "exp_name (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j003.job class method)": [[93, "mergernet.jobs.j003.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j003.job class method)": [[93, "mergernet.jobs.j003.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.local_shared_path"]], "notes (mergernet.jobs.j003.job attribute)": [[93, "mergernet.jobs.j003.Job.notes"]], "register_artifact() (mergernet.jobs.j003.job class method)": [[93, "mergernet.jobs.j003.Job.register_artifact"]], "run() (mergernet.jobs.j003.job method)": [[93, "mergernet.jobs.j003.Job.run"]], "upload_file_gd() (mergernet.jobs.j003.job class method)": [[93, "mergernet.jobs.j003.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j003.job class method)": [[93, "mergernet.jobs.j003.Job.upload_registered_artifacts"]], "mergernet.jobs.j004": [[94, "module-mergernet.jobs.j004"]], "job (class in mergernet.jobs.j004)": [[95, "mergernet.jobs.j004.Job"]], "job.tracker (class in mergernet.jobs.j004)": [[95, "mergernet.jobs.j004.Job.Tracker"]], "_exp_created (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job._exp_created"]], "_post_run() (mergernet.jobs.j004.job method)": [[95, "mergernet.jobs.j004.Job._post_run"]], "_pre_run() (mergernet.jobs.j004.job method)": [[95, "mergernet.jobs.j004.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j004.job method)": [[95, "mergernet.jobs.j004.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j004.job method)": [[95, "mergernet.jobs.j004.Job.call"]], "download_file_gd() (mergernet.jobs.j004.job class method)": [[95, "mergernet.jobs.j004.Job.download_file_gd"]], "exp_id (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.exp_id"]], "exp_name (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j004.job class method)": [[95, "mergernet.jobs.j004.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j004.job class method)": [[95, "mergernet.jobs.j004.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.local_shared_path"]], "notes (mergernet.jobs.j004.job attribute)": [[95, "mergernet.jobs.j004.Job.notes"]], "register_artifact() (mergernet.jobs.j004.job class method)": [[95, "mergernet.jobs.j004.Job.register_artifact"]], "run() (mergernet.jobs.j004.job method)": [[95, "mergernet.jobs.j004.Job.run"]], "upload_file_gd() (mergernet.jobs.j004.job class method)": [[95, "mergernet.jobs.j004.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j004.job class method)": [[95, "mergernet.jobs.j004.Job.upload_registered_artifacts"]], "mergernet.jobs.j005": [[96, "module-mergernet.jobs.j005"]], "job (class in mergernet.jobs.j005)": [[97, "mergernet.jobs.j005.Job"]], "job.tracker (class in mergernet.jobs.j005)": [[97, "mergernet.jobs.j005.Job.Tracker"]], "_exp_created (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job._exp_created"]], "_post_run() (mergernet.jobs.j005.job method)": [[97, "mergernet.jobs.j005.Job._post_run"]], "_pre_run() (mergernet.jobs.j005.job method)": [[97, "mergernet.jobs.j005.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j005.job method)": [[97, "mergernet.jobs.j005.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j005.job method)": [[97, "mergernet.jobs.j005.Job.call"]], "download_file_gd() (mergernet.jobs.j005.job class method)": [[97, "mergernet.jobs.j005.Job.download_file_gd"]], "exp_id (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.exp_id"]], "exp_name (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j005.job class method)": [[97, "mergernet.jobs.j005.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j005.job class method)": [[97, "mergernet.jobs.j005.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.local_shared_path"]], "notes (mergernet.jobs.j005.job attribute)": [[97, "mergernet.jobs.j005.Job.notes"]], "register_artifact() (mergernet.jobs.j005.job class method)": [[97, "mergernet.jobs.j005.Job.register_artifact"]], "run() (mergernet.jobs.j005.job method)": [[97, "mergernet.jobs.j005.Job.run"]], "upload_file_gd() (mergernet.jobs.j005.job class method)": [[97, "mergernet.jobs.j005.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j005.job class method)": [[97, "mergernet.jobs.j005.Job.upload_registered_artifacts"]], "mergernet.jobs.j006": [[98, "module-mergernet.jobs.j006"]], "job (class in mergernet.jobs.j006)": [[99, "mergernet.jobs.j006.Job"]], "job.tracker (class in mergernet.jobs.j006)": [[99, "mergernet.jobs.j006.Job.Tracker"]], "_exp_created (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job._exp_created"]], "_post_run() (mergernet.jobs.j006.job method)": [[99, "mergernet.jobs.j006.Job._post_run"]], "_pre_run() (mergernet.jobs.j006.job method)": [[99, "mergernet.jobs.j006.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j006.job method)": [[99, "mergernet.jobs.j006.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j006.job method)": [[99, "mergernet.jobs.j006.Job.call"]], "download_file_gd() (mergernet.jobs.j006.job class method)": [[99, "mergernet.jobs.j006.Job.download_file_gd"]], "exp_id (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.exp_id"]], "exp_name (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j006.job class method)": [[99, "mergernet.jobs.j006.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j006.job class method)": [[99, "mergernet.jobs.j006.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.local_shared_path"]], "notes (mergernet.jobs.j006.job attribute)": [[99, "mergernet.jobs.j006.Job.notes"]], "register_artifact() (mergernet.jobs.j006.job class method)": [[99, "mergernet.jobs.j006.Job.register_artifact"]], "run() (mergernet.jobs.j006.job method)": [[99, "mergernet.jobs.j006.Job.run"]], "upload_file_gd() (mergernet.jobs.j006.job class method)": [[99, "mergernet.jobs.j006.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j006.job class method)": [[99, "mergernet.jobs.j006.Job.upload_registered_artifacts"]], "mergernet.jobs.j007": [[100, "module-mergernet.jobs.j007"]], "job (class in mergernet.jobs.j007)": [[101, "mergernet.jobs.j007.Job"]], "job.tracker (class in mergernet.jobs.j007)": [[101, "mergernet.jobs.j007.Job.Tracker"]], "_exp_created (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job._exp_created"]], "_post_run() (mergernet.jobs.j007.job method)": [[101, "mergernet.jobs.j007.Job._post_run"]], "_pre_run() (mergernet.jobs.j007.job method)": [[101, "mergernet.jobs.j007.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j007.job method)": [[101, "mergernet.jobs.j007.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j007.job method)": [[101, "mergernet.jobs.j007.Job.call"]], "download_file_gd() (mergernet.jobs.j007.job class method)": [[101, "mergernet.jobs.j007.Job.download_file_gd"]], "exp_id (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.exp_id"]], "exp_name (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j007.job class method)": [[101, "mergernet.jobs.j007.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j007.job class method)": [[101, "mergernet.jobs.j007.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.local_shared_path"]], "notes (mergernet.jobs.j007.job attribute)": [[101, "mergernet.jobs.j007.Job.notes"]], "register_artifact() (mergernet.jobs.j007.job class method)": [[101, "mergernet.jobs.j007.Job.register_artifact"]], "run() (mergernet.jobs.j007.job method)": [[101, "mergernet.jobs.j007.Job.run"]], "upload_file_gd() (mergernet.jobs.j007.job class method)": [[101, "mergernet.jobs.j007.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j007.job class method)": [[101, "mergernet.jobs.j007.Job.upload_registered_artifacts"]], "mergernet.jobs.j008": [[102, "module-mergernet.jobs.j008"]], "job (class in mergernet.jobs.j008)": [[103, "mergernet.jobs.j008.Job"]], "job.tracker (class in mergernet.jobs.j008)": [[103, "mergernet.jobs.j008.Job.Tracker"]], "_exp_created (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job._exp_created"]], "_post_run() (mergernet.jobs.j008.job method)": [[103, "mergernet.jobs.j008.Job._post_run"]], "_pre_run() (mergernet.jobs.j008.job method)": [[103, "mergernet.jobs.j008.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j008.job method)": [[103, "mergernet.jobs.j008.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j008.job method)": [[103, "mergernet.jobs.j008.Job.call"]], "download_file_gd() (mergernet.jobs.j008.job class method)": [[103, "mergernet.jobs.j008.Job.download_file_gd"]], "exp_id (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.exp_id"]], "exp_name (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j008.job class method)": [[103, "mergernet.jobs.j008.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j008.job class method)": [[103, "mergernet.jobs.j008.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.local_shared_path"]], "notes (mergernet.jobs.j008.job attribute)": [[103, "mergernet.jobs.j008.Job.notes"]], "register_artifact() (mergernet.jobs.j008.job class method)": [[103, "mergernet.jobs.j008.Job.register_artifact"]], "run() (mergernet.jobs.j008.job method)": [[103, "mergernet.jobs.j008.Job.run"]], "upload_file_gd() (mergernet.jobs.j008.job class method)": [[103, "mergernet.jobs.j008.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j008.job class method)": [[103, "mergernet.jobs.j008.Job.upload_registered_artifacts"]], "mergernet.jobs.j009": [[104, "module-mergernet.jobs.j009"]], "job (class in mergernet.jobs.j009)": [[105, "mergernet.jobs.j009.Job"]], "job.tracker (class in mergernet.jobs.j009)": [[105, "mergernet.jobs.j009.Job.Tracker"]], "_exp_created (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job._exp_created"]], "_post_run() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job._post_run"]], "_pre_run() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job.call"]], "download_file_gd() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.download_file_gd"]], "exp_id (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.exp_id"]], "exp_name (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.local_shared_path"]], "notes (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.notes"]], "register_artifact() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.register_artifact"]], "run() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job.run"]], "upload_file_gd() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.upload_registered_artifacts"]], "mergernet.model": [[106, "module-mergernet.model"]], "mergernet.model.automl": [[107, "module-mergernet.model.automl"]], "optuna_train() (in module mergernet.model.automl)": [[108, "mergernet.model.automl.optuna_train"]], "mergernet.model.baseline": [[109, "module-mergernet.model.baseline"]], "finetune_train() (in module mergernet.model.baseline)": [[110, "mergernet.model.baseline.finetune_train"]], "mergernet.model.callbacks": [[111, "module-mergernet.model.callbacks"]], "deltastopping (class in mergernet.model.callbacks)": [[112, "mergernet.model.callbacks.DeltaStopping"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.deltastopping attribute)": [[112, "mergernet.model.callbacks.DeltaStopping._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.deltastopping attribute)": [[112, "mergernet.model.callbacks.DeltaStopping._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.on_train_end"]], "set_model() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.set_model"]], "set_params() (mergernet.model.callbacks.deltastopping method)": [[112, "mergernet.model.callbacks.DeltaStopping.set_params"]], "mwandbcallback (class in mergernet.model.callbacks)": [[113, "mergernet.model.callbacks.MWandbCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mwandbcallback attribute)": [[113, "mergernet.model.callbacks.MWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mwandbcallback attribute)": [[113, "mergernet.model.callbacks.MWandbCallback._keras_api_names_v1"]], "get_flops() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mwandbcallback method)": [[113, "mergernet.model.callbacks.MWandbCallback.set_params"]], "mywandbcallback (class in mergernet.model.callbacks)": [[114, "mergernet.model.callbacks.MyWandbCallback"]], "_attempt_evaluation_log() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._attempt_evaluation_log"]], "_build_grad_accumulator_model() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._build_grad_accumulator_model"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mywandbcallback attribute)": [[114, "mergernet.model.callbacks.MyWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mywandbcallback attribute)": [[114, "mergernet.model.callbacks.MyWandbCallback._keras_api_names_v1"]], "_log_dataframe() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._log_dataframe"]], "_log_gradients() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._log_gradients"]], "_log_images() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._log_images"]], "_log_weights() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._log_weights"]], "_logits_to_captions() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._logits_to_captions"]], "_masks_to_pixels() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._masks_to_pixels"]], "_save_model() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._save_model"]], "_save_model_as_artifact() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback._save_model_as_artifact"]], "get_flops() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mywandbcallback method)": [[114, "mergernet.model.callbacks.MyWandbCallback.set_params"]], "prunecallback (class in mergernet.model.callbacks)": [[115, "mergernet.model.callbacks.PruneCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.prunecallback attribute)": [[115, "mergernet.model.callbacks.PruneCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.prunecallback attribute)": [[115, "mergernet.model.callbacks.PruneCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.set_model"]], "set_params() (mergernet.model.callbacks.prunecallback method)": [[115, "mergernet.model.callbacks.PruneCallback.set_params"]], "savebesttrialcallback (class in mergernet.model.callbacks)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.savebesttrialcallback attribute)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.savebesttrialcallback attribute)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.set_model"]], "set_params() (mergernet.model.callbacks.savebesttrialcallback method)": [[116, "mergernet.model.callbacks.SaveBestTrialCallback.set_params"]], "mergernet.model.inference": [[117, "module-mergernet.model.inference"]], "predictor (class in mergernet.model.inference)": [[118, "mergernet.model.inference.Predictor"]], "predict() (mergernet.model.inference.predictor method)": [[118, "mergernet.model.inference.Predictor.predict"]], "upload() (mergernet.model.inference.predictor method)": [[118, "mergernet.model.inference.Predictor.upload"]], "mergernet.model.utils": [[119, "module-mergernet.model.utils"]], "get_conv_arch() (in module mergernet.model.utils)": [[120, "mergernet.model.utils.get_conv_arch"]], "history_to_dataframe() (in module mergernet.model.utils)": [[121, "mergernet.model.utils.history_to_dataframe"]], "load_model() (in module mergernet.model.utils)": [[122, "mergernet.model.utils.load_model"]], "set_trainable_state() (in module mergernet.model.utils)": [[123, "mergernet.model.utils.set_trainable_state"]], "setup_seeds() (in module mergernet.model.utils)": [[124, "mergernet.model.utils.setup_seeds"]], "mergernet.services": [[125, "module-mergernet.services"]], "mergernet.services.github": [[126, "module-mergernet.services.github"]], "githubservice (class in mergernet.services.github)": [[127, "mergernet.services.github.GithubService"]], "_encode_content() (mergernet.services.github.githubservice method)": [[127, "mergernet.services.github.GithubService._encode_content"]], "_get_url() (mergernet.services.github.githubservice method)": [[127, "mergernet.services.github.GithubService._get_url"]], "commit() (mergernet.services.github.githubservice method)": [[127, "mergernet.services.github.GithubService.commit"]], "download() (mergernet.services.github.githubservice method)": [[127, "mergernet.services.github.GithubService.download"]], "get_lastest_job_run() (mergernet.services.github.githubservice method)": [[127, "mergernet.services.github.GithubService.get_lastest_job_run"]], "list_dir() (mergernet.services.github.githubservice method)": [[127, "mergernet.services.github.GithubService.list_dir"]], "mergernet.services.google": [[128, "module-mergernet.services.google"]], "gdrive (class in mergernet.services.google)": [[129, "mergernet.services.google.GDrive"]], "base_path (mergernet.services.google.gdrive attribute)": [[129, "mergernet.services.google.GDrive.base_path"]], "exists() (mergernet.services.google.gdrive method)": [[129, "mergernet.services.google.GDrive.exists"]], "get() (mergernet.services.google.gdrive method)": [[129, "mergernet.services.google.GDrive.get"]], "get_url() (mergernet.services.google.gdrive static method)": [[129, "mergernet.services.google.GDrive.get_url"]], "is_mounted() (mergernet.services.google.gdrive method)": [[129, "mergernet.services.google.GDrive.is_mounted"]], "move() (mergernet.services.google.gdrive method)": [[129, "mergernet.services.google.GDrive.move"]], "send() (mergernet.services.google.gdrive method)": [[129, "mergernet.services.google.GDrive.send"]], "send_dir() (mergernet.services.google.gdrive method)": [[129, "mergernet.services.google.GDrive.send_dir"]], "mergernet.services.imaging": [[130, "module-mergernet.services.imaging"]], "imagingservice (class in mergernet.services.imaging)": [[131, "mergernet.services.imaging.ImagingService"]], "_abc_impl (mergernet.services.imaging.imagingservice attribute)": [[131, "mergernet.services.imaging.ImagingService._abc_impl"]], "_batch_download_rgb() (mergernet.services.imaging.imagingservice method)": [[131, "mergernet.services.imaging.ImagingService._batch_download_rgb"]], "_download_rgb() (mergernet.services.imaging.imagingservice method)": [[131, "mergernet.services.imaging.ImagingService._download_rgb"]], "batch_cutout() (mergernet.services.imaging.imagingservice method)": [[131, "mergernet.services.imaging.ImagingService.batch_cutout"]], "cutout() (mergernet.services.imaging.imagingservice method)": [[131, "mergernet.services.imaging.ImagingService.cutout"]], "mergernet.services.legacy": [[132, "module-mergernet.services.legacy"]], "legacyservice (class in mergernet.services.legacy)": [[133, "mergernet.services.legacy.LegacyService"]], "_abc_impl (mergernet.services.legacy.legacyservice attribute)": [[133, "mergernet.services.legacy.LegacyService._abc_impl"]], "_batch_download_rgb() (mergernet.services.legacy.legacyservice method)": [[133, "mergernet.services.legacy.LegacyService._batch_download_rgb"]], "_download_rgb() (mergernet.services.legacy.legacyservice method)": [[133, "mergernet.services.legacy.LegacyService._download_rgb"]], "batch_cutout() (mergernet.services.legacy.legacyservice method)": [[133, "mergernet.services.legacy.LegacyService.batch_cutout"]], "cutout() (mergernet.services.legacy.legacyservice method)": [[133, "mergernet.services.legacy.LegacyService.cutout"]], "mergernet.services.sciserver": [[134, "module-mergernet.services.sciserver"]], "sciserver (class in mergernet.services.sciserver)": [[135, "mergernet.services.sciserver.SciServer"]], "get_url() (mergernet.services.sciserver.sciserver static method)": [[135, "mergernet.services.sciserver.SciServer.get_url"]], "mergernet.services.sdss": [[136, "module-mergernet.services.sdss"]], "sloanservice (class in mergernet.services.sdss)": [[137, "mergernet.services.sdss.SloanService"]], "batch_download_fits() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.batch_download_fits"]], "batch_download_rgb() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.batch_download_rgb"]], "crossmatch() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.crossmatch"]], "cutout() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.cutout"]], "download_fits() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.download_fits"]], "download_rgb() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.download_rgb"]], "get_image_filename() (mergernet.services.sdss.sloanservice method)": [[137, "mergernet.services.sdss.SloanService.get_image_filename"]], "mergernet.services.splus": [[138, "module-mergernet.services.splus"]], "imagetype (class in mergernet.services.splus)": [[139, "mergernet.services.splus.ImageType"]], "fits (mergernet.services.splus.imagetype attribute)": [[139, "mergernet.services.splus.ImageType.fits"]], "lupton (mergernet.services.splus.imagetype attribute)": [[139, "mergernet.services.splus.ImageType.lupton"]], "trilogy (mergernet.services.splus.imagetype attribute)": [[139, "mergernet.services.splus.ImageType.trilogy"]], "splusservice (class in mergernet.services.splus)": [[140, "mergernet.services.splus.SplusService"]], "_batch_download() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService._batch_download"]], "_download_image() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService._download_image"]], "_get_url() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService._get_url"]], "_lock (mergernet.services.splus.splusservice attribute)": [[140, "mergernet.services.splus.SplusService._lock"]], "_track_tap_job() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService._track_tap_job"]], "batch_image_download() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.batch_image_download"]], "batch_query() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.batch_query"]], "download_fits() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.download_fits"]], "download_lupton_rgb() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.download_lupton_rgb"]], "download_trilogy_rgb() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.download_trilogy_rgb"]], "query() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.query"]], "update_token() (mergernet.services.splus.splusservice method)": [[140, "mergernet.services.splus.SplusService.update_token"]], "update_authorization() (in module mergernet.services.splus)": [[141, "mergernet.services.splus.update_authorization"]], "mergernet.services.tap": [[142, "module-mergernet.services.tap"]], "tapservice (class in mergernet.services.tap)": [[143, "mergernet.services.tap.TapService"]], "batch_sync_query() (mergernet.services.tap.tapservice method)": [[143, "mergernet.services.tap.TapService.batch_sync_query"]], "sync_query() (mergernet.services.tap.tapservice method)": [[143, "mergernet.services.tap.TapService.sync_query"]], "mergernet.services.tensorboard": [[144, "module-mergernet.services.tensorboard"]], "tensorboardservice (class in mergernet.services.tensorboard)": [[145, "mergernet.services.tensorboard.TensorboardService"]], "upload_assets() (mergernet.services.tensorboard.tensorboardservice method)": [[145, "mergernet.services.tensorboard.TensorboardService.upload_assets"]], "mergernet.services.utils": [[146, "module-mergernet.services.utils"]], "append_query_params() (in module mergernet.services.utils)": [[147, "mergernet.services.utils.append_query_params"]], "batch_download_file() (in module mergernet.services.utils)": [[148, "mergernet.services.utils.batch_download_file"]], "download_file() (in module mergernet.services.utils)": [[149, "mergernet.services.utils.download_file"]], "parallel_function_executor() (in module mergernet.services.utils)": [[150, "mergernet.services.utils.parallel_function_executor"]], "mergernet.visualization": [[151, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[152, "module-mergernet.visualization.plot"]], "serie (class in mergernet.visualization.plot)": [[153, "mergernet.visualization.plot.Serie"]], "get_serie() (mergernet.visualization.plot.serie method)": [[153, "mergernet.visualization.plot.Serie.get_serie"]], "get_std() (mergernet.visualization.plot.serie method)": [[153, "mergernet.visualization.plot.Serie.get_std"]], "has_std() (mergernet.visualization.plot.serie method)": [[153, "mergernet.visualization.plot.Serie.has_std"]], "color_color() (in module mergernet.visualization.plot)": [[154, "mergernet.visualization.plot.color_color"]], "conf_matrix() (in module mergernet.visualization.plot)": [[155, "mergernet.visualization.plot.conf_matrix"]], "data_distribution() (in module mergernet.visualization.plot)": [[156, "mergernet.visualization.plot.data_distribution"]], "mag_class_distribution() (in module mergernet.visualization.plot)": [[157, "mergernet.visualization.plot.mag_class_distribution"]], "object_position() (in module mergernet.visualization.plot)": [[158, "mergernet.visualization.plot.object_position"]], "roc() (in module mergernet.visualization.plot)": [[159, "mergernet.visualization.plot.roc"]], "train_metrics() (in module mergernet.visualization.plot)": [[160, "mergernet.visualization.plot.train_metrics"]]}})