Search.setIndex({"docnames": ["api/mergernet.core", "api/mergernet.core.constants", "api/mergernet.core.experiment", "api/mergernet.core.experiment.Experiment", "api/mergernet.core.experiment.backup_model", "api/mergernet.core.hp", "api/mergernet.core.hp.CategoricalHyperParameter", "api/mergernet.core.hp.ConstantHyperParameter", "api/mergernet.core.hp.FloatHyperParameter", "api/mergernet.core.hp.HP", "api/mergernet.core.hp.HyperParameter", "api/mergernet.core.hp.HyperParameterSet", "api/mergernet.core.hp.IntHyperParameter", "api/mergernet.core.logging", "api/mergernet.core.logging.configure_root_logger", "api/mergernet.core.utils", "api/mergernet.core.utils.CachedDataFrame", "api/mergernet.core.utils.SingletonMeta", "api/mergernet.core.utils.Timming", "api/mergernet.core.utils.array_fallback", "api/mergernet.core.utils.classproperty", "api/mergernet.core.utils.compress_files", "api/mergernet.core.utils.compress_fits", "api/mergernet.core.utils.deep_update", "api/mergernet.core.utils.execute_posix_command", "api/mergernet.core.utils.extract_files", "api/mergernet.core.utils.extract_iauname_from_path", "api/mergernet.core.utils.find_by_value", "api/mergernet.core.utils.heading", "api/mergernet.core.utils.iauname", "api/mergernet.core.utils.iauname_path", "api/mergernet.core.utils.install_linux_package", "api/mergernet.core.utils.load_image", "api/mergernet.core.utils.load_table", "api/mergernet.core.utils.not_in", "api/mergernet.core.utils.save_image", "api/mergernet.core.utils.save_table", "api/mergernet.core.utils.serialize", "api/mergernet.core.utils.unique_path", "api/mergernet.data", "api/mergernet.data.dataset", "api/mergernet.data.dataset.Dataset", "api/mergernet.data.dataset.TFRDataset", "api/mergernet.data.dataset_config", "api/mergernet.data.dataset_config.DatasetConfig", "api/mergernet.data.dataset_config.DatasetRegistry", "api/mergernet.data.dataset_config.GoogleDriveResource", "api/mergernet.data.dataset_config.HTTPResource", "api/mergernet.data.image", "api/mergernet.data.image.ChannelAverage", "api/mergernet.data.image.Crop", "api/mergernet.data.image.ImagePipeline", "api/mergernet.data.image.ImageTransform", "api/mergernet.data.image.LegacyRGB", "api/mergernet.data.image.LuptonRGB", "api/mergernet.data.image.TensorToImage", "api/mergernet.data.image.TensorToShards", "api/mergernet.data.image.asinh_map", "api/mergernet.data.image.asinh_map2", "api/mergernet.data.kfold", "api/mergernet.data.kfold.DistributionKFold", "api/mergernet.data.kfold.StratifiedDistributionKFold", "api/mergernet.data.match", "api/mergernet.data.match.CrossMatch", "api/mergernet.data.match.CrossMatchResult", "api/mergernet.data.match.XTable", "api/mergernet.data.preprocessing", "api/mergernet.data.preprocessing.load_jpg", "api/mergernet.data.preprocessing.load_png", "api/mergernet.data.preprocessing.normalize_rgb", "api/mergernet.data.preprocessing.one_hot_factory", "api/mergernet.data.preprocessing.standardize_rgb", "api/mergernet.data.rgb", "api/mergernet.data.rgb.RGB", "api/mergernet.data.sanitization", "api/mergernet.data.sanitization.DatasetSanitization", "api/mergernet.data.trilogy", "api/mergernet.data.trilogy.MakeImg", "api/mergernet.data.trilogy.RGB2im", "api/mergernet.data.trilogy.adjust_saturation", "api/mergernet.data.trilogy.da", "api/mergernet.data.trilogy.get_clip", "api/mergernet.data.trilogy.get_levels", "api/mergernet.data.trilogy.imscale", "api/mergernet.data.trilogy.meanstd", "api/mergernet.data.trilogy.rms", "api/mergernet.data.trilogy.satK2m", "api/mergernet.data.trilogy.setLevel", "api/mergernet.estimators", "api/mergernet.estimators.automl", "api/mergernet.estimators.automl.OptunaEstimator", "api/mergernet.estimators.base", "api/mergernet.estimators.base.Estimator", "api/mergernet.estimators.base.EstimatorConfig", "api/mergernet.estimators.base.EstimatorRegistry", "api/mergernet.estimators.decals", "api/mergernet.estimators.decals.ZoobotEstimator", "api/mergernet.estimators.parametric", "api/mergernet.estimators.parametric.ParametricEstimator", "api/mergernet.jobs", "api/mergernet.jobs.j001", "api/mergernet.jobs.j001.Job", "api/mergernet.jobs.j002", "api/mergernet.jobs.j002.Job", "api/mergernet.jobs.j009", "api/mergernet.jobs.j009.Job", "api/mergernet.jobs.j010", "api/mergernet.jobs.j010.Job", "api/mergernet.jobs.j023", "api/mergernet.jobs.j023.Job", "api/mergernet.jobs.j026", "api/mergernet.jobs.j026.Job", "api/mergernet.jobs.j027", "api/mergernet.jobs.j027.Job", "api/mergernet.model", "api/mergernet.model.automl", "api/mergernet.model.automl.optuna_train", "api/mergernet.model.baseline", "api/mergernet.model.baseline.finetune_train", "api/mergernet.model.callbacks", "api/mergernet.model.callbacks.DeltaStopping", "api/mergernet.model.callbacks.MWandbCallback", "api/mergernet.model.callbacks.MyWandbCallback", "api/mergernet.model.callbacks.PruneCallback", "api/mergernet.model.callbacks.SaveBestTrialCallback", "api/mergernet.model.callbacks.TFKerasPruningCallback", "api/mergernet.model.callbacks.WandbGraphicsCallback", "api/mergernet.model.inference", "api/mergernet.model.inference.Predictor", "api/mergernet.model.utils", "api/mergernet.model.utils.get_conv_arch", "api/mergernet.model.utils.history_to_dataframe", "api/mergernet.model.utils.load_model", "api/mergernet.model.utils.set_trainable_state", "api/mergernet.model.utils.setup_seeds", "api/mergernet.services", "api/mergernet.services.github", "api/mergernet.services.github.GithubService", "api/mergernet.services.google", "api/mergernet.services.google.GDrive", "api/mergernet.services.imaging", "api/mergernet.services.imaging.ImagingService", "api/mergernet.services.legacy", "api/mergernet.services.legacy.LegacyService", "api/mergernet.services.sciserver", "api/mergernet.services.sciserver.SciServer", "api/mergernet.services.sdss", "api/mergernet.services.sdss.SloanService", "api/mergernet.services.splus", "api/mergernet.services.splus.ImageType", "api/mergernet.services.splus.SplusService", "api/mergernet.services.splus.update_authorization", "api/mergernet.services.tap", "api/mergernet.services.tap.TapService", "api/mergernet.services.tensorboard", "api/mergernet.services.tensorboard.TensorboardService", "api/mergernet.services.utils", "api/mergernet.services.utils.append_query_params", "api/mergernet.services.utils.batch_download_file", "api/mergernet.services.utils.download_file", "api/mergernet.services.utils.parallel_function_executor", "api/mergernet.visualization", "api/mergernet.visualization.plot", "api/mergernet.visualization.plot.Serie", "api/mergernet.visualization.plot.color_color", "api/mergernet.visualization.plot.conf_matrix", "api/mergernet.visualization.plot.data_distribution", "api/mergernet.visualization.plot.mag_class_distribution", "api/mergernet.visualization.plot.object_position", "api/mergernet.visualization.plot.roc", "api/mergernet.visualization.plot.train_metrics", "experiments", "index", "reference"], "filenames": ["api/mergernet.core.rst", "api/mergernet.core.constants.rst", "api/mergernet.core.experiment.rst", "api/mergernet.core.experiment.Experiment.rst", "api/mergernet.core.experiment.backup_model.rst", "api/mergernet.core.hp.rst", "api/mergernet.core.hp.CategoricalHyperParameter.rst", "api/mergernet.core.hp.ConstantHyperParameter.rst", "api/mergernet.core.hp.FloatHyperParameter.rst", "api/mergernet.core.hp.HP.rst", "api/mergernet.core.hp.HyperParameter.rst", "api/mergernet.core.hp.HyperParameterSet.rst", "api/mergernet.core.hp.IntHyperParameter.rst", "api/mergernet.core.logging.rst", "api/mergernet.core.logging.configure_root_logger.rst", "api/mergernet.core.utils.rst", "api/mergernet.core.utils.CachedDataFrame.rst", "api/mergernet.core.utils.SingletonMeta.rst", "api/mergernet.core.utils.Timming.rst", "api/mergernet.core.utils.array_fallback.rst", "api/mergernet.core.utils.classproperty.rst", "api/mergernet.core.utils.compress_files.rst", "api/mergernet.core.utils.compress_fits.rst", "api/mergernet.core.utils.deep_update.rst", "api/mergernet.core.utils.execute_posix_command.rst", "api/mergernet.core.utils.extract_files.rst", "api/mergernet.core.utils.extract_iauname_from_path.rst", "api/mergernet.core.utils.find_by_value.rst", "api/mergernet.core.utils.heading.rst", "api/mergernet.core.utils.iauname.rst", "api/mergernet.core.utils.iauname_path.rst", "api/mergernet.core.utils.install_linux_package.rst", "api/mergernet.core.utils.load_image.rst", "api/mergernet.core.utils.load_table.rst", "api/mergernet.core.utils.not_in.rst", "api/mergernet.core.utils.save_image.rst", "api/mergernet.core.utils.save_table.rst", "api/mergernet.core.utils.serialize.rst", "api/mergernet.core.utils.unique_path.rst", "api/mergernet.data.rst", "api/mergernet.data.dataset.rst", "api/mergernet.data.dataset.Dataset.rst", "api/mergernet.data.dataset.TFRDataset.rst", "api/mergernet.data.dataset_config.rst", "api/mergernet.data.dataset_config.DatasetConfig.rst", "api/mergernet.data.dataset_config.DatasetRegistry.rst", "api/mergernet.data.dataset_config.GoogleDriveResource.rst", "api/mergernet.data.dataset_config.HTTPResource.rst", "api/mergernet.data.image.rst", "api/mergernet.data.image.ChannelAverage.rst", "api/mergernet.data.image.Crop.rst", "api/mergernet.data.image.ImagePipeline.rst", "api/mergernet.data.image.ImageTransform.rst", "api/mergernet.data.image.LegacyRGB.rst", "api/mergernet.data.image.LuptonRGB.rst", "api/mergernet.data.image.TensorToImage.rst", "api/mergernet.data.image.TensorToShards.rst", "api/mergernet.data.image.asinh_map.rst", "api/mergernet.data.image.asinh_map2.rst", "api/mergernet.data.kfold.rst", "api/mergernet.data.kfold.DistributionKFold.rst", "api/mergernet.data.kfold.StratifiedDistributionKFold.rst", "api/mergernet.data.match.rst", "api/mergernet.data.match.CrossMatch.rst", "api/mergernet.data.match.CrossMatchResult.rst", "api/mergernet.data.match.XTable.rst", "api/mergernet.data.preprocessing.rst", "api/mergernet.data.preprocessing.load_jpg.rst", "api/mergernet.data.preprocessing.load_png.rst", "api/mergernet.data.preprocessing.normalize_rgb.rst", "api/mergernet.data.preprocessing.one_hot_factory.rst", "api/mergernet.data.preprocessing.standardize_rgb.rst", "api/mergernet.data.rgb.rst", "api/mergernet.data.rgb.RGB.rst", "api/mergernet.data.sanitization.rst", "api/mergernet.data.sanitization.DatasetSanitization.rst", "api/mergernet.data.trilogy.rst", "api/mergernet.data.trilogy.MakeImg.rst", "api/mergernet.data.trilogy.RGB2im.rst", "api/mergernet.data.trilogy.adjust_saturation.rst", "api/mergernet.data.trilogy.da.rst", "api/mergernet.data.trilogy.get_clip.rst", "api/mergernet.data.trilogy.get_levels.rst", "api/mergernet.data.trilogy.imscale.rst", "api/mergernet.data.trilogy.meanstd.rst", "api/mergernet.data.trilogy.rms.rst", "api/mergernet.data.trilogy.satK2m.rst", "api/mergernet.data.trilogy.setLevel.rst", "api/mergernet.estimators.rst", "api/mergernet.estimators.automl.rst", "api/mergernet.estimators.automl.OptunaEstimator.rst", "api/mergernet.estimators.base.rst", "api/mergernet.estimators.base.Estimator.rst", "api/mergernet.estimators.base.EstimatorConfig.rst", "api/mergernet.estimators.base.EstimatorRegistry.rst", "api/mergernet.estimators.decals.rst", "api/mergernet.estimators.decals.ZoobotEstimator.rst", "api/mergernet.estimators.parametric.rst", "api/mergernet.estimators.parametric.ParametricEstimator.rst", "api/mergernet.jobs.rst", "api/mergernet.jobs.j001.rst", "api/mergernet.jobs.j001.Job.rst", "api/mergernet.jobs.j002.rst", "api/mergernet.jobs.j002.Job.rst", "api/mergernet.jobs.j009.rst", "api/mergernet.jobs.j009.Job.rst", "api/mergernet.jobs.j010.rst", "api/mergernet.jobs.j010.Job.rst", "api/mergernet.jobs.j023.rst", "api/mergernet.jobs.j023.Job.rst", "api/mergernet.jobs.j026.rst", "api/mergernet.jobs.j026.Job.rst", "api/mergernet.jobs.j027.rst", "api/mergernet.jobs.j027.Job.rst", "api/mergernet.model.rst", "api/mergernet.model.automl.rst", "api/mergernet.model.automl.optuna_train.rst", "api/mergernet.model.baseline.rst", "api/mergernet.model.baseline.finetune_train.rst", "api/mergernet.model.callbacks.rst", "api/mergernet.model.callbacks.DeltaStopping.rst", "api/mergernet.model.callbacks.MWandbCallback.rst", "api/mergernet.model.callbacks.MyWandbCallback.rst", "api/mergernet.model.callbacks.PruneCallback.rst", "api/mergernet.model.callbacks.SaveBestTrialCallback.rst", "api/mergernet.model.callbacks.TFKerasPruningCallback.rst", "api/mergernet.model.callbacks.WandbGraphicsCallback.rst", "api/mergernet.model.inference.rst", "api/mergernet.model.inference.Predictor.rst", "api/mergernet.model.utils.rst", "api/mergernet.model.utils.get_conv_arch.rst", "api/mergernet.model.utils.history_to_dataframe.rst", "api/mergernet.model.utils.load_model.rst", "api/mergernet.model.utils.set_trainable_state.rst", "api/mergernet.model.utils.setup_seeds.rst", "api/mergernet.services.rst", "api/mergernet.services.github.rst", "api/mergernet.services.github.GithubService.rst", "api/mergernet.services.google.rst", "api/mergernet.services.google.GDrive.rst", "api/mergernet.services.imaging.rst", "api/mergernet.services.imaging.ImagingService.rst", "api/mergernet.services.legacy.rst", "api/mergernet.services.legacy.LegacyService.rst", "api/mergernet.services.sciserver.rst", "api/mergernet.services.sciserver.SciServer.rst", "api/mergernet.services.sdss.rst", "api/mergernet.services.sdss.SloanService.rst", "api/mergernet.services.splus.rst", "api/mergernet.services.splus.ImageType.rst", "api/mergernet.services.splus.SplusService.rst", "api/mergernet.services.splus.update_authorization.rst", "api/mergernet.services.tap.rst", "api/mergernet.services.tap.TapService.rst", "api/mergernet.services.tensorboard.rst", "api/mergernet.services.tensorboard.TensorboardService.rst", "api/mergernet.services.utils.rst", "api/mergernet.services.utils.append_query_params.rst", "api/mergernet.services.utils.batch_download_file.rst", "api/mergernet.services.utils.download_file.rst", "api/mergernet.services.utils.parallel_function_executor.rst", "api/mergernet.visualization.rst", "api/mergernet.visualization.plot.rst", "api/mergernet.visualization.plot.Serie.rst", "api/mergernet.visualization.plot.color_color.rst", "api/mergernet.visualization.plot.conf_matrix.rst", "api/mergernet.visualization.plot.data_distribution.rst", "api/mergernet.visualization.plot.mag_class_distribution.rst", "api/mergernet.visualization.plot.object_position.rst", "api/mergernet.visualization.plot.roc.rst", "api/mergernet.visualization.plot.train_metrics.rst", "experiments.rst", "index.rst", "reference.rst"], "titles": ["mergernet.core", "mergernet.core.constants", "mergernet.core.experiment", "Experiment", "mergernet.core.experiment.backup_model", "mergernet.core.hp", "CategoricalHyperParameter", "ConstantHyperParameter", "FloatHyperParameter", "HP", "HyperParameter", "HyperParameterSet", "IntHyperParameter", "mergernet.core.logging", "mergernet.core.logging.configure_root_logger", "mergernet.core.utils", "CachedDataFrame", "SingletonMeta", "Timming", "mergernet.core.utils.array_fallback", "classproperty", "mergernet.core.utils.compress_files", "mergernet.core.utils.compress_fits", "mergernet.core.utils.deep_update", "mergernet.core.utils.execute_posix_command", "mergernet.core.utils.extract_files", "mergernet.core.utils.extract_iauname_from_path", "mergernet.core.utils.find_by_value", "mergernet.core.utils.heading", "mergernet.core.utils.iauname", "mergernet.core.utils.iauname_path", "mergernet.core.utils.install_linux_package", "mergernet.core.utils.load_image", "mergernet.core.utils.load_table", "mergernet.core.utils.not_in", "mergernet.core.utils.save_image", "mergernet.core.utils.save_table", "mergernet.core.utils.serialize", "mergernet.core.utils.unique_path", "mergernet.data", "mergernet.data.dataset", "Dataset", "TFRDataset", "mergernet.data.dataset_config", "DatasetConfig", "DatasetRegistry", "GoogleDriveResource", "HTTPResource", "mergernet.data.image", "ChannelAverage", "Crop", "ImagePipeline", "ImageTransform", "LegacyRGB", "LuptonRGB", "TensorToImage", "TensorToShards", "mergernet.data.image.asinh_map", "mergernet.data.image.asinh_map2", "mergernet.data.kfold", "DistributionKFold", "StratifiedDistributionKFold", "mergernet.data.match", "CrossMatch", "CrossMatchResult", "XTable", "mergernet.data.preprocessing", "mergernet.data.preprocessing.load_jpg", "mergernet.data.preprocessing.load_png", "mergernet.data.preprocessing.normalize_rgb", "mergernet.data.preprocessing.one_hot_factory", "mergernet.data.preprocessing.standardize_rgb", "mergernet.data.rgb", "RGB", "mergernet.data.sanitization", "DatasetSanitization", "mergernet.data.trilogy", "MakeImg", "mergernet.data.trilogy.RGB2im", "mergernet.data.trilogy.adjust_saturation", "mergernet.data.trilogy.da", "mergernet.data.trilogy.get_clip", "mergernet.data.trilogy.get_levels", "mergernet.data.trilogy.imscale", "mergernet.data.trilogy.meanstd", "mergernet.data.trilogy.rms", "mergernet.data.trilogy.satK2m", "mergernet.data.trilogy.setLevel", "mergernet.estimators", "mergernet.estimators.automl", "OptunaEstimator", "mergernet.estimators.base", "Estimator", "EstimatorConfig", "EstimatorRegistry", "mergernet.estimators.decals", "ZoobotEstimator", "mergernet.estimators.parametric", "ParametricEstimator", "mergernet.jobs", "mergernet.jobs.j001", "Job", "mergernet.jobs.j002", "Job", "mergernet.jobs.j009", "Job", "mergernet.jobs.j010", "Job", "mergernet.jobs.j023", "Job", "mergernet.jobs.j026", "Job", "mergernet.jobs.j027", "Job", "mergernet.model", "mergernet.model.automl", "mergernet.model.automl.optuna_train", "mergernet.model.baseline", "mergernet.model.baseline.finetune_train", "mergernet.model.callbacks", "DeltaStopping", "MWandbCallback", "MyWandbCallback", "PruneCallback", "SaveBestTrialCallback", "TFKerasPruningCallback", "WandbGraphicsCallback", "mergernet.model.inference", "Predictor", "mergernet.model.utils", "mergernet.model.utils.get_conv_arch", "mergernet.model.utils.history_to_dataframe", "mergernet.model.utils.load_model", "mergernet.model.utils.set_trainable_state", "mergernet.model.utils.setup_seeds", "mergernet.services", "mergernet.services.github", "GithubService", "mergernet.services.google", "GDrive", "mergernet.services.imaging", "ImagingService", "mergernet.services.legacy", "LegacyService", "mergernet.services.sciserver", "SciServer", "mergernet.services.sdss", "SloanService", "mergernet.services.splus", "ImageType", "SplusService", "mergernet.services.splus.update_authorization", "mergernet.services.tap", "TapService", "mergernet.services.tensorboard", "TensorboardService", "mergernet.services.utils", "mergernet.services.utils.append_query_params", "mergernet.services.utils.batch_download_file", "mergernet.services.utils.download_file", "mergernet.services.utils.parallel_function_executor", "mergernet.visualization", "mergernet.visualization.plot", "Serie", "mergernet.visualization.plot.color_color", "mergernet.visualization.plot.conf_matrix", "mergernet.visualization.plot.data_distribution", "mergernet.visualization.plot.mag_class_distribution", "mergernet.visualization.plot.object_position", "mergernet.visualization.plot.roc", "mergernet.visualization.plot.train_metrics", "Experiments", "Welcome to mergernet\u2019s documentation!", "API Reference"], "terms": {"modul": [0, 39, 40, 74, 88, 99, 114, 135, 148, 161, 172], "function": [2, 13, 15, 30, 40, 48, 66, 75, 76, 90, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 129, 148, 150, 151, 156, 162], "class": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 72, 73, 74, 75, 76, 77, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 162, 163, 169], "mergernet": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 73, 75, 77, 90, 92, 93, 94, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 128, 137, 139, 141, 143, 145, 147, 149, 150, 153, 155, 163, 171], "core": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 75, 101, 103, 105, 107, 109, 111, 113, 172], "sourc": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 96, 98, 101, 103, 105, 107, 109, 111, 113, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 137, 139, 141, 143, 145, 147, 149, 150, 151, 153, 155, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170], "base": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 73, 75, 77, 90, 92, 93, 94, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 128, 137, 139, 141, 143, 145, 147, 149, 150, 153, 155, 163], "object": [3, 9, 10, 11, 16, 17, 18, 29, 30, 37, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 73, 75, 77, 90, 92, 93, 94, 96, 98, 101, 103, 105, 107, 109, 111, 113, 125, 128, 137, 139, 141, 143, 145, 147, 150, 153, 155, 163], "thi": [3, 11, 30, 40, 41, 75, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 148, 150, 151], "store": [3, 75, 101, 103, 105, 107, 109, 111, 113, 122, 143], "all": [3, 11, 30, 34, 40, 41, 45, 54, 75, 76, 101, 103, 105, 107, 109, 111, 113, 122, 150, 169], "relev": [3, 11, 101, 103, 105, 107, 109, 111, 113], "inform": 3, "an": [3, 37, 54, 75, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "which": [3, 40, 41, 54, 75, 122, 125], "can": [3, 40, 101, 103, 105, 107, 109, 111, 113, 122, 150, 151, 169], "access": [3, 11, 16, 17, 171], "from": [3, 32, 41, 54, 56, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 122], "anywher": 3, "applic": 3, "": [3, 11, 17, 29, 45, 54, 120, 121, 122, 123, 124, 125, 126, 149, 150, 151], "implement": [3, 17, 54], "singleton": [3, 17], "pattern": 3, "The": [3, 4, 11, 16, 27, 28, 29, 30, 34, 37, 40, 41, 75, 90, 101, 103, 105, 107, 109, 111, 113, 122, 143, 150, 151, 169], "ar": [3, 34, 41, 75, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 143, 150], "track": 3, "us": [3, 11, 17, 30, 40, 41, 54, 57, 58, 75, 101, 103, 105, 107, 109, 111, 113, 121, 122, 148, 150], "two": [3, 41, 75, 122], "valu": [3, 6, 7, 8, 9, 10, 11, 12, 27, 41, 42, 54, 56, 75, 120, 121, 122, 123, 124, 125, 126, 150, 169], "exp_id": [3, 101, 103, 105, 107, 109, 111, 113, 132], "run_id": [3, 132], "first": [3, 17, 41, 90, 92, 96, 98], "i": [3, 30, 40, 41, 57, 58, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 143, 150, 169], "human": [3, 54], "readabl": 3, "integ": [3, 120, 121, 122, 123, 124, 125, 126], "set": [3, 11, 54, 75, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "user": [3, 101, 103, 105, 107, 109, 111, 113], "relat": 3, "task": [3, 40, 75, 101, 103, 105, 107, 109, 111, 113], "specifi": [3, 11, 41, 75, 101, 103, 105, 107, 109, 111, 113], "entrypoint": 3, "file": [3, 22, 30, 32, 41, 75, 101, 103, 105, 107, 109, 111, 113, 143, 147, 150], "And": 3, "second": 3, "auto": [3, 122], "gener": [3, 40, 41, 60, 101, 103, 105, 107, 109, 111, 113, 122, 150], "hex": 3, "token": [3, 150, 151], "differ": [3, 11], "re": 3, "run": [3, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 118, 120, 121, 122, 123, 124, 125, 126, 147], "same": [3, 28, 30, 75, 101, 103, 105, 107, 109, 111, 113, 122, 143, 150], "attribut": [3, 20, 41, 45, 46, 64, 90, 92, 94, 96, 98, 101, 103, 105, 107, 109, 111, 113, 122, 139, 149], "tracker": [3, 101, 103, 105, 107, 109, 111, 113], "context": [3, 101, 103, 105, 107, 109, 111, 113], "manag": [3, 101, 103, 105, 107, 109, 111, 113], "creat": [3, 11, 30, 41, 42, 54, 75, 100, 101, 103, 105, 107, 109, 111, 113, 122], "wandb": [3, 101, 103, 105, 107, 109, 111, 113, 122], "project": [3, 101, 103, 105, 107, 109, 111, 113], "paramet": [3, 4, 11, 16, 27, 28, 29, 30, 32, 34, 37, 41, 54, 57, 58, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 143, 150, 151, 169], "config": [3, 41, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113], "dict": [3, 6, 7, 8, 10, 11, 12, 27, 41, 61, 73, 96, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 128, 131, 137, 147, 150, 157, 160, 167], "configur": [3, 14, 41, 44, 45, 101, 103, 105, 107, 109, 111, 113], "job_typ": [3, 101, 103, 105, 107, 109, 111, 113], "str": [3, 9, 11, 16, 18, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 54, 73, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 116, 118, 122, 123, 124, 125, 128, 130, 132, 133, 137, 139, 141, 143, 147, 150, 153, 155, 157, 158, 159, 160, 165, 167, 168], "job": [3, 172], "type": [3, 11, 16, 17, 27, 29, 30, 32, 34, 37, 41, 54, 57, 58, 73, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 122, 149, 150, 151], "name": [3, 9, 11, 29, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 122, 128, 132, 155], "tag": [3, 101, 103, 105, 107, 109, 111, 113], "list": [3, 11, 21, 29, 30, 34, 41, 49, 50, 51, 52, 53, 54, 55, 56, 61, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 118, 122, 128, 141, 143, 147, 150, 153, 158, 169], "init_wandb": [3, 101, 103, 105, 107, 109, 111, 113], "_post_run": [3, 101, 103, 105, 107, 109, 111, 113], "post": [3, 101, 103, 105, 107, 109, 111, 113], "automat": [3, 101, 103, 105, 107, 109, 111, 113, 122], "perform": [3, 37, 40, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 148, 150], "when": [3, 11, 101, 103, 105, 107, 109, 111, 113, 122], "call": [3, 75, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 151], "includ": [3, 41, 75, 101, 103, 105, 107, 109, 111, 113, 169], "upload": [3, 101, 103, 105, 107, 109, 111, 113, 128], "regist": [3, 11, 101, 103, 105, 107, 109, 111, 113], "artifact": [3, 101, 103, 105, 107, 109, 111, 113], "upload_registered_artifact": [3, 101, 103, 105, 107, 109, 111, 113], "_pre_run": [3, 101, 103, 105, 107, 109, 111, 113], "pre": [3, 101, 103, 105, 107, 109, 111, 113], "clear": [3, 11, 41, 101, 103, 105, 107, 109, 111, 113], "log": [3, 9, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "setup": [3, 101, 103, 105, 107, 109, 111, 113], "global": [3, 101, 103, 105, 107, 109, 111, 113], "_setup_experiment_attribut": [3, 101, 103, 105, 107, 109, 111, 113], "identifi": [3, 11, 101, 103, 105, 107, 109, 111, 113], "system": [3, 101, 103, 105, 107, 109, 111, 113], "need": [3, 32, 101, 103, 105, 107, 109, 111, 113, 122, 151], "e": [3, 41, 101, 103, 105, 107, 109, 111, 113, 125, 150], "g": [3, 41, 101, 103, 105, 107, 109, 111, 113, 125, 150], "dataset": [3, 4, 30, 42, 44, 45, 46, 74, 75, 101, 103, 105, 107, 109, 111, 113, 116, 118], "model": [3, 4, 40, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 128, 169, 172], "predict": [3, 4, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 128, 169], "classmethod": [3, 16, 101, 103, 105, 107, 109, 111, 113], "autoclean": [3, 101, 103, 105, 107, 109, 111, 113], "delet": [3, 20, 101, 103, 105, 107, 109, 111, 113], "path": [3, 16, 21, 22, 25, 26, 30, 32, 33, 35, 36, 38, 41, 49, 50, 51, 52, 53, 54, 55, 56, 73, 75, 77, 96, 101, 103, 105, 107, 109, 111, 113, 137, 139, 141, 143, 147, 150, 153, 155, 158, 159, 167], "download_file_gd": [3, 101, 103, 105, 107, 109, 111, 113], "fname": [3, 101, 103, 105, 107, 109, 111, 113], "int": [3, 9, 12, 21, 22, 41, 61, 63, 73, 75, 96, 101, 103, 105, 107, 109, 111, 113, 116, 121, 122, 123, 125, 132, 137, 141, 143, 147, 150, 153, 158, 160, 167, 169], "none": [3, 6, 7, 8, 9, 10, 11, 12, 19, 22, 30, 41, 49, 50, 51, 52, 53, 54, 55, 56, 64, 67, 68, 69, 71, 75, 81, 96, 101, 103, 105, 107, 109, 111, 113, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 137, 139, 141, 143, 147, 150, 158, 159, 164, 165, 166, 167, 168, 169, 170], "share": [3, 101, 103, 105, 107, 109, 111, 113], "bool": [3, 4, 6, 7, 8, 9, 10, 12, 22, 30, 33, 36, 41, 49, 50, 51, 52, 53, 54, 55, 56, 75, 77, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 122, 133, 137, 139, 147, 150, 153, 158, 159, 165], "fals": [3, 6, 7, 8, 9, 10, 12, 30, 33, 41, 49, 50, 51, 52, 53, 54, 55, 56, 75, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 122, 137, 147, 150, 153, 158, 159, 163, 164, 165], "download": [3, 41, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 137, 143, 148, 150], "googl": [3, 4, 101, 103, 105, 107, 109, 111, 113, 139], "drive": [3, 4, 46, 101, 103, 105, 107, 109, 111, 113], "insid": [3, 30, 101, 103, 105, 107, 109, 111, 113], "gd_artifact_path": [3, 101, 103, 105, 107, 109, 111, 113], "option": [3, 30, 41, 54, 57, 58, 101, 103, 105, 107, 109, 111, 113, 122, 143, 150], "default": [3, 11, 33, 36, 41, 45, 101, 103, 105, 107, 109, 111, 113, 122, 150], "current": [3, 90, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "id": [3, 101, 103, 105, 107, 109, 111, 113], "onli": [3, 30, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 150], "folder": [3, 30, 41, 75, 101, 103, 105, 107, 109, 111, 113], "finish_wandb": [3, 101, 103, 105, 107, 109, 111, 113], "close": [3, 101, 103, 105, 107, 109, 111, 113], "connect": [3, 101, 103, 105, 107, 109, 111, 113], "register_artifact": [3, 101, 103, 105, 107, 109, 111, 113], "servic": [3, 101, 103, 105, 107, 109, 111, 113, 137, 139, 141, 143, 145, 147, 149, 150, 153, 155, 172], "correspond": [3, 27, 75, 101, 103, 105, 107, 109, 111, 113, 125], "end": [3, 18, 30, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "filenam": [3, 41, 90, 92, 96, 98, 101, 103, 105, 107, 109, 111, 113, 164, 166, 169, 170], "one": [3, 41, 101, 103, 105, 107, 109, 111, 113, 122], "gdrive": [3, 101, 103, 105, 107, 109, 111, 113], "github": [3, 4, 76, 101, 103, 105, 107, 109, 111, 113, 137], "both": [3, 101, 103, 105, 107, 109, 111, 113, 122], "defin": [3, 40, 101, 103, 105, 107, 109, 111, 113, 122, 143], "abstract": [3, 40, 41, 52, 92, 101, 103, 105, 107, 109, 111, 113, 141], "method": [3, 11, 17, 75, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 148, 150], "execut": [3, 101, 103, 105, 107, 109, 111, 113, 150], "upload_file_gd": [3, 101, 103, 105, 107, 109, 111, 113], "data": [3, 35, 36, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 73, 75, 77, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 137, 172], "ani": [3, 4, 6, 7, 9, 11, 27, 37, 75, 96, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 150, 160], "content": [3, 101, 103, 105, 107, 109, 111, 113, 137], "If": [3, 54, 75, 101, 103, 105, 107, 109, 111, 113, 122, 150, 169], "consid": [3, 101, 103, 105, 107, 109, 111, 113], "local_artifact_path": [3, 101, 103, 105, 107, 109, 111, 113], "json": [3, 101, 103, 105, 107, 109, 111, 113], "serializ": [3, 101, 103, 105, 107, 109, 111, 113], "python": [3, 101, 103, 105, 107, 109, 111, 113, 122], "byte": [3, 56, 101, 103, 105, 107, 109, 111, 113, 159], "_downloaded_artifact": [3, 101, 103, 105, 107, 109, 111, 113], "download_": [3, 101, 103, 105, 107, 109, 111, 113], "_exp_creat": [3, 101, 103, 105, 107, 109, 111, 113], "flag": [3, 101, 103, 105, 107, 109, 111, 113], "wa": [3, 101, 103, 105, 107, 109, 111, 113, 150], "start": [3, 18, 90, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "_registered_artifact": [3, 101, 103, 105, 107, 109, 111, 113], "exp_nam": [3, 101, 103, 105, 107, 109, 111, 113], "exp_": [3, 101, 103, 105, 107, 109, 111, 113], "gd_exp_path": [3, 101, 103, 105, 107, 109, 111, 113], "where": [3, 57, 58, 75, 101, 103, 105, 107, 109, 111, 113, 122, 143, 150, 169], "gd_shared_path": [3, 101, 103, 105, 107, 109, 111, 113], "extern": [3, 101, 103, 105, 107, 109, 111, 113], "local_exp_path": [3, 101, 103, 105, 107, 109, 111, 113], "local": [3, 32, 41, 101, 103, 105, 107, 109, 111, 113, 139], "environ": [3, 101, 103, 105, 107, 109, 111, 113, 150], "output": [3, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126, 150], "local_shared_path": [3, 41, 101, 103, 105, 107, 109, 111, 113], "experiemnt": [3, 101, 103, 105, 107, 109, 111, 113], "note": [3, 101, 103, 105, 107, 109, 111, 113, 120, 121, 122, 123, 124, 125, 126], "save_histori": 4, "true": [4, 22, 36, 41, 54, 75, 77, 90, 92, 96, 98, 122, 150, 169], "save_test_pr": 4, "save_dataset_config": 4, "save_model": [4, 122], "tf": [4, 41, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126], "kera": [4, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126], "backup": 4, "instanc": [4, 11, 90, 92, 96, 98], "train": [4, 11, 41, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126], "histori": [4, 90, 92, 98, 122, 131], "must": [4, 30, 75, 143, 150], "save": [4, 75, 122, 143, 150, 167, 168], "test": [4, 41, 100, 101, 120, 121, 122, 123, 124, 125, 126], "dataset_config": [4, 41, 44, 45, 46, 47], "tensorflow": [4, 125], "hp": [6, 7, 8, 10, 11, 12, 116, 118], "hyperparamet": [6, 7, 8, 11, 12], "clear_last_valu": [6, 7, 8, 10, 12], "static": [6, 7, 8, 9, 10, 12, 41, 61, 139, 145], "from_dict": [6, 7, 8, 10, 12], "param": [6, 7, 8, 10, 12, 44, 120, 121, 122, 123, 124, 125, 126, 150, 160, 169], "set_attr": [6, 7, 8, 10, 12], "kei": [6, 7, 8, 10, 11, 12, 27, 41, 120, 121, 122, 123, 124, 125, 126], "set_trial": [6, 7, 8, 10, 11, 12], "trial": [6, 7, 8, 10, 11, 12, 90, 125], "frozentri": [6, 7, 8, 10, 11, 12], "suggest": [6, 7, 8, 10, 11, 12], "to_dict": [6, 7, 8, 10, 12], "show_nam": [6, 7, 8, 10, 12], "float": [8, 9, 29, 30, 54, 57, 58, 61, 63, 73, 75, 77, 90, 92, 96, 98, 121, 122, 141, 143, 147, 150, 167], "cat": 9, "choic": [9, 54], "sequenc": [9, 11, 147, 160, 165], "categoricalhyperparamet": 9, "const": 9, "constanthyperparamet": [9, 11], "num": 9, "low": [9, 54], "high": [9, 40, 41], "step": [9, 90, 92, 96, 98, 122], "dtype": 9, "floathyperparamet": 9, "inthyperparamet": 9, "repres": [11, 54, 122, 149], "handl": 11, "arg": [11, 23, 90], "factori": 11, "add": [11, 125], "pars": 11, "dictionari": [11, 27], "arrai": [11, 19, 29, 32, 42, 54, 56, 75, 122], "like": [11, 75], "arrar": 11, "ad": [11, 75], "clear_values_dict": 11, "last_valu": 11, "properti": [11, 20, 90, 92, 96, 98], "condit": 11, "get": [11, 41, 139, 150], "its": [11, 75], "For": [11, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126], "than": [11, 75], "optuna": [11, 90, 125], "seggest": 11, "api": [11, 172], "hyperparam": 11, "optuan": 11, "return": [11, 16, 17, 27, 29, 30, 32, 34, 37, 41, 54, 56, 57, 58, 75, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126, 150, 151], "wasn": 11, "t": [11, 122], "found": [11, 41], "to_values_dict": 11, "represent": [11, 40, 41], "last": [11, 120, 121, 122, 123, 124, 125, 126], "root": 14, "logger": 14, "util": [16, 17, 18, 20, 75], "hold": 16, "cach": 16, "version": 16, "panda": 16, "datafram": [16, 33, 36, 41, 64, 75, 131, 147, 167], "memori": 16, "later": [16, 122], "load": [16, 32, 40], "pd": 16, "_cach": 16, "thread": [17, 150], "safe": 17, "__new__": [17, 20], "kwarg": [17, 20, 75, 90, 141, 143, 147, 150], "mro": 17, "resolut": 17, "order": [17, 54, 75, 122], "_instanc": 17, "_lock": [17, 150], "allocate_lock": 17, "unlock": 17, "_thread": 17, "lock": [17, 150], "synchron": 17, "dure": [17, 54, 120, 121, 122, 123, 124, 125, 126], "_format_tim": 18, "dt": 18, "timedelta": 18, "durat": 18, "prefix": [19, 30, 120, 121, 122, 123, 124, 125, 126], "descriptor": 20, "chang": [20, 75, 120, 121, 122, 123, 124, 125, 126], "getter": 20, "setter": 20, "fdel": 20, "fget": 20, "fset": 20, "input_path": 21, "output_path": 21, "level": [21, 40, 41, 83], "2": [21, 54, 75, 77, 120, 121, 122, 123, 124, 125, 126, 150, 158, 160], "binaryio": 22, "compress_typ": 22, "hcompress_1": 22, "hcomp_scal": 22, "3": [22, 41, 54, 75, 84, 150, 153], "quantize_level": 22, "10": [22, 45, 75], "quantize_method": 22, "1": [22, 54, 57, 58, 63, 75, 90, 92, 96, 98, 122, 150, 167, 168], "ext": 22, "0": [22, 45, 54, 57, 75, 77, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126, 141, 143, 147, 150, 168, 169], "save_path": [22, 49, 50, 51, 52, 53, 54, 55, 56, 73, 141, 143, 147, 150, 153, 158, 159], "replac": [22, 41, 90, 92, 96, 98, 147, 150, 158, 159], "origin": [23, 76], "new": [23, 75, 90, 92, 96, 98], "command": 24, "archiv": [25, 41], "dest": 25, "d": [27, 41], "search": [27, 172], "msg": 28, "sep": 28, "print": [28, 75], "messag": 28, "rule": [28, 40], "bellow": 28, "width": [28, 141, 143, 147], "string": [28, 30, 56, 75, 122, 150], "charact": [28, 54], "ra": [29, 30, 73, 141, 143, 147, 150, 168], "ndarrai": [29, 32, 35, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 75, 77, 96, 122, 147], "dec": [29, 30, 73, 141, 143, 147, 150, 168], "receiv": [29, 122, 150], "angular": 29, "posit": 29, "iau2000": [29, 75], "right": [29, 143, 150], "ascens": [29, 143, 150], "declin": [29, 143, 150], "187": 29, "70592": 29, "12": [29, 167, 168], "39112": 29, "j123049": [29, 30], "42": [29, 30, 150], "122328": [29, 30], "03": [29, 30], "format": [29, 122], "iau": 29, "iaunam": [30, 41, 75], "suffix": [30, 75], "flat": 30, "return_str": 30, "calcul": [30, 121, 122], "nest": 30, "given": 30, "pass": [30, 75, 120, 121, 122, 123, 124, 125, 126, 150], "comput": [30, 34, 75, 122, 169], "prepend": [30, 122], "begin": [30, 120, 121, 122, 123, 124, 125, 126], "append": [30, 143], "parent": 30, "recomend": 30, "big": 30, "cast": [30, 37], "befor": [30, 54, 150, 151], "iaunames_path": 30, "png": [30, 32, 90, 92, 96, 98, 150], "j123": 30, "packag": 31, "imag": [32, 41, 45, 49, 50, 51, 52, 53, 54, 55, 56, 75, 77, 122, 141, 148, 149, 150], "storag": 32, "numpi": [32, 41, 54, 57, 58], "support": 32, "sever": 32, "inclu": 32, "jpg": [32, 147], "npy": 32, "npz": 32, "fit": [32, 120, 121, 122, 123, 124, 125, 126, 148, 149, 150], "pathlib": [32, 143], "desir": [32, 143], "convert": [32, 122], "ref": 34, "comp": 34, "element": [34, 75], "refer": [34, 172], "comparison": 34, "A": [34, 41, 45, 75, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126, 150], "contain": [34, 41, 75, 122], "obj": 37, "depend": 37, "previous": 40, "tfrecord": 40, "main": 40, "develop": 40, "process": [40, 150], "deep": 40, "learn": [40, 90, 92, 96, 98], "other": [40, 41, 122], "well": 40, "who": 40, "complementari": 40, "io": 41, "oper": 41, "prepar": 41, "split": [41, 60], "datasetconfig": [41, 45], "databas": [41, 148, 150], "registri": [41, 45, 90, 92, 96, 98], "_create_dataset_t": 41, "scan": 41, "tabl": [41, 63, 64, 75, 122], "csv": [41, 150], "ha": [41, 122], "_discretize_label": 41, "y": [41, 57, 58, 61, 67, 68, 69, 71, 122], "find": 41, "ocurr": 41, "match": [41, 63, 64, 65], "label_map": [41, 128, 167], "respect": 41, "np": 41, "_transform_imag": 41, "remov": [41, 75], "hard": 41, "disk": 41, "extract": [41, 159], "compute_class_weight": 41, "concat_fold_column": 41, "df": [41, 167], "fname_column": 41, "class_column": 41, "r_column": 41, "n_split": [41, 61], "5": [41, 45, 84, 96, 168], "bin": [41, 75], "check": [41, 75, 150], "destin": 41, "exist": [41, 139, 150], "miss": [41, 122], "web": 41, "resourc": 41, "get_x": 41, "get_x_by_fold": 41, "fold": 41, "kind": 41, "x": [41, 57, 58, 61, 67, 68, 69, 71, 85, 122], "number": [41, 75, 122, 150, 169], "get_fold": 41, "tupl": [41, 63, 75, 90, 92, 96, 98, 122, 130, 143, 147, 167], "datasetv2": 41, "select": 41, "secound": 41, "get_images_path": 41, "get_preds_dataset": 41, "get_tabl": 41, "is_dataset_download": 41, "experi": [41, 100, 101, 103, 105, 107, 109, 111, 113, 172], "dir": 41, "otherwis": [41, 150], "prepare_data": 41, "batch_siz": 41, "64": 41, "buffer_s": 41, "1000": 41, "datasetregistri": 41, "_bytes_featur": [42, 56], "_create_shard": [42, 56], "_serialize_arrai": [42, 56], "bin_legacy_north_rgb_128": 45, "binari": [45, 122], "merger": 45, "non": [45, 57, 58], "legaci": [45, 143], "128x128": 45, "rgb": [45, 54, 78, 79, 122, 143, 148, 150], "north": 45, "sky": [45, 54], "pixscal": 45, "55": [45, 141, 143, 147], "arcsec": 45, "pixel": [45, 54, 57, 58, 150], "bin_sdss_128": 45, "sdss": [45, 73, 147], "blind_splus_gal80_ls10_rgb_128": 45, "plu": [45, 149, 150, 151], "blind": 45, "sampl": [45, 75, 168], "13": 45, "r_auto": 45, "17": 45, "l": 45, "earli": 45, "grz": 45, "blind_splus_lupton_128": 45, "lupton": [45, 54, 148, 149, 150], "blind_splus_lupton_150": 45, "150x150": 45, "blind_splus_trilogy_128": 45, "trilogi": [45, 77, 148, 149, 150], "blind_splus_trilogy_150": 45, "darg_no_inspect": 45, "decals_0364_1m_part0": 45, "decals_0364_1m_part1": 45, "decals_0364_1m_part10": 45, "decals_0364_1m_part11": 45, "decals_0364_1m_part12": 45, "decals_0364_1m_part2": 45, "decals_0364_1m_part3": 45, "decals_0364_1m_part4": 45, "decals_0364_1m_part5": 45, "decals_0364_1m_part6": 45, "decals_0364_1m_part7": 45, "decals_0364_1m_part8": 45, "decals_0364_1m_part9": 45, "ls10_train_224_png": 45, "conjunto": 45, "de": 45, "treino": 45, "para": 45, "classifica\u00e7\u00e3o": 45, "bin\u00e1ria": 45, "mesd_legacy_128": 45, "mesd": 45, "survei": [45, 143], "mesd_sdss_128": 45, "gd_datasets_path": 46, "mydriv": 46, "imagetransform": [49, 50, 51, 53, 54, 55, 56], "batch_transform": [49, 50, 51, 52, 53, 54, 55, 56], "silent": [49, 50, 51, 52, 53, 54, 55, 56], "on_batch_end": [49, 50, 51, 52, 53, 54, 55, 56, 120, 121, 122, 123, 124, 125, 126], "transform": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "_abc_impl": [49, 50, 51, 52, 53, 54, 55, 56, 90, 92, 96, 98, 141, 143], "_abc_data": [49, 50, 51, 52, 53, 54, 55, 56, 90, 92, 96, 98, 141, 143], "abc": [52, 92, 141], "img": [53, 54, 122], "interpret": 54, "multi": [54, 150], "band": [54, 147, 148, 150], "follow": [54, 57, 58, 75], "comment": 54, "2004": 54, "preserv": 54, "colour": 54, "rescal": [54, 57, 58], "linearli": 54, "scale": [54, 141, 143, 147], "each": [54, 90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126, 169], "have": [54, 57, 58, 143, 150], "good": 54, "spread": 54, "subject": 54, "nonlinear": 54, "total": 54, "intens": 54, "arcsinh": [54, 57, 58], "lie": 54, "between": 54, "mn": 54, "mx": 54, "4": [54, 73, 147, 150], "clip": 54, "desatur": 54, "signal": 54, "nois": [54, 150], "avoid": 54, "speckl": 54, "partial": 54, "shape": [54, 169], "h": 54, "w": 54, "c": 54, "dim": 54, "soften": 54, "factor": 54, "min": [54, 122], "max": [54, 122], "reduc": 54, "satur": [54, 150], "n": [54, 84, 120, 121, 122, 123, 124, 125, 126, 169], "desaturate_factor": 54, "control": 54, "proport": 54, "arai": 54, "bytes_list": 56, "gain": [57, 58], "appli": [57, 58, 122], "linear": [57, 58], "map": [57, 58, 150], "input": [57, 58, 75, 122], "matrix": [57, 58], "telescop": [57, 58], "view": [57, 58], "textrm": [57, 58], "alpha": [57, 58, 90, 92, 96, 98, 168], "frac": 58, "sqrt": 58, "kfold": [60, 61], "distribut": [60, 61, 75], "compute_max_bin": 61, "n_class": [61, 70, 169], "split_al": 61, "split_id": 61, "table1": 63, "xtabl": 63, "table2": 63, "radiu": [63, 147], "pair_match": 63, "nthneighbor": 63, "uniqu": 63, "distanc": 64, "primary_idx": 64, "secondary_idx": 64, "get_coord": 65, "to_df": 65, "make_trilogy_fit": 73, "source_dict": 73, "r_path": 73, "g_path": 73, "b_path": 73, "trilogy_fits_to_png": 73, "r_fit": 73, "g_fit": 73, "b_fit": 73, "sky_siz": 73, "70": 73, "fig_siz": 73, "128": [73, 150], "sanit": 75, "tool": 75, "visual": [75, 122, 163, 172], "size": [75, 150, 168], "stamp": [75, 143], "drop": 75, "corrupt": 75, "after": 75, "inspect": 75, "row": [75, 122], "without": 75, "images_fold": 75, "check_imag": 75, "imeg": 75, "drop_images_by_files": 75, "threshold": 75, "lower": 75, "cutoff": 75, "drop_images_by_iaunam": 75, "filesize_histogram": 75, "plot": [75, 90, 92, 96, 98, 163], "histogram": [75, 122], "argument": [75, 120, 121, 122, 123, 124, 125, 126, 150], "directli": 75, "plt": 75, "hist": 75, "get_filesize_distribut": 75, "files": 75, "get_iauname_by_files": 75, "upper": 75, "filter": 75, "iaunaem": 75, "temp": 75, "dry_run": 75, "follw": 75, "kb": 75, "_sanit": 75, "dry": 75, "mode": [75, 120, 121, 122, 123, 124, 125, 126], "made": 75, "just": 75, "would": 75, "instead": [75, 122, 150], "kilobyt": 75, "program": 76, "credit": 76, "author": [76, 150, 151], "dan": 76, "coe": 76, "http": [76, 148, 150], "www": 76, "stsci": 76, "edu": 76, "dcoe": 76, "intro": 76, "html": 76, "modif": 76, "gustavo": 76, "b": [76, 150], "o": 76, "schwarz": 76, "com": 76, "schwarzam": 76, "color": [77, 148], "noiselum": 77, "15": [77, 90, 92, 96, 98, 150], "satperc": 77, "colorsatfac": 77, "inplac": 77, "get_arrai": 77, "savefig": 77, "k": [79, 80, 86], "m": 81, "m_min": 81, "m_max": 81, "stampsrgb": 82, "unsatperc": 82, "y1": 83, "datasort": 84, "n_sigma": 84, "pp": 87, "estim": [90, 93, 94, 96, 98, 172], "automl": 90, "_object": 90, "optim": [90, 92, 96, 98], "oputna": 90, "metric": [90, 92, 96, 98, 120, 121, 122, 123, 124, 125, 126], "_save_optuna_db": 90, "studi": 90, "build": [90, 92, 96, 98, 122], "compile_model": [90, 92, 96, 98], "tf_model": [90, 92, 96, 98], "label_smooth": [90, 92, 96, 98], "estimatorconfig": [90, 92, 94, 96, 98], "get_conv_arch": [90, 92, 96, 98], "pretrained_arch": [90, 92, 96, 98, 130], "callabl": [90, 92, 96, 98, 122, 130, 151, 160], "get_dataaug_block": [90, 92, 96, 98], "flip_horizont": [90, 92, 96, 98], "flip_vert": [90, 92, 96, 98], "rotat": [90, 92, 96, 98], "08": [90, 92, 96, 98], "zoom": [90, 92, 96, 98], "get_metr": [90, 92, 96, 98], "get_optim": [90, 92, 96, 98], "lr": [90, 92, 96, 98], "learningrateschedul": [90, 92, 96, 98], "get_schedul": [90, 92, 96, 98], "schedul": [90, 92, 96, 98], "cosine_restart": [90, 92, 96, 98], "rate": [90, 92, 96, 98], "multipli": [90, 92, 96, 98], "decai": [90, 92, 96, 98], "first_decay_step": [90, 92, 96, 98], "Then": [90, 92, 96, 98], "warm": [90, 92, 96, 98], "restart": [90, 92, 96, 98], "t_mul": [90, 92, 96, 98], "time": [90, 92, 96, 98], "more": [90, 92, 96, 98], "m_mul": [90, 92, 96, 98], "initi": [90, 92, 96, 98], "set_train": [90, 92, 96, 98], "layer": [90, 92, 96, 98, 122, 133], "trainabl": [90, 92, 96, 98, 133], "best": [90, 122, 166, 167, 170], "estimatorregistri": [90, 92, 96, 98], "freeze_conv": [92, 98], "run_nam": [92, 98, 118], "zoobot_greyscal": 94, "zoobot_rgb": 94, "decal": 96, "_prepare_dataset": 96, "include_top": 96, "cnn_represent": 96, "rebuild": 96, "include_col": 96, "pca": 96, "featur": 96, "n_compon": 96, "include_iaunam": 96, "n_sampl": 96, "parametr": 98, "callback": [98, 118, 120, 121, 122, 123, 124, 125, 126], "purpos": [100, 101], "j001": 101, "j002": 103, "j009": 105, "j010": 107, "j023": 109, "j026": 111, "j027": 113, "train_func": 116, "hyperparameterset": [116, 118], "n_trial": 116, "pruner": 116, "hyperband": 116, "objective_metr": 116, "val_loss": [116, 122, 125], "objective_direct": 116, "minim": [116, 122], "resume_hash": 116, "_implements_predict_batch_hook": [120, 121, 122, 123, 124, 125, 126], "determin": [120, 121, 122, 123, 124, 125, 126], "should": [120, 121, 122, 123, 124, 125, 126, 143], "batch": [120, 121, 122, 123, 124, 125, 126, 148, 150], "_implements_test_batch_hook": [120, 121, 122, 123, 124, 125, 126], "_implements_train_batch_hook": [120, 121, 122, 123, 124, 125, 126], "on_batch_begin": [120, 121, 122, 123, 124, 125, 126], "backward": [120, 121, 122, 123, 124, 125, 126], "compat": [120, 121, 122, 123, 124, 125, 126], "alia": [120, 121, 122, 123, 124, 125, 126], "on_train_batch_begin": [120, 121, 122, 123, 124, 125, 126], "on_train_batch_end": [120, 121, 122, 123, 124, 125, 126], "on_epoch_begin": [120, 121, 122, 123, 124, 125, 126], "epoch": [120, 121, 122, 123, 124, 125, 126], "subclass": [120, 121, 122, 123, 124, 125, 126], "overrid": [120, 121, 122, 123, 124, 125, 126], "action": [120, 121, 122, 123, 124, 125, 126], "index": [120, 121, 122, 123, 124, 125, 126, 172], "mai": [120, 121, 122, 123, 124, 125, 126], "futur": [120, 121, 122, 123, 124, 125, 126], "on_epoch_end": [120, 121, 122, 123, 124, 125, 126], "result": [120, 121, 122, 123, 124, 125, 126], "valid": [120, 121, 122, 123, 124, 125, 126], "val_": [120, 121, 122, 123, 124, 125, 126], "exampl": [120, 121, 123, 124, 125, 126, 169], "loss": [120, 121, 122, 123, 124, 125, 126], "accuraci": [120, 121, 122, 123, 124, 125, 126], "7": [120, 121, 122, 123, 124, 125, 126], "on_predict_batch_begin": [120, 121, 122, 123, 124, 125, 126], "steps_per_execut": [120, 121, 122, 123, 124, 125, 126], "compil": [120, 121, 122, 123, 124, 125, 126], "everi": [120, 121, 122, 123, 124, 125, 126, 143], "within": [120, 121, 122, 123, 124, 125, 126], "on_predict_batch_end": [120, 121, 122, 123, 124, 125, 126], "aggreg": [120, 121, 122, 123, 124, 125, 126], "up": [120, 121, 122, 123, 124, 125, 126], "until": [120, 121, 122, 123, 124, 125, 126], "on_predict_begin": [120, 121, 122, 123, 124, 125, 126], "on_predict_end": [120, 121, 122, 123, 124, 125, 126], "on_test_batch_begin": [120, 121, 122, 123, 124, 125, 126], "evalu": [120, 121, 122, 123, 124, 125, 126], "also": [120, 121, 122, 123, 124, 125, 126], "provid": [120, 121, 122, 123, 124, 125, 126], "on_test_batch_end": [120, 121, 122, 123, 124, 125, 126], "on_test_begin": [120, 121, 122, 123, 124, 125, 126], "on_test_end": [120, 121, 122, 123, 124, 125, 126], "on_train_begin": [120, 121, 122, 123, 124, 125, 126], "on_train_end": [120, 121, 122, 123, 124, 125, 126], "set_model": [120, 121, 122, 123, 124, 125, 126], "set_param": [120, 121, 122, 123, 124, 125, 126], "_keras_api_nam": [120, 121, 122, 123, 124, 125, 126], "_keras_api_names_v1": [120, 121, 122, 123, 124, 125, 126], "get_flop": [121, 122], "flop": [121, 122], "gflop": [121, 122], "infer": [121, 122, 128], "It": [121, 122], "v1": [121, 122, 125], "profil": [121, 122], "under": [121, 122], "hood": [121, 122], "wandbcallback": 122, "integr": 122, "collect": 122, "anyth": 122, "keras_model": 122, "summari": 122, "associ": 122, "monitor": [122, 125], "minimum": 122, "gradient": 122, "maxim": 122, "try": 122, "guess": 122, "beat": 122, "previou": 122, "don": 122, "save_graph": 122, "boolean": 122, "graph": 122, "save_weights_onli": 122, "weight": 122, "save_weight": 122, "filepath": 122, "els": 122, "full": [122, 150], "log_weight": 122, "log_gradi": 122, "training_data": 122, "mandatori": [122, 143], "validation_data": 122, "make": 122, "small": 122, "In": 122, "case": 122, "you": [122, 125, 150], "work": 122, "pleas": 122, "input_typ": 122, "output_typ": 122, "correctli": 122, "either": 122, "validate_data": 122, "specif": [122, 169], "validation_step": 122, "how": 122, "mani": 122, "label": [122, 165, 169], "your": 122, "numer": 122, "understand": 122, "multiclass": 122, "classifi": 122, "won": 122, "do": 122, "100": 122, "help": 122, "segmentation_mask": 122, "log_evalu": 122, "see": [122, 125], "validation_index": 122, "validation_row_processor": 122, "output_row_processor": 122, "addit": 122, "detail": 122, "class_color": 122, "segment": 122, "mask": 122, "rang": 122, "log_batch_frequ": 122, "log_best_prefix": 122, "extra": 122, "data_typ": 122, "_tablelinkmixin": 122, "tablelinkmixin": 122, "most": 122, "common": 122, "wai": 122, "obtain": 122, "get_index": 122, "commonli": 122, "ndx": 122, "singl": [122, 143, 148, 150], "slot": 122, "take": 122, "target": 122, "wish": 122, "lambda": 122, "processor": 122, "ignor": 122, "present": 122, "infer_missing_processor": 122, "we": 122, "attempt": 122, "classif": 122, "appropri": 122, "log_evaluation_frequ": 122, "frequenc": 122, "so": 122, "effect": 122, "compute_flop": 122, "sequenti": 122, "gigaflop": 122, "unit": [122, 160], "x_train": 122, "y_train": 122, "x_test": 122, "y_test": 122, "_attempt_evaluation_log": 122, "commit": [122, 137], "_build_grad_accumulator_model": 122, "_log_datafram": 122, "_log_gradi": 122, "_log_imag": 122, "num_imag": 122, "36": 122, "_log_weight": 122, "_logits_to_capt": 122, "logit": 122, "_masks_to_pixel": 122, "_save_model": 122, "_save_model_as_artifact": 122, "prune": 125, "unpromis": 125, "intend": 125, "v2": 125, "want": 125, "observ": 125, "val_acc": 125, "_encode_cont": 137, "from_byt": 137, "_get_url": [137, 150], "rout": [137, 150], "branch": 137, "remote_path": 137, "dest_path": 137, "get_lastest_job_run": 137, "jobid": 137, "list_dir": 137, "remot": 139, "get_url": [139, 145], "fileid": [139, 145], "is_mount": 139, "move": 139, "from_path": 139, "to_path": 139, "send": [139, 150], "send_dir": 139, "base_path": [139, 143], "_batch_download_rgb": [141, 143], "worker": [141, 143, 147, 150, 153, 158, 160], "_download_rgb": [141, 143], "256": [141, 143, 147, 150], "height": [141, 143, 147], "opt": [141, 143, 147], "batch_cutout": [141, 143], "cutout": [141, 143, 147], "imagingservic": 143, "coordin": 143, "length": 143, "beggin": 143, "batch_download_fit": 147, "rerun": 147, "camcol": 147, "field": 147, "batch_download_rgb": 147, "crossmatch": 147, "search_typ": 147, "photo": 147, "search_radiu": 147, "02": 147, "chunk_siz": 147, "500": 147, "download_fit": [147, 150], "download_rgb": 147, "get_image_filenam": 147, "dr8objid": 147, "dr7objid": 147, "extens": 147, "basepath": 147, "request": 148, "cloud": [148, 150], "server": [148, 150], "over": [148, 150], "donwload": [148, 150], "fast": 148, "multiprocess": 148, "async": 148, "queri": [148, 150, 153], "natanael": 148, "magalh\u00e3": 148, "cardoso": 148, "net": 148, "splu": [149, 150], "enum": 149, "interact": 150, "usernam": 150, "authent": [150, 151], "splus_us": 150, "variabl": 150, "password": 150, "splus_pass": 150, "_batch_download": 150, "download_funct": 150, "download_arg": 150, "theread": 150, "spawn": 150, "multipl": 150, "parallel": 150, "_download_imag": 150, "url": [150, 157, 158, 159], "_track_tap_job": 150, "batch_image_download": 150, "img_typ": 150, "imagetyp": 150, "posist": 150, "accept": 150, "custom": 150, "degre": 150, "download_lupton_rgb": 150, "download_trilogy_rgb": 150, "download_fits_rgb": 150, "These": 150, "mention": 150, "172": 150, "193": 150, "9": 150, "63": 150, "24": 150, "fig1": 150, "fig2": 150, "fig3": 150, "batch_queri": 150, "sql": 150, "scope": 150, "public": 150, "fmt": 150, "text": 150, "repalac": 150, "locat": 150, "ovewrit": 150, "sava_path": 150, "skip": 150, "privat": 150, "assign": 150, "collabor": 150, "mimi": 150, "r": [150, 167], "r_band": 150, "g_band": 150, "b_band": 150, "stretch": 150, "q": 150, "8": [150, 167], "channel": 150, "formula": 150, "f861": 150, "z": 150, "f515": 150, "f660": 150, "u": 150, "f378": 150, "f395": 150, "f410": 150, "f430": 150, "algorithm": 150, "update_token": 150, "updat": [150, 151], "owner": 150, "f": 151, "decor": 151, "place": 151, "tap": 153, "batch_sync_queri": 153, "join_output": 153, "sync_queri": 153, "tensorboard": 155, "upload_asset": 155, "logdir": 155, "descript": 155, "query_param": 157, "http_client": [158, 159], "session": [158, 159], "return_byt": 159, "func": 160, "get_seri": 163, "median": 163, "get_std": 163, "has_std": 163, "table_": 164, "xlim": [164, 170], "ylim": [164, 170], "rel": 164, "y_true": 165, "y_pred": 165, "one_hot": 165, "train_seri": 166, "test_seri": 166, "blind_seri": 166, "min_rang": 166, "max_rang": 166, "xlabel": [166, 167], "ylabel": [166, 167], "loc": 166, "vline": 166, "n_fold": 167, "n_bin": 167, "color_map": [167, 168], "mag": 167, "count": 167, "titl": [167, 168], "figsiz": [167, 168], "legend_po": 167, "legend_col": 167, "6": 168, "true_seri": 169, "pred_seri": 169, "curv": 169, "zoom_rang": 169, "zoom_po": 169, "show": 169, "seri": 169, "rep": 169, "repetit": 169, "std": 169, "macro": 169, "micro": 169, "plote": 169, "averag": 169, "assert": 169, "len": 169, "mean_seri": 170, "error_seri": 170, "legend_loc": 170, "page": 172}, "objects": {"mergernet": [[0, 0, 0, "-", "core"], [39, 0, 0, "-", "data"], [88, 0, 0, "-", "estimators"], [99, 0, 0, "-", "jobs"], [114, 0, 0, "-", "model"], [135, 0, 0, "-", "services"], [161, 0, 0, "-", "visualization"]], "mergernet.core": [[1, 0, 0, "-", "constants"], [2, 0, 0, "-", "experiment"], [5, 0, 0, "-", "hp"], [13, 0, 0, "-", "logging"], [15, 0, 0, "-", "utils"]], "mergernet.core.experiment": [[3, 1, 1, "", "Experiment"], [4, 4, 1, "", "backup_model"]], "mergernet.core.experiment.Experiment": [[3, 1, 1, "", "Tracker"], [3, 2, 1, "", "_downloaded_artifacts"], [3, 2, 1, "", "_exp_created"], [3, 3, 1, "", "_post_run"], [3, 3, 1, "", "_pre_run"], [3, 2, 1, "", "_registered_artifacts"], [3, 3, 1, "", "_setup_experiment_attributes"], [3, 3, 1, "", "autoclean"], [3, 3, 1, "", "delete"], [3, 3, 1, "", "download_file_gd"], [3, 2, 1, "", "exp_id"], [3, 2, 1, "", "exp_name"], [3, 3, 1, "", "finish_wandb"], [3, 2, 1, "", "gd_exp_path"], [3, 2, 1, "", "gd_shared_path"], [3, 3, 1, "", "init_wandb"], [3, 2, 1, "", "local_exp_path"], [3, 2, 1, "", "local_shared_path"], [3, 2, 1, "", "notes"], [3, 3, 1, "", "register_artifact"], [3, 3, 1, "", "run"], [3, 3, 1, "", "upload_file_gd"], [3, 3, 1, "", "upload_registered_artifacts"]], "mergernet.core.hp": [[6, 1, 1, "", "CategoricalHyperParameter"], [7, 1, 1, "", "ConstantHyperParameter"], [8, 1, 1, "", "FloatHyperParameter"], [9, 1, 1, "", "HP"], [10, 1, 1, "", "HyperParameter"], [11, 1, 1, "", "HyperParameterSet"], [12, 1, 1, "", "IntHyperParameter"]], "mergernet.core.hp.CategoricalHyperParameter": [[6, 3, 1, "", "clear_last_value"], [6, 3, 1, "", "from_dict"], [6, 3, 1, "", "set_attr"], [6, 3, 1, "", "set_trial"], [6, 3, 1, "", "suggest"], [6, 3, 1, "", "to_dict"]], "mergernet.core.hp.ConstantHyperParameter": [[7, 3, 1, "", "clear_last_value"], [7, 3, 1, "", "from_dict"], [7, 3, 1, "", "set_attr"], [7, 3, 1, "", "set_trial"], [7, 3, 1, "", "suggest"], [7, 3, 1, "", "to_dict"]], "mergernet.core.hp.FloatHyperParameter": [[8, 3, 1, "", "clear_last_value"], [8, 3, 1, "", "from_dict"], [8, 3, 1, "", "set_attr"], [8, 3, 1, "", "set_trial"], [8, 3, 1, "", "suggest"], [8, 3, 1, "", "to_dict"]], "mergernet.core.hp.HP": [[9, 3, 1, "", "cat"], [9, 3, 1, "", "const"], [9, 3, 1, "", "num"]], "mergernet.core.hp.HyperParameter": [[10, 3, 1, "", "clear_last_value"], [10, 3, 1, "", "from_dict"], [10, 3, 1, "", "set_attr"], [10, 3, 1, "", "set_trial"], [10, 3, 1, "", "suggest"], [10, 3, 1, "", "to_dict"]], "mergernet.core.hp.HyperParameterSet": [[11, 3, 1, "", "add"], [11, 3, 1, "", "clear_values_dict"], [11, 3, 1, "", "get"], [11, 3, 1, "", "set_trial"], [11, 3, 1, "", "to_values_dict"]], "mergernet.core.hp.IntHyperParameter": [[12, 3, 1, "", "clear_last_value"], [12, 3, 1, "", "from_dict"], [12, 3, 1, "", "set_attr"], [12, 3, 1, "", "set_trial"], [12, 3, 1, "", "suggest"], [12, 3, 1, "", "to_dict"]], "mergernet.core.logging": [[14, 4, 1, "", "configure_root_logger"]], "mergernet.core.utils": [[16, 1, 1, "", "CachedDataFrame"], [17, 1, 1, "", "SingletonMeta"], [18, 1, 1, "", "Timming"], [19, 4, 1, "", "array_fallback"], [20, 1, 1, "", "classproperty"], [21, 4, 1, "", "compress_files"], [22, 4, 1, "", "compress_fits"], [23, 4, 1, "", "deep_update"], [24, 4, 1, "", "execute_posix_command"], [25, 4, 1, "", "extract_files"], [26, 4, 1, "", "extract_iauname_from_path"], [27, 4, 1, "", "find_by_value"], [28, 4, 1, "", "heading"], [29, 4, 1, "", "iauname"], [30, 4, 1, "", "iauname_path"], [31, 4, 1, "", "install_linux_package"], [32, 4, 1, "", "load_image"], [33, 4, 1, "", "load_table"], [34, 4, 1, "", "not_in"], [35, 4, 1, "", "save_image"], [36, 4, 1, "", "save_table"], [37, 4, 1, "", "serialize"], [38, 4, 1, "", "unique_path"]], "mergernet.core.utils.CachedDataFrame": [[16, 2, 1, "", "_cache"], [16, 3, 1, "", "load"]], "mergernet.core.utils.SingletonMeta": [[17, 3, 1, "", "__new__"], [17, 2, 1, "", "_instances"], [17, 2, 1, "", "_lock"], [17, 3, 1, "", "mro"]], "mergernet.core.utils.Timming": [[18, 3, 1, "", "_format_time"], [18, 3, 1, "", "duration"], [18, 3, 1, "", "end"], [18, 3, 1, "", "start"]], "mergernet.core.utils.classproperty": [[20, 3, 1, "", "__new__"], [20, 3, 1, "", "deleter"], [20, 2, 1, "", "fdel"], [20, 2, 1, "", "fget"], [20, 2, 1, "", "fset"], [20, 3, 1, "", "getter"], [20, 3, 1, "", "setter"]], "mergernet.data": [[40, 0, 0, "-", "dataset"], [43, 0, 0, "-", "dataset_config"], [48, 0, 0, "-", "image"], [59, 0, 0, "-", "kfold"], [62, 0, 0, "-", "match"], [66, 0, 0, "-", "preprocessing"], [72, 0, 0, "-", "rgb"], [74, 0, 0, "-", "sanitization"], [76, 0, 0, "-", "trilogy"]], "mergernet.data.dataset": [[41, 1, 1, "", "Dataset"], [42, 1, 1, "", "TFRDataset"]], "mergernet.data.dataset.Dataset": [[41, 3, 1, "", "_create_dataset_table"], [41, 3, 1, "", "_discretize_label"], [41, 3, 1, "", "_transform_images"], [41, 3, 1, "", "clear"], [41, 3, 1, "", "compute_class_weight"], [41, 3, 1, "", "concat_fold_column"], [41, 3, 1, "", "download"], [41, 3, 1, "", "get_X"], [41, 3, 1, "", "get_X_by_fold"], [41, 3, 1, "", "get_fold"], [41, 3, 1, "", "get_images_paths"], [41, 3, 1, "", "get_preds_dataset"], [41, 3, 1, "", "get_table"], [41, 3, 1, "", "is_dataset_downloaded"], [41, 3, 1, "", "prepare_data"], [41, 2, 1, "", "registry"]], "mergernet.data.dataset.TFRDataset": [[42, 3, 1, "", "_bytes_feature"], [42, 3, 1, "", "_create_shard"], [42, 3, 1, "", "_serialize_array"], [42, 3, 1, "", "create"]], "mergernet.data.dataset_config": [[44, 1, 1, "", "DatasetConfig"], [45, 1, 1, "", "DatasetRegistry"], [46, 1, 1, "", "GoogleDriveResource"], [47, 1, 1, "", "HTTPResource"]], "mergernet.data.dataset_config.DatasetRegistry": [[45, 2, 1, "", "BIN_LEGACY_NORTH_RGB_128"], [45, 2, 1, "", "BIN_SDSS_128"], [45, 2, 1, "", "BLIND_SPLUS_GAL80_LS10_RGB_128"], [45, 2, 1, "", "BLIND_SPLUS_LUPTON_128"], [45, 2, 1, "", "BLIND_SPLUS_LUPTON_150"], [45, 2, 1, "", "BLIND_SPLUS_TRILOGY_128"], [45, 2, 1, "", "BLIND_SPLUS_TRILOGY_150"], [45, 2, 1, "", "DARG_NO_INSPECTION"], [45, 2, 1, "", "DECALS_0364_1M_PART0"], [45, 2, 1, "", "DECALS_0364_1M_PART1"], [45, 2, 1, "", "DECALS_0364_1M_PART10"], [45, 2, 1, "", "DECALS_0364_1M_PART11"], [45, 2, 1, "", "DECALS_0364_1M_PART12"], [45, 2, 1, "", "DECALS_0364_1M_PART2"], [45, 2, 1, "", "DECALS_0364_1M_PART3"], [45, 2, 1, "", "DECALS_0364_1M_PART4"], [45, 2, 1, "", "DECALS_0364_1M_PART5"], [45, 2, 1, "", "DECALS_0364_1M_PART6"], [45, 2, 1, "", "DECALS_0364_1M_PART7"], [45, 2, 1, "", "DECALS_0364_1M_PART8"], [45, 2, 1, "", "DECALS_0364_1M_PART9"], [45, 2, 1, "", "LS10_TRAIN_224_PNG"], [45, 2, 1, "", "MESD_LEGACY_128"], [45, 2, 1, "", "MESD_SDSS_128"]], "mergernet.data.dataset_config.GoogleDriveResource": [[46, 2, 1, "", "GD_DATASETS_PATH"]], "mergernet.data.image": [[49, 1, 1, "", "ChannelAverage"], [50, 1, 1, "", "Crop"], [51, 1, 1, "", "ImagePipeline"], [52, 1, 1, "", "ImageTransform"], [53, 1, 1, "", "LegacyRGB"], [54, 1, 1, "", "LuptonRGB"], [55, 1, 1, "", "TensorToImage"], [56, 1, 1, "", "TensorToShards"], [57, 4, 1, "", "asinh_map"], [58, 4, 1, "", "asinh_map2"]], "mergernet.data.image.ChannelAverage": [[49, 2, 1, "", "_abc_impl"], [49, 3, 1, "", "batch_transform"], [49, 3, 1, "", "on_batch_end"], [49, 3, 1, "", "transform"]], "mergernet.data.image.Crop": [[50, 2, 1, "", "_abc_impl"], [50, 3, 1, "", "batch_transform"], [50, 3, 1, "", "on_batch_end"], [50, 3, 1, "", "transform"]], "mergernet.data.image.ImagePipeline": [[51, 2, 1, "", "_abc_impl"], [51, 3, 1, "", "batch_transform"], [51, 3, 1, "", "on_batch_end"], [51, 3, 1, "", "transform"]], "mergernet.data.image.ImageTransform": [[52, 2, 1, "", "_abc_impl"], [52, 3, 1, "", "batch_transform"], [52, 3, 1, "", "on_batch_end"], [52, 3, 1, "", "transform"]], "mergernet.data.image.LegacyRGB": [[53, 2, 1, "", "_abc_impl"], [53, 3, 1, "", "batch_transform"], [53, 3, 1, "", "on_batch_end"], [53, 3, 1, "", "transform"]], "mergernet.data.image.LuptonRGB": [[54, 2, 1, "", "_abc_impl"], [54, 3, 1, "", "batch_transform"], [54, 3, 1, "", "on_batch_end"], [54, 3, 1, "", "transform"]], "mergernet.data.image.TensorToImage": [[55, 2, 1, "", "_abc_impl"], [55, 3, 1, "", "batch_transform"], [55, 3, 1, "", "on_batch_end"], [55, 3, 1, "", "transform"]], "mergernet.data.image.TensorToShards": [[56, 2, 1, "", "_abc_impl"], [56, 3, 1, "", "_bytes_feature"], [56, 3, 1, "", "_create_shard"], [56, 3, 1, "", "_serialize_array"], [56, 3, 1, "", "batch_transform"], [56, 3, 1, "", "on_batch_end"], [56, 3, 1, "", "transform"]], "mergernet.data.kfold": [[60, 1, 1, "", "DistributionKFold"], [61, 1, 1, "", "StratifiedDistributionKFold"]], "mergernet.data.kfold.DistributionKFold": [[60, 3, 1, "", "split"]], "mergernet.data.kfold.StratifiedDistributionKFold": [[61, 3, 1, "", "compute_max_bins"], [61, 3, 1, "", "split_all"], [61, 3, 1, "", "split_ids"]], "mergernet.data.match": [[63, 1, 1, "", "CrossMatch"], [64, 1, 1, "", "CrossMatchResult"], [65, 1, 1, "", "XTable"]], "mergernet.data.match.CrossMatch": [[63, 3, 1, "", "crossmatch"], [63, 3, 1, "", "pair_match"], [63, 3, 1, "", "unique"]], "mergernet.data.match.CrossMatchResult": [[64, 2, 1, "", "distance"], [64, 2, 1, "", "primary_idx"], [64, 2, 1, "", "secondary_idx"], [64, 2, 1, "", "table"]], "mergernet.data.match.XTable": [[65, 3, 1, "", "get_coords"], [65, 3, 1, "", "to_df"]], "mergernet.data.preprocessing": [[67, 4, 1, "", "load_jpg"], [68, 4, 1, "", "load_png"], [69, 4, 1, "", "normalize_rgb"], [70, 4, 1, "", "one_hot_factory"], [71, 4, 1, "", "standardize_rgb"]], "mergernet.data.rgb": [[73, 1, 1, "", "RGB"]], "mergernet.data.rgb.RGB": [[73, 3, 1, "", "make_trilogy_fits"], [73, 3, 1, "", "trilogy_fits_to_png"]], "mergernet.data.sanitization": [[75, 1, 1, "", "DatasetSanitization"]], "mergernet.data.sanitization.DatasetSanitization": [[75, 3, 1, "", "check_images"], [75, 3, 1, "", "drop_images_by_filesize"], [75, 3, 1, "", "drop_images_by_iauname"], [75, 3, 1, "", "filesize_histogram"], [75, 3, 1, "", "get_filesize_distribution"], [75, 3, 1, "", "get_iauname_by_filesize"], [75, 3, 1, "", "sample"], [75, 3, 1, "", "sanitize"]], "mergernet.data.trilogy": [[77, 1, 1, "", "MakeImg"], [78, 4, 1, "", "RGB2im"], [79, 4, 1, "", "adjust_saturation"], [80, 4, 1, "", "da"], [81, 4, 1, "", "get_clip"], [82, 4, 1, "", "get_levels"], [83, 4, 1, "", "imscale"], [84, 4, 1, "", "meanstd"], [85, 4, 1, "", "rms"], [86, 4, 1, "", "satK2m"], [87, 4, 1, "", "setLevel"]], "mergernet.data.trilogy.MakeImg": [[77, 3, 1, "", "color"], [77, 3, 1, "", "get_array"], [77, 3, 1, "", "savefig"]], "mergernet.estimators": [[89, 0, 0, "-", "automl"], [91, 0, 0, "-", "base"], [95, 0, 0, "-", "decals"], [97, 0, 0, "-", "parametric"]], "mergernet.estimators.automl": [[90, 1, 1, "", "OptunaEstimator"]], "mergernet.estimators.automl.OptunaEstimator": [[90, 2, 1, "", "_abc_impl"], [90, 3, 1, "", "_objective"], [90, 3, 1, "", "_save_optuna_db"], [90, 3, 1, "", "build"], [90, 3, 1, "", "compile_model"], [90, 3, 1, "", "download"], [90, 3, 1, "", "get_conv_arch"], [90, 3, 1, "", "get_dataaug_block"], [90, 3, 1, "", "get_metric"], [90, 3, 1, "", "get_optimizer"], [90, 3, 1, "", "get_scheduler"], [90, 3, 1, "", "plot"], [90, 3, 1, "", "predict"], [90, 2, 1, "", "registry"], [90, 3, 1, "", "set_trainable"], [90, 5, 1, "", "tf_model"], [90, 3, 1, "", "train"]], "mergernet.estimators.base": [[92, 1, 1, "", "Estimator"], [93, 1, 1, "", "EstimatorConfig"], [94, 1, 1, "", "EstimatorRegistry"]], "mergernet.estimators.base.Estimator": [[92, 2, 1, "", "_abc_impl"], [92, 3, 1, "", "build"], [92, 3, 1, "", "compile_model"], [92, 3, 1, "", "download"], [92, 3, 1, "", "get_conv_arch"], [92, 3, 1, "", "get_dataaug_block"], [92, 3, 1, "", "get_metric"], [92, 3, 1, "", "get_optimizer"], [92, 3, 1, "", "get_scheduler"], [92, 3, 1, "", "plot"], [92, 3, 1, "", "predict"], [92, 2, 1, "", "registry"], [92, 3, 1, "", "set_trainable"], [92, 5, 1, "", "tf_model"], [92, 3, 1, "", "train"]], "mergernet.estimators.base.EstimatorRegistry": [[94, 2, 1, "", "ZOOBOT_GREYSCALE"], [94, 2, 1, "", "ZOOBOT_RGB"]], "mergernet.estimators.decals": [[96, 1, 1, "", "ZoobotEstimator"]], "mergernet.estimators.decals.ZoobotEstimator": [[96, 2, 1, "", "_abc_impl"], [96, 3, 1, "", "_prepare_dataset"], [96, 3, 1, "", "build"], [96, 3, 1, "", "cnn_representations"], [96, 3, 1, "", "compile_model"], [96, 3, 1, "", "download"], [96, 3, 1, "", "get_conv_arch"], [96, 3, 1, "", "get_dataaug_block"], [96, 3, 1, "", "get_metric"], [96, 3, 1, "", "get_optimizer"], [96, 3, 1, "", "get_scheduler"], [96, 3, 1, "", "pca"], [96, 3, 1, "", "plot"], [96, 3, 1, "", "predict"], [96, 2, 1, "", "registry"], [96, 3, 1, "", "set_trainable"], [96, 5, 1, "", "tf_model"], [96, 3, 1, "", "train"]], "mergernet.estimators.parametric": [[98, 1, 1, "", "ParametricEstimator"]], "mergernet.estimators.parametric.ParametricEstimator": [[98, 2, 1, "", "_abc_impl"], [98, 3, 1, "", "build"], [98, 3, 1, "", "compile_model"], [98, 3, 1, "", "download"], [98, 3, 1, "", "get_conv_arch"], [98, 3, 1, "", "get_dataaug_block"], [98, 3, 1, "", "get_metric"], [98, 3, 1, "", "get_optimizer"], [98, 3, 1, "", "get_scheduler"], [98, 3, 1, "", "plot"], [98, 3, 1, "", "predict"], [98, 2, 1, "", "registry"], [98, 3, 1, "", "set_trainable"], [98, 5, 1, "", "tf_model"], [98, 3, 1, "", "train"]], "mergernet.jobs": [[100, 0, 0, "-", "j001"], [102, 0, 0, "-", "j002"], [104, 0, 0, "-", "j009"], [106, 0, 0, "-", "j010"], [108, 0, 0, "-", "j023"], [110, 0, 0, "-", "j026"], [112, 0, 0, "-", "j027"]], "mergernet.jobs.j001": [[101, 1, 1, "", "Job"]], "mergernet.jobs.j001.Job": [[101, 1, 1, "", "Tracker"], [101, 2, 1, "", "_downloaded_artifacts"], [101, 2, 1, "", "_exp_created"], [101, 3, 1, "", "_post_run"], [101, 3, 1, "", "_pre_run"], [101, 2, 1, "", "_registered_artifacts"], [101, 3, 1, "", "_setup_experiment_attributes"], [101, 3, 1, "", "autoclean"], [101, 3, 1, "", "call"], [101, 3, 1, "", "delete"], [101, 3, 1, "", "download_file_gd"], [101, 2, 1, "", "exp_id"], [101, 2, 1, "", "exp_name"], [101, 3, 1, "", "finish_wandb"], [101, 2, 1, "", "gd_exp_path"], [101, 2, 1, "", "gd_shared_path"], [101, 3, 1, "", "init_wandb"], [101, 2, 1, "", "local_exp_path"], [101, 2, 1, "", "local_shared_path"], [101, 2, 1, "", "notes"], [101, 3, 1, "", "register_artifact"], [101, 3, 1, "", "run"], [101, 3, 1, "", "upload_file_gd"], [101, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j002": [[103, 1, 1, "", "Job"]], "mergernet.jobs.j002.Job": [[103, 1, 1, "", "Tracker"], [103, 2, 1, "", "_downloaded_artifacts"], [103, 2, 1, "", "_exp_created"], [103, 3, 1, "", "_post_run"], [103, 3, 1, "", "_pre_run"], [103, 2, 1, "", "_registered_artifacts"], [103, 3, 1, "", "_setup_experiment_attributes"], [103, 3, 1, "", "autoclean"], [103, 3, 1, "", "call"], [103, 3, 1, "", "delete"], [103, 3, 1, "", "download_file_gd"], [103, 2, 1, "", "exp_id"], [103, 2, 1, "", "exp_name"], [103, 3, 1, "", "finish_wandb"], [103, 2, 1, "", "gd_exp_path"], [103, 2, 1, "", "gd_shared_path"], [103, 3, 1, "", "init_wandb"], [103, 2, 1, "", "local_exp_path"], [103, 2, 1, "", "local_shared_path"], [103, 2, 1, "", "notes"], [103, 3, 1, "", "register_artifact"], [103, 3, 1, "", "run"], [103, 3, 1, "", "upload_file_gd"], [103, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j009": [[105, 1, 1, "", "Job"]], "mergernet.jobs.j009.Job": [[105, 1, 1, "", "Tracker"], [105, 2, 1, "", "_downloaded_artifacts"], [105, 2, 1, "", "_exp_created"], [105, 3, 1, "", "_post_run"], [105, 3, 1, "", "_pre_run"], [105, 2, 1, "", "_registered_artifacts"], [105, 3, 1, "", "_setup_experiment_attributes"], [105, 3, 1, "", "autoclean"], [105, 3, 1, "", "call"], [105, 3, 1, "", "delete"], [105, 3, 1, "", "download_file_gd"], [105, 2, 1, "", "exp_id"], [105, 2, 1, "", "exp_name"], [105, 3, 1, "", "finish_wandb"], [105, 2, 1, "", "gd_exp_path"], [105, 2, 1, "", "gd_shared_path"], [105, 3, 1, "", "init_wandb"], [105, 2, 1, "", "local_exp_path"], [105, 2, 1, "", "local_shared_path"], [105, 2, 1, "", "notes"], [105, 3, 1, "", "register_artifact"], [105, 3, 1, "", "run"], [105, 3, 1, "", "upload_file_gd"], [105, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j010": [[107, 1, 1, "", "Job"]], "mergernet.jobs.j010.Job": [[107, 1, 1, "", "Tracker"], [107, 2, 1, "", "_downloaded_artifacts"], [107, 2, 1, "", "_exp_created"], [107, 3, 1, "", "_post_run"], [107, 3, 1, "", "_pre_run"], [107, 2, 1, "", "_registered_artifacts"], [107, 3, 1, "", "_setup_experiment_attributes"], [107, 3, 1, "", "autoclean"], [107, 3, 1, "", "call"], [107, 3, 1, "", "delete"], [107, 3, 1, "", "download_file_gd"], [107, 2, 1, "", "exp_id"], [107, 2, 1, "", "exp_name"], [107, 3, 1, "", "finish_wandb"], [107, 2, 1, "", "gd_exp_path"], [107, 2, 1, "", "gd_shared_path"], [107, 3, 1, "", "init_wandb"], [107, 2, 1, "", "local_exp_path"], [107, 2, 1, "", "local_shared_path"], [107, 2, 1, "", "notes"], [107, 3, 1, "", "register_artifact"], [107, 3, 1, "", "run"], [107, 3, 1, "", "upload_file_gd"], [107, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j023": [[109, 1, 1, "", "Job"]], "mergernet.jobs.j023.Job": [[109, 1, 1, "", "Tracker"], [109, 2, 1, "", "_downloaded_artifacts"], [109, 2, 1, "", "_exp_created"], [109, 3, 1, "", "_post_run"], [109, 3, 1, "", "_pre_run"], [109, 2, 1, "", "_registered_artifacts"], [109, 3, 1, "", "_setup_experiment_attributes"], [109, 3, 1, "", "autoclean"], [109, 3, 1, "", "call"], [109, 3, 1, "", "delete"], [109, 3, 1, "", "download_file_gd"], [109, 2, 1, "", "exp_id"], [109, 2, 1, "", "exp_name"], [109, 3, 1, "", "finish_wandb"], [109, 2, 1, "", "gd_exp_path"], [109, 2, 1, "", "gd_shared_path"], [109, 3, 1, "", "init_wandb"], [109, 2, 1, "", "local_exp_path"], [109, 2, 1, "", "local_shared_path"], [109, 2, 1, "", "notes"], [109, 3, 1, "", "register_artifact"], [109, 3, 1, "", "run"], [109, 3, 1, "", "upload_file_gd"], [109, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j026": [[111, 1, 1, "", "Job"]], "mergernet.jobs.j026.Job": [[111, 1, 1, "", "Tracker"], [111, 2, 1, "", "_downloaded_artifacts"], [111, 2, 1, "", "_exp_created"], [111, 3, 1, "", "_post_run"], [111, 3, 1, "", "_pre_run"], [111, 2, 1, "", "_registered_artifacts"], [111, 3, 1, "", "_setup_experiment_attributes"], [111, 3, 1, "", "autoclean"], [111, 3, 1, "", "call"], [111, 3, 1, "", "delete"], [111, 3, 1, "", "download_file_gd"], [111, 2, 1, "", "exp_id"], [111, 2, 1, "", "exp_name"], [111, 3, 1, "", "finish_wandb"], [111, 2, 1, "", "gd_exp_path"], [111, 2, 1, "", "gd_shared_path"], [111, 3, 1, "", "init_wandb"], [111, 2, 1, "", "local_exp_path"], [111, 2, 1, "", "local_shared_path"], [111, 2, 1, "", "notes"], [111, 3, 1, "", "register_artifact"], [111, 3, 1, "", "run"], [111, 3, 1, "", "upload_file_gd"], [111, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j027": [[113, 1, 1, "", "Job"]], "mergernet.jobs.j027.Job": [[113, 1, 1, "", "Tracker"], [113, 2, 1, "", "_downloaded_artifacts"], [113, 2, 1, "", "_exp_created"], [113, 3, 1, "", "_post_run"], [113, 3, 1, "", "_pre_run"], [113, 2, 1, "", "_registered_artifacts"], [113, 3, 1, "", "_setup_experiment_attributes"], [113, 3, 1, "", "autoclean"], [113, 3, 1, "", "call"], [113, 3, 1, "", "delete"], [113, 3, 1, "", "download_file_gd"], [113, 2, 1, "", "exp_id"], [113, 2, 1, "", "exp_name"], [113, 3, 1, "", "finish_wandb"], [113, 2, 1, "", "gd_exp_path"], [113, 2, 1, "", "gd_shared_path"], [113, 3, 1, "", "init_wandb"], [113, 2, 1, "", "local_exp_path"], [113, 2, 1, "", "local_shared_path"], [113, 2, 1, "", "notes"], [113, 3, 1, "", "register_artifact"], [113, 3, 1, "", "run"], [113, 3, 1, "", "upload_file_gd"], [113, 3, 1, "", "upload_registered_artifacts"]], "mergernet.model": [[115, 0, 0, "-", "automl"], [117, 0, 0, "-", "baseline"], [119, 0, 0, "-", "callbacks"], [127, 0, 0, "-", "inference"], [129, 0, 0, "-", "utils"]], "mergernet.model.automl": [[116, 4, 1, "", "optuna_train"]], "mergernet.model.baseline": [[118, 4, 1, "", "finetune_train"]], "mergernet.model.callbacks": [[120, 1, 1, "", "DeltaStopping"], [121, 1, 1, "", "MWandbCallback"], [122, 1, 1, "", "MyWandbCallback"], [123, 1, 1, "", "PruneCallback"], [124, 1, 1, "", "SaveBestTrialCallback"], [125, 1, 1, "", "TFKerasPruningCallback"], [126, 1, 1, "", "WandbGraphicsCallback"]], "mergernet.model.callbacks.DeltaStopping": [[120, 3, 1, "", "_implements_predict_batch_hooks"], [120, 3, 1, "", "_implements_test_batch_hooks"], [120, 3, 1, "", "_implements_train_batch_hooks"], [120, 2, 1, "", "_keras_api_names"], [120, 2, 1, "", "_keras_api_names_v1"], [120, 3, 1, "", "on_batch_begin"], [120, 3, 1, "", "on_batch_end"], [120, 3, 1, "", "on_epoch_begin"], [120, 3, 1, "", "on_epoch_end"], [120, 3, 1, "", "on_predict_batch_begin"], [120, 3, 1, "", "on_predict_batch_end"], [120, 3, 1, "", "on_predict_begin"], [120, 3, 1, "", "on_predict_end"], [120, 3, 1, "", "on_test_batch_begin"], [120, 3, 1, "", "on_test_batch_end"], [120, 3, 1, "", "on_test_begin"], [120, 3, 1, "", "on_test_end"], [120, 3, 1, "", "on_train_batch_begin"], [120, 3, 1, "", "on_train_batch_end"], [120, 3, 1, "", "on_train_begin"], [120, 3, 1, "", "on_train_end"], [120, 3, 1, "", "set_model"], [120, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MWandbCallback": [[121, 3, 1, "", "_implements_predict_batch_hooks"], [121, 3, 1, "", "_implements_test_batch_hooks"], [121, 3, 1, "", "_implements_train_batch_hooks"], [121, 2, 1, "", "_keras_api_names"], [121, 2, 1, "", "_keras_api_names_v1"], [121, 3, 1, "", "get_flops"], [121, 3, 1, "", "on_batch_begin"], [121, 3, 1, "", "on_batch_end"], [121, 3, 1, "", "on_epoch_begin"], [121, 3, 1, "", "on_epoch_end"], [121, 3, 1, "", "on_predict_batch_begin"], [121, 3, 1, "", "on_predict_batch_end"], [121, 3, 1, "", "on_predict_begin"], [121, 3, 1, "", "on_predict_end"], [121, 3, 1, "", "on_test_batch_begin"], [121, 3, 1, "", "on_test_batch_end"], [121, 3, 1, "", "on_test_begin"], [121, 3, 1, "", "on_test_end"], [121, 3, 1, "", "on_train_batch_begin"], [121, 3, 1, "", "on_train_batch_end"], [121, 3, 1, "", "on_train_begin"], [121, 3, 1, "", "on_train_end"], [121, 3, 1, "", "set_model"], [121, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MyWandbCallback": [[122, 3, 1, "", "_attempt_evaluation_log"], [122, 3, 1, "", "_build_grad_accumulator_model"], [122, 3, 1, "", "_implements_predict_batch_hooks"], [122, 3, 1, "", "_implements_test_batch_hooks"], [122, 3, 1, "", "_implements_train_batch_hooks"], [122, 2, 1, "", "_keras_api_names"], [122, 2, 1, "", "_keras_api_names_v1"], [122, 3, 1, "", "_log_dataframe"], [122, 3, 1, "", "_log_gradients"], [122, 3, 1, "", "_log_images"], [122, 3, 1, "", "_log_weights"], [122, 3, 1, "", "_logits_to_captions"], [122, 3, 1, "", "_masks_to_pixels"], [122, 3, 1, "", "_save_model"], [122, 3, 1, "", "_save_model_as_artifact"], [122, 3, 1, "", "get_flops"], [122, 3, 1, "", "on_batch_begin"], [122, 3, 1, "", "on_batch_end"], [122, 3, 1, "", "on_epoch_begin"], [122, 3, 1, "", "on_epoch_end"], [122, 3, 1, "", "on_predict_batch_begin"], [122, 3, 1, "", "on_predict_batch_end"], [122, 3, 1, "", "on_predict_begin"], [122, 3, 1, "", "on_predict_end"], [122, 3, 1, "", "on_test_batch_begin"], [122, 3, 1, "", "on_test_batch_end"], [122, 3, 1, "", "on_test_begin"], [122, 3, 1, "", "on_test_end"], [122, 3, 1, "", "on_train_batch_begin"], [122, 3, 1, "", "on_train_batch_end"], [122, 3, 1, "", "on_train_begin"], [122, 3, 1, "", "on_train_end"], [122, 3, 1, "", "set_model"], [122, 3, 1, "", "set_params"]], "mergernet.model.callbacks.PruneCallback": [[123, 3, 1, "", "_implements_predict_batch_hooks"], [123, 3, 1, "", "_implements_test_batch_hooks"], [123, 3, 1, "", "_implements_train_batch_hooks"], [123, 2, 1, "", "_keras_api_names"], [123, 2, 1, "", "_keras_api_names_v1"], [123, 3, 1, "", "on_batch_begin"], [123, 3, 1, "", "on_batch_end"], [123, 3, 1, "", "on_epoch_begin"], [123, 3, 1, "", "on_epoch_end"], [123, 3, 1, "", "on_predict_batch_begin"], [123, 3, 1, "", "on_predict_batch_end"], [123, 3, 1, "", "on_predict_begin"], [123, 3, 1, "", "on_predict_end"], [123, 3, 1, "", "on_test_batch_begin"], [123, 3, 1, "", "on_test_batch_end"], [123, 3, 1, "", "on_test_begin"], [123, 3, 1, "", "on_test_end"], [123, 3, 1, "", "on_train_batch_begin"], [123, 3, 1, "", "on_train_batch_end"], [123, 3, 1, "", "on_train_begin"], [123, 3, 1, "", "on_train_end"], [123, 3, 1, "", "set_model"], [123, 3, 1, "", "set_params"]], "mergernet.model.callbacks.SaveBestTrialCallback": [[124, 3, 1, "", "_implements_predict_batch_hooks"], [124, 3, 1, "", "_implements_test_batch_hooks"], [124, 3, 1, "", "_implements_train_batch_hooks"], [124, 2, 1, "", "_keras_api_names"], [124, 2, 1, "", "_keras_api_names_v1"], [124, 3, 1, "", "on_batch_begin"], [124, 3, 1, "", "on_batch_end"], [124, 3, 1, "", "on_epoch_begin"], [124, 3, 1, "", "on_epoch_end"], [124, 3, 1, "", "on_predict_batch_begin"], [124, 3, 1, "", "on_predict_batch_end"], [124, 3, 1, "", "on_predict_begin"], [124, 3, 1, "", "on_predict_end"], [124, 3, 1, "", "on_test_batch_begin"], [124, 3, 1, "", "on_test_batch_end"], [124, 3, 1, "", "on_test_begin"], [124, 3, 1, "", "on_test_end"], [124, 3, 1, "", "on_train_batch_begin"], [124, 3, 1, "", "on_train_batch_end"], [124, 3, 1, "", "on_train_begin"], [124, 3, 1, "", "on_train_end"], [124, 3, 1, "", "set_model"], [124, 3, 1, "", "set_params"]], "mergernet.model.callbacks.TFKerasPruningCallback": [[125, 3, 1, "", "_implements_predict_batch_hooks"], [125, 3, 1, "", "_implements_test_batch_hooks"], [125, 3, 1, "", "_implements_train_batch_hooks"], [125, 2, 1, "", "_keras_api_names"], [125, 2, 1, "", "_keras_api_names_v1"], [125, 3, 1, "", "on_batch_begin"], [125, 3, 1, "", "on_batch_end"], [125, 3, 1, "", "on_epoch_begin"], [125, 3, 1, "", "on_epoch_end"], [125, 3, 1, "", "on_predict_batch_begin"], [125, 3, 1, "", "on_predict_batch_end"], [125, 3, 1, "", "on_predict_begin"], [125, 3, 1, "", "on_predict_end"], [125, 3, 1, "", "on_test_batch_begin"], [125, 3, 1, "", "on_test_batch_end"], [125, 3, 1, "", "on_test_begin"], [125, 3, 1, "", "on_test_end"], [125, 3, 1, "", "on_train_batch_begin"], [125, 3, 1, "", "on_train_batch_end"], [125, 3, 1, "", "on_train_begin"], [125, 3, 1, "", "on_train_end"], [125, 3, 1, "", "set_model"], [125, 3, 1, "", "set_params"]], "mergernet.model.callbacks.WandbGraphicsCallback": [[126, 3, 1, "", "_implements_predict_batch_hooks"], [126, 3, 1, "", "_implements_test_batch_hooks"], [126, 3, 1, "", "_implements_train_batch_hooks"], [126, 2, 1, "", "_keras_api_names"], [126, 2, 1, "", "_keras_api_names_v1"], [126, 3, 1, "", "on_batch_begin"], [126, 3, 1, "", "on_batch_end"], [126, 3, 1, "", "on_epoch_begin"], [126, 3, 1, "", "on_epoch_end"], [126, 3, 1, "", "on_predict_batch_begin"], [126, 3, 1, "", "on_predict_batch_end"], [126, 3, 1, "", "on_predict_begin"], [126, 3, 1, "", "on_predict_end"], [126, 3, 1, "", "on_test_batch_begin"], [126, 3, 1, "", "on_test_batch_end"], [126, 3, 1, "", "on_test_begin"], [126, 3, 1, "", "on_test_end"], [126, 3, 1, "", "on_train_batch_begin"], [126, 3, 1, "", "on_train_batch_end"], [126, 3, 1, "", "on_train_begin"], [126, 3, 1, "", "on_train_end"], [126, 3, 1, "", "set_model"], [126, 3, 1, "", "set_params"]], "mergernet.model.inference": [[128, 1, 1, "", "Predictor"]], "mergernet.model.inference.Predictor": [[128, 3, 1, "", "predict"], [128, 3, 1, "", "upload"]], "mergernet.model.utils": [[130, 4, 1, "", "get_conv_arch"], [131, 4, 1, "", "history_to_dataframe"], [132, 4, 1, "", "load_model"], [133, 4, 1, "", "set_trainable_state"], [134, 4, 1, "", "setup_seeds"]], "mergernet.services": [[136, 0, 0, "-", "github"], [138, 0, 0, "-", "google"], [140, 0, 0, "-", "imaging"], [142, 0, 0, "-", "legacy"], [144, 0, 0, "-", "sciserver"], [146, 0, 0, "-", "sdss"], [148, 0, 0, "-", "splus"], [152, 0, 0, "-", "tap"], [154, 0, 0, "-", "tensorboard"], [156, 0, 0, "-", "utils"]], "mergernet.services.github": [[137, 1, 1, "", "GithubService"]], "mergernet.services.github.GithubService": [[137, 3, 1, "", "_encode_content"], [137, 3, 1, "", "_get_url"], [137, 3, 1, "", "commit"], [137, 3, 1, "", "download"], [137, 3, 1, "", "get_lastest_job_run"], [137, 3, 1, "", "list_dir"]], "mergernet.services.google": [[139, 1, 1, "", "GDrive"]], "mergernet.services.google.GDrive": [[139, 2, 1, "", "base_path"], [139, 3, 1, "", "exists"], [139, 3, 1, "", "get"], [139, 3, 1, "", "get_url"], [139, 3, 1, "", "is_mounted"], [139, 3, 1, "", "move"], [139, 3, 1, "", "send"], [139, 3, 1, "", "send_dir"]], "mergernet.services.imaging": [[141, 1, 1, "", "ImagingService"]], "mergernet.services.imaging.ImagingService": [[141, 2, 1, "", "_abc_impl"], [141, 3, 1, "", "_batch_download_rgb"], [141, 3, 1, "", "_download_rgb"], [141, 3, 1, "", "batch_cutout"], [141, 3, 1, "", "cutout"]], "mergernet.services.legacy": [[143, 1, 1, "", "LegacyService"]], "mergernet.services.legacy.LegacyService": [[143, 2, 1, "", "_abc_impl"], [143, 3, 1, "", "_batch_download_rgb"], [143, 3, 1, "", "_download_rgb"], [143, 3, 1, "", "batch_cutout"], [143, 3, 1, "", "cutout"]], "mergernet.services.sciserver": [[145, 1, 1, "", "SciServer"]], "mergernet.services.sciserver.SciServer": [[145, 3, 1, "", "get_url"]], "mergernet.services.sdss": [[147, 1, 1, "", "SloanService"]], "mergernet.services.sdss.SloanService": [[147, 3, 1, "", "batch_download_fits"], [147, 3, 1, "", "batch_download_rgb"], [147, 3, 1, "", "crossmatch"], [147, 3, 1, "", "cutout"], [147, 3, 1, "", "download_fits"], [147, 3, 1, "", "download_rgb"], [147, 3, 1, "", "get_image_filename"]], "mergernet.services.splus": [[149, 1, 1, "", "ImageType"], [150, 1, 1, "", "SplusService"], [151, 4, 1, "", "update_authorization"]], "mergernet.services.splus.ImageType": [[149, 2, 1, "", "fits"], [149, 2, 1, "", "lupton"], [149, 2, 1, "", "trilogy"]], "mergernet.services.splus.SplusService": [[150, 3, 1, "", "_batch_download"], [150, 3, 1, "", "_download_image"], [150, 3, 1, "", "_get_url"], [150, 2, 1, "", "_lock"], [150, 3, 1, "", "_track_tap_job"], [150, 3, 1, "", "batch_image_download"], [150, 3, 1, "", "batch_query"], [150, 3, 1, "", "download_fits"], [150, 3, 1, "", "download_lupton_rgb"], [150, 3, 1, "", "download_trilogy_rgb"], [150, 3, 1, "", "query"], [150, 3, 1, "", "update_token"]], "mergernet.services.tap": [[153, 1, 1, "", "TapService"]], "mergernet.services.tap.TapService": [[153, 3, 1, "", "batch_sync_query"], [153, 3, 1, "", "sync_query"]], "mergernet.services.tensorboard": [[155, 1, 1, "", "TensorboardService"]], "mergernet.services.tensorboard.TensorboardService": [[155, 3, 1, "", "upload_assets"]], "mergernet.services.utils": [[157, 4, 1, "", "append_query_params"], [158, 4, 1, "", "batch_download_file"], [159, 4, 1, "", "download_file"], [160, 4, 1, "", "parallel_function_executor"]], "mergernet.visualization": [[162, 0, 0, "-", "plot"]], "mergernet.visualization.plot": [[163, 1, 1, "", "Serie"], [164, 4, 1, "", "color_color"], [165, 4, 1, "", "conf_matrix"], [166, 4, 1, "", "data_distribution"], [167, 4, 1, "", "mag_class_distribution"], [168, 4, 1, "", "object_position"], [169, 4, 1, "", "roc"], [170, 4, 1, "", "train_metrics"]], "mergernet.visualization.plot.Serie": [[163, 3, 1, "", "get_serie"], [163, 3, 1, "", "get_std"], [163, 3, 1, "", "has_std"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"mergernet": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 57, 58, 59, 62, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 97, 99, 100, 102, 104, 106, 108, 110, 112, 114, 115, 116, 117, 118, 119, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 142, 144, 146, 148, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172], "core": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "constant": 1, "experi": [2, 3, 4, 171], "backup_model": 4, "hp": [5, 9], "categoricalhyperparamet": 6, "constanthyperparamet": 7, "floathyperparamet": 8, "hyperparamet": 10, "hyperparameterset": 11, "inthyperparamet": 12, "log": [13, 14], "configure_root_logg": 14, "util": [15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 129, 130, 131, 132, 133, 134, 156, 157, 158, 159, 160], "cacheddatafram": 16, "singletonmeta": 17, "tim": 18, "array_fallback": 19, "classproperti": 20, "compress_fil": 21, "compress_fit": 22, "deep_upd": 23, "execute_posix_command": 24, "extract_fil": 25, "extract_iauname_from_path": 26, "find_by_valu": 27, "head": 28, "iaunam": 29, "exampl": [29, 30, 122, 150], "iauname_path": 30, "install_linux_packag": 31, "load_imag": 32, "load_tabl": 33, "not_in": 34, "save_imag": 35, "save_t": 36, "serial": 37, "unique_path": 38, "data": [39, 40, 43, 48, 57, 58, 59, 62, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "dataset": [40, 41], "tfrdataset": 42, "dataset_config": 43, "datasetconfig": 44, "datasetregistri": 45, "googledriveresourc": 46, "httpresourc": 47, "imag": [48, 57, 58, 140], "channelaverag": 49, "crop": 50, "imagepipelin": 51, "imagetransform": 52, "legacyrgb": 53, "luptonrgb": 54, "tensortoimag": 55, "tensortoshard": 56, "asinh_map": 57, "asinh_map2": 58, "kfold": 59, "distributionkfold": 60, "stratifieddistributionkfold": 61, "match": 62, "crossmatch": 63, "crossmatchresult": 64, "xtabl": 65, "preprocess": [66, 67, 68, 69, 70, 71], "load_jpg": 67, "load_png": 68, "normalize_rgb": 69, "one_hot_factori": 70, "standardize_rgb": 71, "rgb": [72, 73], "sanit": 74, "datasetsanit": 75, "trilogi": [76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "makeimg": 77, "rgb2im": 78, "adjust_satur": 79, "da": 80, "get_clip": 81, "get_level": 82, "imscal": 83, "meanstd": 84, "rm": 85, "satk2m": 86, "setlevel": 87, "estim": [88, 89, 91, 92, 95, 97], "automl": [89, 115, 116], "optunaestim": 90, "base": 91, "estimatorconfig": 93, "estimatorregistri": 94, "decal": 95, "zoobotestim": 96, "parametr": 97, "parametricestim": 98, "job": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "j001": 100, "j002": 102, "j009": 104, "j010": 106, "j023": 108, "j026": 110, "j027": 112, "model": [114, 115, 116, 117, 118, 119, 127, 129, 130, 131, 132, 133, 134], "optuna_train": 116, "baselin": [117, 118], "finetune_train": 118, "callback": 119, "deltastop": 120, "mwandbcallback": 121, "mywandbcallback": 122, "prunecallback": 123, "savebesttrialcallback": 124, "tfkeraspruningcallback": 125, "wandbgraphicscallback": 126, "infer": 127, "predictor": 128, "get_conv_arch": 130, "history_to_datafram": 131, "load_model": 132, "set_trainable_st": 133, "setup_se": 134, "servic": [135, 136, 138, 140, 142, 144, 146, 148, 151, 152, 154, 156, 157, 158, 159, 160], "github": 136, "githubservic": 137, "googl": 138, "gdrive": 139, "imagingservic": 141, "legaci": 142, "legacyservic": 143, "sciserv": [144, 145], "sdss": 146, "sloanservic": 147, "splu": [148, 151], "featur": 148, "author": 148, "imagetyp": 149, "splusservic": 150, "update_author": 151, "tap": 152, "tapservic": 153, "tensorboard": 154, "tensorboardservic": 155, "append_query_param": 157, "batch_download_fil": 158, "download_fil": 159, "parallel_function_executor": 160, "visual": [161, 162, 164, 165, 166, 167, 168, 169, 170], "plot": [162, 164, 165, 166, 167, 168, 169, 170], "seri": 163, "color_color": 164, "conf_matrix": 165, "data_distribut": 166, "mag_class_distribut": 167, "object_posit": 168, "roc": 169, "note": 169, "train_metr": 170, "welcom": 172, "": 172, "document": 172, "content": 172, "indic": 172, "tabl": 172, "api": 173, "refer": 173}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"mergernet.core": [[0, "module-mergernet.core"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "Experiment": [[3, "experiment"]], "mergernet.core.experiment.backup_model": [[4, "mergernet-core-experiment-backup-model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "CategoricalHyperParameter": [[6, "categoricalhyperparameter"]], "ConstantHyperParameter": [[7, "constanthyperparameter"]], "FloatHyperParameter": [[8, "floathyperparameter"]], "HP": [[9, "hp"]], "HyperParameter": [[10, "hyperparameter"]], "HyperParameterSet": [[11, "hyperparameterset"]], "IntHyperParameter": [[12, "inthyperparameter"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "mergernet.core.logging.configure_root_logger": [[14, "mergernet-core-logging-configure-root-logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "CachedDataFrame": [[16, "cacheddataframe"]], "SingletonMeta": [[17, "singletonmeta"]], "Timming": [[18, "timming"]], "mergernet.core.utils.array_fallback": [[19, "mergernet-core-utils-array-fallback"]], "classproperty": [[20, "classproperty"]], "mergernet.core.utils.compress_files": [[21, "mergernet-core-utils-compress-files"]], "mergernet.core.utils.compress_fits": [[22, "mergernet-core-utils-compress-fits"]], "mergernet.core.utils.deep_update": [[23, "mergernet-core-utils-deep-update"]], "mergernet.core.utils.execute_posix_command": [[24, "mergernet-core-utils-execute-posix-command"]], "mergernet.core.utils.extract_files": [[25, "mergernet-core-utils-extract-files"]], "mergernet.core.utils.extract_iauname_from_path": [[26, "mergernet-core-utils-extract-iauname-from-path"]], "mergernet.core.utils.find_by_value": [[27, "mergernet-core-utils-find-by-value"]], "mergernet.core.utils.heading": [[28, "mergernet-core-utils-heading"]], "mergernet.core.utils.iauname": [[29, "mergernet-core-utils-iauname"]], "Example": [[29, null], [30, null]], "mergernet.core.utils.iauname_path": [[30, "mergernet-core-utils-iauname-path"]], "mergernet.core.utils.install_linux_package": [[31, "mergernet-core-utils-install-linux-package"]], "mergernet.core.utils.load_image": [[32, "mergernet-core-utils-load-image"]], "mergernet.core.utils.load_table": [[33, "mergernet-core-utils-load-table"]], "mergernet.core.utils.not_in": [[34, "mergernet-core-utils-not-in"]], "mergernet.core.utils.save_image": [[35, "mergernet-core-utils-save-image"]], "mergernet.core.utils.save_table": [[36, "mergernet-core-utils-save-table"]], "mergernet.core.utils.serialize": [[37, "mergernet-core-utils-serialize"]], "mergernet.core.utils.unique_path": [[38, "mergernet-core-utils-unique-path"]], "mergernet.data": [[39, "module-mergernet.data"]], "mergernet.data.dataset": [[40, "module-mergernet.data.dataset"]], "Dataset": [[41, "dataset"]], "TFRDataset": [[42, "tfrdataset"]], "mergernet.data.dataset_config": [[43, "module-mergernet.data.dataset_config"]], "DatasetConfig": [[44, "datasetconfig"]], "DatasetRegistry": [[45, "datasetregistry"]], "GoogleDriveResource": [[46, "googledriveresource"]], "HTTPResource": [[47, "httpresource"]], "mergernet.data.image": [[48, "module-mergernet.data.image"]], "ChannelAverage": [[49, "channelaverage"]], "Crop": [[50, "crop"]], "ImagePipeline": [[51, "imagepipeline"]], "ImageTransform": [[52, "imagetransform"]], "LegacyRGB": [[53, "legacyrgb"]], "LuptonRGB": [[54, "luptonrgb"]], "TensorToImage": [[55, "tensortoimage"]], "TensorToShards": [[56, "tensortoshards"]], "mergernet.data.image.asinh_map": [[57, "mergernet-data-image-asinh-map"]], "mergernet.data.image.asinh_map2": [[58, "mergernet-data-image-asinh-map2"]], "mergernet.data.kfold": [[59, "module-mergernet.data.kfold"]], "DistributionKFold": [[60, "distributionkfold"]], "StratifiedDistributionKFold": [[61, "stratifieddistributionkfold"]], "mergernet.data.match": [[62, "module-mergernet.data.match"]], "CrossMatch": [[63, "crossmatch"]], "CrossMatchResult": [[64, "crossmatchresult"]], "XTable": [[65, "xtable"]], "mergernet.data.preprocessing": [[66, "module-mergernet.data.preprocessing"]], "mergernet.data.preprocessing.load_jpg": [[67, "mergernet-data-preprocessing-load-jpg"]], "mergernet.data.preprocessing.load_png": [[68, "mergernet-data-preprocessing-load-png"]], "mergernet.data.preprocessing.normalize_rgb": [[69, "mergernet-data-preprocessing-normalize-rgb"]], "mergernet.data.preprocessing.one_hot_factory": [[70, "mergernet-data-preprocessing-one-hot-factory"]], "mergernet.data.preprocessing.standardize_rgb": [[71, "mergernet-data-preprocessing-standardize-rgb"]], "mergernet.data.rgb": [[72, "module-mergernet.data.rgb"]], "RGB": [[73, "rgb"]], "mergernet.data.sanitization": [[74, "module-mergernet.data.sanitization"]], "DatasetSanitization": [[75, "datasetsanitization"]], "mergernet.data.trilogy": [[76, "module-mergernet.data.trilogy"]], "MakeImg": [[77, "makeimg"]], "mergernet.data.trilogy.RGB2im": [[78, "mergernet-data-trilogy-rgb2im"]], "mergernet.data.trilogy.adjust_saturation": [[79, "mergernet-data-trilogy-adjust-saturation"]], "mergernet.data.trilogy.da": [[80, "mergernet-data-trilogy-da"]], "mergernet.data.trilogy.get_clip": [[81, "mergernet-data-trilogy-get-clip"]], "mergernet.data.trilogy.get_levels": [[82, "mergernet-data-trilogy-get-levels"]], "mergernet.data.trilogy.imscale": [[83, "mergernet-data-trilogy-imscale"]], "mergernet.data.trilogy.meanstd": [[84, "mergernet-data-trilogy-meanstd"]], "mergernet.data.trilogy.rms": [[85, "mergernet-data-trilogy-rms"]], "mergernet.data.trilogy.satK2m": [[86, "mergernet-data-trilogy-satk2m"]], "mergernet.data.trilogy.setLevel": [[87, "mergernet-data-trilogy-setlevel"]], "mergernet.estimators": [[88, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[89, "module-mergernet.estimators.automl"]], "OptunaEstimator": [[90, "optunaestimator"]], "mergernet.estimators.base": [[91, "module-mergernet.estimators.base"]], "Estimator": [[92, "estimator"]], "EstimatorConfig": [[93, "estimatorconfig"]], "EstimatorRegistry": [[94, "estimatorregistry"]], "mergernet.estimators.decals": [[95, "module-mergernet.estimators.decals"]], "ZoobotEstimator": [[96, "zoobotestimator"]], "mergernet.estimators.parametric": [[97, "module-mergernet.estimators.parametric"]], "ParametricEstimator": [[98, "parametricestimator"]], "mergernet.jobs": [[99, "module-mergernet.jobs"]], "mergernet.jobs.j001": [[100, "module-mergernet.jobs.j001"]], "Job": [[101, "job"], [103, "job"], [105, "job"], [107, "job"], [109, "job"], [111, "job"], [113, "job"]], "mergernet.jobs.j002": [[102, "module-mergernet.jobs.j002"]], "mergernet.jobs.j009": [[104, "module-mergernet.jobs.j009"]], "mergernet.jobs.j010": [[106, "module-mergernet.jobs.j010"]], "mergernet.jobs.j023": [[108, "module-mergernet.jobs.j023"]], "mergernet.jobs.j026": [[110, "module-mergernet.jobs.j026"]], "mergernet.jobs.j027": [[112, "module-mergernet.jobs.j027"]], "mergernet.model": [[114, "module-mergernet.model"]], "mergernet.model.automl": [[115, "module-mergernet.model.automl"]], "mergernet.model.automl.optuna_train": [[116, "mergernet-model-automl-optuna-train"]], "mergernet.model.baseline": [[117, "module-mergernet.model.baseline"]], "mergernet.model.baseline.finetune_train": [[118, "mergernet-model-baseline-finetune-train"]], "mergernet.model.callbacks": [[119, "module-mergernet.model.callbacks"]], "DeltaStopping": [[120, "deltastopping"]], "MWandbCallback": [[121, "mwandbcallback"]], "MyWandbCallback": [[122, "mywandbcallback"]], "Examples": [[122, null], [150, null]], "PruneCallback": [[123, "prunecallback"]], "SaveBestTrialCallback": [[124, "savebesttrialcallback"]], "TFKerasPruningCallback": [[125, "tfkeraspruningcallback"]], "WandbGraphicsCallback": [[126, "wandbgraphicscallback"]], "mergernet.model.inference": [[127, "module-mergernet.model.inference"]], "Predictor": [[128, "predictor"]], "mergernet.model.utils": [[129, "module-mergernet.model.utils"]], "mergernet.model.utils.get_conv_arch": [[130, "mergernet-model-utils-get-conv-arch"]], "mergernet.model.utils.history_to_dataframe": [[131, "mergernet-model-utils-history-to-dataframe"]], "mergernet.model.utils.load_model": [[132, "mergernet-model-utils-load-model"]], "mergernet.model.utils.set_trainable_state": [[133, "mergernet-model-utils-set-trainable-state"]], "mergernet.model.utils.setup_seeds": [[134, "mergernet-model-utils-setup-seeds"]], "mergernet.services": [[135, "module-mergernet.services"]], "mergernet.services.github": [[136, "module-mergernet.services.github"]], "GithubService": [[137, "githubservice"]], "mergernet.services.google": [[138, "module-mergernet.services.google"]], "GDrive": [[139, "gdrive"]], "mergernet.services.imaging": [[140, "module-mergernet.services.imaging"]], "ImagingService": [[141, "imagingservice"]], "mergernet.services.legacy": [[142, "module-mergernet.services.legacy"]], "LegacyService": [[143, "legacyservice"]], "mergernet.services.sciserver": [[144, "module-mergernet.services.sciserver"]], "SciServer": [[145, "sciserver"]], "mergernet.services.sdss": [[146, "module-mergernet.services.sdss"]], "SloanService": [[147, "sloanservice"]], "mergernet.services.splus": [[148, "module-mergernet.services.splus"]], "Features": [[148, "features"]], "Authors": [[148, "authors"]], "ImageType": [[149, "imagetype"]], "SplusService": [[150, "splusservice"]], "mergernet.services.splus.update_authorization": [[151, "mergernet-services-splus-update-authorization"]], "mergernet.services.tap": [[152, "module-mergernet.services.tap"]], "TapService": [[153, "tapservice"]], "mergernet.services.tensorboard": [[154, "module-mergernet.services.tensorboard"]], "TensorboardService": [[155, "tensorboardservice"]], "mergernet.services.utils": [[156, "module-mergernet.services.utils"]], "mergernet.services.utils.append_query_params": [[157, "mergernet-services-utils-append-query-params"]], "mergernet.services.utils.batch_download_file": [[158, "mergernet-services-utils-batch-download-file"]], "mergernet.services.utils.download_file": [[159, "mergernet-services-utils-download-file"]], "mergernet.services.utils.parallel_function_executor": [[160, "mergernet-services-utils-parallel-function-executor"]], "mergernet.visualization": [[161, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[162, "module-mergernet.visualization.plot"]], "Serie": [[163, "serie"]], "mergernet.visualization.plot.color_color": [[164, "mergernet-visualization-plot-color-color"]], "mergernet.visualization.plot.conf_matrix": [[165, "mergernet-visualization-plot-conf-matrix"]], "mergernet.visualization.plot.data_distribution": [[166, "mergernet-visualization-plot-data-distribution"]], "mergernet.visualization.plot.mag_class_distribution": [[167, "mergernet-visualization-plot-mag-class-distribution"]], "mergernet.visualization.plot.object_position": [[168, "mergernet-visualization-plot-object-position"]], "mergernet.visualization.plot.roc": [[169, "mergernet-visualization-plot-roc"]], "Notes": [[169, null]], "mergernet.visualization.plot.train_metrics": [[170, "mergernet-visualization-plot-train-metrics"]], "Experiments": [[171, "experiments"]], "Welcome to mergernet\u2019s documentation!": [[172, "welcome-to-mergernet-s-documentation"]], "Contents:": [[172, null]], "Indices and tables": [[172, "indices-and-tables"]], "API Reference": [[173, "api-reference"]]}, "indexentries": {"mergernet.core": [[0, "module-mergernet.core"]], "module": [[0, "module-mergernet.core"], [1, "module-mergernet.core.constants"], [2, "module-mergernet.core.experiment"], [5, "module-mergernet.core.hp"], [13, "module-mergernet.core.logging"], [15, "module-mergernet.core.utils"], [39, "module-mergernet.data"], [40, "module-mergernet.data.dataset"], [43, "module-mergernet.data.dataset_config"], [48, "module-mergernet.data.image"], [59, "module-mergernet.data.kfold"], [62, "module-mergernet.data.match"], [66, "module-mergernet.data.preprocessing"], [72, "module-mergernet.data.rgb"], [74, "module-mergernet.data.sanitization"], [76, "module-mergernet.data.trilogy"], [88, "module-mergernet.estimators"], [89, "module-mergernet.estimators.automl"], [91, "module-mergernet.estimators.base"], [95, "module-mergernet.estimators.decals"], [97, "module-mergernet.estimators.parametric"], [99, "module-mergernet.jobs"], [100, "module-mergernet.jobs.j001"], [102, "module-mergernet.jobs.j002"], [104, "module-mergernet.jobs.j009"], [106, "module-mergernet.jobs.j010"], [108, "module-mergernet.jobs.j023"], [110, "module-mergernet.jobs.j026"], [112, "module-mergernet.jobs.j027"], [114, "module-mergernet.model"], [115, "module-mergernet.model.automl"], [117, "module-mergernet.model.baseline"], [119, "module-mergernet.model.callbacks"], [127, "module-mergernet.model.inference"], [129, "module-mergernet.model.utils"], [135, "module-mergernet.services"], [136, "module-mergernet.services.github"], [138, "module-mergernet.services.google"], [140, "module-mergernet.services.imaging"], [142, "module-mergernet.services.legacy"], [144, "module-mergernet.services.sciserver"], [146, "module-mergernet.services.sdss"], [148, "module-mergernet.services.splus"], [152, "module-mergernet.services.tap"], [154, "module-mergernet.services.tensorboard"], [156, "module-mergernet.services.utils"], [161, "module-mergernet.visualization"], [162, "module-mergernet.visualization.plot"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "experiment (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment"]], "experiment.tracker (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment.Tracker"]], "_downloaded_artifacts (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._downloaded_artifacts"]], "_exp_created (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._exp_created"]], "_post_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._post_run"]], "_pre_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._pre_run"]], "_registered_artifacts (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._setup_experiment_attributes"]], "autoclean() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.autoclean"]], "delete() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.delete"]], "download_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.download_file_gd"]], "exp_id (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_id"]], "exp_name (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_name"]], "finish_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.finish_wandb"]], "gd_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_exp_path"]], "gd_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_shared_path"]], "init_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.init_wandb"]], "local_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_exp_path"]], "local_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_shared_path"]], "notes (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.notes"]], "register_artifact() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.register_artifact"]], "run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment.run"]], "upload_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_file_gd"]], "upload_registered_artifacts() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_registered_artifacts"]], "backup_model() (in module mergernet.core.experiment)": [[4, "mergernet.core.experiment.backup_model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "categoricalhyperparameter (class in mergernet.core.hp)": [[6, "mergernet.core.hp.CategoricalHyperParameter"]], "clear_last_value() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.categoricalhyperparameter static method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.to_dict"]], "constanthyperparameter (class in mergernet.core.hp)": [[7, "mergernet.core.hp.ConstantHyperParameter"]], "clear_last_value() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.constanthyperparameter static method)": [[7, "mergernet.core.hp.ConstantHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.to_dict"]], "floathyperparameter (class in mergernet.core.hp)": [[8, "mergernet.core.hp.FloatHyperParameter"]], "clear_last_value() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.floathyperparameter static method)": [[8, "mergernet.core.hp.FloatHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.to_dict"]], "hp (class in mergernet.core.hp)": [[9, "mergernet.core.hp.HP"]], "cat() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.cat"]], "const() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.const"]], "num() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.num"]], "hyperparameter (class in mergernet.core.hp)": [[10, "mergernet.core.hp.HyperParameter"]], "clear_last_value() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.hyperparameter static method)": [[10, "mergernet.core.hp.HyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_trial"]], "suggest() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.suggest"]], "to_dict() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.to_dict"]], "hyperparameterset (class in mergernet.core.hp)": [[11, "mergernet.core.hp.HyperParameterSet"]], "add() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.add"]], "clear_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.clear_values_dict"]], "get() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.get"]], "set_trial() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.set_trial"]], "to_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.to_values_dict"]], "inthyperparameter (class in mergernet.core.hp)": [[12, "mergernet.core.hp.IntHyperParameter"]], "clear_last_value() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.inthyperparameter static method)": [[12, "mergernet.core.hp.IntHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.to_dict"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "configure_root_logger() (in module mergernet.core.logging)": [[14, "mergernet.core.logging.configure_root_logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "cacheddataframe (class in mergernet.core.utils)": [[16, "mergernet.core.utils.CachedDataFrame"]], "_cache (mergernet.core.utils.cacheddataframe attribute)": [[16, "mergernet.core.utils.CachedDataFrame._cache"]], "load() (mergernet.core.utils.cacheddataframe class method)": [[16, "mergernet.core.utils.CachedDataFrame.load"]], "singletonmeta (class in mergernet.core.utils)": [[17, "mergernet.core.utils.SingletonMeta"]], "__new__() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.__new__"]], "_instances (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._instances"]], "_lock (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._lock"]], "mro() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.mro"]], "timming (class in mergernet.core.utils)": [[18, "mergernet.core.utils.Timming"]], "_format_time() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming._format_time"]], "duration() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.duration"]], "end() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.end"]], "start() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.start"]], "array_fallback() (in module mergernet.core.utils)": [[19, "mergernet.core.utils.array_fallback"]], "__new__() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.__new__"]], "classproperty (class in mergernet.core.utils)": [[20, "mergernet.core.utils.classproperty"]], "deleter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.deleter"]], "fdel (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fdel"]], "fget (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fget"]], "fset (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fset"]], "getter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.getter"]], "setter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.setter"]], "compress_files() (in module mergernet.core.utils)": [[21, "mergernet.core.utils.compress_files"]], "compress_fits() (in module mergernet.core.utils)": [[22, "mergernet.core.utils.compress_fits"]], "deep_update() (in module mergernet.core.utils)": [[23, "mergernet.core.utils.deep_update"]], "execute_posix_command() (in module mergernet.core.utils)": [[24, "mergernet.core.utils.execute_posix_command"]], "extract_files() (in module mergernet.core.utils)": [[25, "mergernet.core.utils.extract_files"]], "extract_iauname_from_path() (in module mergernet.core.utils)": [[26, "mergernet.core.utils.extract_iauname_from_path"]], "find_by_value() (in module mergernet.core.utils)": [[27, "mergernet.core.utils.find_by_value"]], "heading() (in module mergernet.core.utils)": [[28, "mergernet.core.utils.heading"]], "iauname() (in module mergernet.core.utils)": [[29, "mergernet.core.utils.iauname"]], "iauname_path() (in module mergernet.core.utils)": [[30, "mergernet.core.utils.iauname_path"]], "install_linux_package() (in module mergernet.core.utils)": [[31, "mergernet.core.utils.install_linux_package"]], "load_image() (in module mergernet.core.utils)": [[32, "mergernet.core.utils.load_image"]], "load_table() (in module mergernet.core.utils)": [[33, "mergernet.core.utils.load_table"]], "not_in() (in module mergernet.core.utils)": [[34, "mergernet.core.utils.not_in"]], "save_image() (in module mergernet.core.utils)": [[35, "mergernet.core.utils.save_image"]], "save_table() (in module mergernet.core.utils)": [[36, "mergernet.core.utils.save_table"]], "serialize() (in module mergernet.core.utils)": [[37, "mergernet.core.utils.serialize"]], "unique_path() (in module mergernet.core.utils)": [[38, "mergernet.core.utils.unique_path"]], "mergernet.data": [[39, "module-mergernet.data"]], "mergernet.data.dataset": [[40, "module-mergernet.data.dataset"]], "dataset (class in mergernet.data.dataset)": [[41, "mergernet.data.dataset.Dataset"]], "_create_dataset_table() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset._create_dataset_table"]], "_discretize_label() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset._discretize_label"]], "_transform_images() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset._transform_images"]], "clear() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.clear"]], "compute_class_weight() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.compute_class_weight"]], "concat_fold_column() (mergernet.data.dataset.dataset static method)": [[41, "mergernet.data.dataset.Dataset.concat_fold_column"]], "download() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.download"]], "get_x() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.get_X"]], "get_x_by_fold() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.get_X_by_fold"]], "get_fold() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.get_fold"]], "get_images_paths() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.get_images_paths"]], "get_preds_dataset() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.get_preds_dataset"]], "get_table() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.get_table"]], "is_dataset_downloaded() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.is_dataset_downloaded"]], "prepare_data() (mergernet.data.dataset.dataset method)": [[41, "mergernet.data.dataset.Dataset.prepare_data"]], "registry (mergernet.data.dataset.dataset attribute)": [[41, "mergernet.data.dataset.Dataset.registry"]], "tfrdataset (class in mergernet.data.dataset)": [[42, "mergernet.data.dataset.TFRDataset"]], "_bytes_feature() (mergernet.data.dataset.tfrdataset method)": [[42, "mergernet.data.dataset.TFRDataset._bytes_feature"]], "_create_shard() (mergernet.data.dataset.tfrdataset method)": [[42, "mergernet.data.dataset.TFRDataset._create_shard"]], "_serialize_array() (mergernet.data.dataset.tfrdataset method)": [[42, "mergernet.data.dataset.TFRDataset._serialize_array"]], "create() (mergernet.data.dataset.tfrdataset method)": [[42, "mergernet.data.dataset.TFRDataset.create"]], "mergernet.data.dataset_config": [[43, "module-mergernet.data.dataset_config"]], "datasetconfig (class in mergernet.data.dataset_config)": [[44, "mergernet.data.dataset_config.DatasetConfig"]], "bin_legacy_north_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BIN_LEGACY_NORTH_RGB_128"]], "bin_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BIN_SDSS_128"]], "blind_splus_gal80_ls10_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_GAL80_LS10_RGB_128"]], "blind_splus_lupton_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_128"]], "blind_splus_lupton_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_150"]], "blind_splus_trilogy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_128"]], "blind_splus_trilogy_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_150"]], "darg_no_inspection (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DARG_NO_INSPECTION"]], "decals_0364_1m_part0 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART0"]], "decals_0364_1m_part1 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART1"]], "decals_0364_1m_part10 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART10"]], "decals_0364_1m_part11 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART11"]], "decals_0364_1m_part12 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART12"]], "decals_0364_1m_part2 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART2"]], "decals_0364_1m_part3 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART3"]], "decals_0364_1m_part4 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART4"]], "decals_0364_1m_part5 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART5"]], "decals_0364_1m_part6 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART6"]], "decals_0364_1m_part7 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART7"]], "decals_0364_1m_part8 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART8"]], "decals_0364_1m_part9 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.DECALS_0364_1M_PART9"]], "datasetregistry (class in mergernet.data.dataset_config)": [[45, "mergernet.data.dataset_config.DatasetRegistry"]], "ls10_train_224_png (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.LS10_TRAIN_224_PNG"]], "mesd_legacy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.MESD_LEGACY_128"]], "mesd_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[45, "mergernet.data.dataset_config.DatasetRegistry.MESD_SDSS_128"]], "gd_datasets_path (mergernet.data.dataset_config.googledriveresource attribute)": [[46, "mergernet.data.dataset_config.GoogleDriveResource.GD_DATASETS_PATH"]], "googledriveresource (class in mergernet.data.dataset_config)": [[46, "mergernet.data.dataset_config.GoogleDriveResource"]], "httpresource (class in mergernet.data.dataset_config)": [[47, "mergernet.data.dataset_config.HTTPResource"]], "mergernet.data.image": [[48, "module-mergernet.data.image"]], "channelaverage (class in mergernet.data.image)": [[49, "mergernet.data.image.ChannelAverage"]], "_abc_impl (mergernet.data.image.channelaverage attribute)": [[49, "mergernet.data.image.ChannelAverage._abc_impl"]], "batch_transform() (mergernet.data.image.channelaverage method)": [[49, "mergernet.data.image.ChannelAverage.batch_transform"]], "on_batch_end() (mergernet.data.image.channelaverage method)": [[49, "mergernet.data.image.ChannelAverage.on_batch_end"]], "transform() (mergernet.data.image.channelaverage method)": [[49, "mergernet.data.image.ChannelAverage.transform"]], "crop (class in mergernet.data.image)": [[50, "mergernet.data.image.Crop"]], "_abc_impl (mergernet.data.image.crop attribute)": [[50, "mergernet.data.image.Crop._abc_impl"]], "batch_transform() (mergernet.data.image.crop method)": [[50, "mergernet.data.image.Crop.batch_transform"]], "on_batch_end() (mergernet.data.image.crop method)": [[50, "mergernet.data.image.Crop.on_batch_end"]], "transform() (mergernet.data.image.crop method)": [[50, "mergernet.data.image.Crop.transform"]], "imagepipeline (class in mergernet.data.image)": [[51, "mergernet.data.image.ImagePipeline"]], "_abc_impl (mergernet.data.image.imagepipeline attribute)": [[51, "mergernet.data.image.ImagePipeline._abc_impl"]], "batch_transform() (mergernet.data.image.imagepipeline method)": [[51, "mergernet.data.image.ImagePipeline.batch_transform"]], "on_batch_end() (mergernet.data.image.imagepipeline method)": [[51, "mergernet.data.image.ImagePipeline.on_batch_end"]], "transform() (mergernet.data.image.imagepipeline method)": [[51, "mergernet.data.image.ImagePipeline.transform"]], "imagetransform (class in mergernet.data.image)": [[52, "mergernet.data.image.ImageTransform"]], "_abc_impl (mergernet.data.image.imagetransform attribute)": [[52, "mergernet.data.image.ImageTransform._abc_impl"]], "batch_transform() (mergernet.data.image.imagetransform method)": [[52, "mergernet.data.image.ImageTransform.batch_transform"]], "on_batch_end() (mergernet.data.image.imagetransform method)": [[52, "mergernet.data.image.ImageTransform.on_batch_end"]], "transform() (mergernet.data.image.imagetransform method)": [[52, "mergernet.data.image.ImageTransform.transform"]], "legacyrgb (class in mergernet.data.image)": [[53, "mergernet.data.image.LegacyRGB"]], "_abc_impl (mergernet.data.image.legacyrgb attribute)": [[53, "mergernet.data.image.LegacyRGB._abc_impl"]], "batch_transform() (mergernet.data.image.legacyrgb method)": [[53, "mergernet.data.image.LegacyRGB.batch_transform"]], "on_batch_end() (mergernet.data.image.legacyrgb method)": [[53, "mergernet.data.image.LegacyRGB.on_batch_end"]], "transform() (mergernet.data.image.legacyrgb method)": [[53, "mergernet.data.image.LegacyRGB.transform"]], "luptonrgb (class in mergernet.data.image)": [[54, "mergernet.data.image.LuptonRGB"]], "_abc_impl (mergernet.data.image.luptonrgb attribute)": [[54, "mergernet.data.image.LuptonRGB._abc_impl"]], "batch_transform() (mergernet.data.image.luptonrgb method)": [[54, "mergernet.data.image.LuptonRGB.batch_transform"]], "on_batch_end() (mergernet.data.image.luptonrgb method)": [[54, "mergernet.data.image.LuptonRGB.on_batch_end"]], "transform() (mergernet.data.image.luptonrgb method)": [[54, "mergernet.data.image.LuptonRGB.transform"]], "tensortoimage (class in mergernet.data.image)": [[55, "mergernet.data.image.TensorToImage"]], "_abc_impl (mergernet.data.image.tensortoimage attribute)": [[55, "mergernet.data.image.TensorToImage._abc_impl"]], "batch_transform() (mergernet.data.image.tensortoimage method)": [[55, "mergernet.data.image.TensorToImage.batch_transform"]], "on_batch_end() (mergernet.data.image.tensortoimage method)": [[55, "mergernet.data.image.TensorToImage.on_batch_end"]], "transform() (mergernet.data.image.tensortoimage method)": [[55, "mergernet.data.image.TensorToImage.transform"]], "tensortoshards (class in mergernet.data.image)": [[56, "mergernet.data.image.TensorToShards"]], "_abc_impl (mergernet.data.image.tensortoshards attribute)": [[56, "mergernet.data.image.TensorToShards._abc_impl"]], "_bytes_feature() (mergernet.data.image.tensortoshards method)": [[56, "mergernet.data.image.TensorToShards._bytes_feature"]], "_create_shard() (mergernet.data.image.tensortoshards method)": [[56, "mergernet.data.image.TensorToShards._create_shard"]], "_serialize_array() (mergernet.data.image.tensortoshards method)": [[56, "mergernet.data.image.TensorToShards._serialize_array"]], "batch_transform() (mergernet.data.image.tensortoshards method)": [[56, "mergernet.data.image.TensorToShards.batch_transform"]], "on_batch_end() (mergernet.data.image.tensortoshards method)": [[56, "mergernet.data.image.TensorToShards.on_batch_end"]], "transform() (mergernet.data.image.tensortoshards method)": [[56, "mergernet.data.image.TensorToShards.transform"]], "asinh_map() (in module mergernet.data.image)": [[57, "mergernet.data.image.asinh_map"]], "asinh_map2() (in module mergernet.data.image)": [[58, "mergernet.data.image.asinh_map2"]], "mergernet.data.kfold": [[59, "module-mergernet.data.kfold"]], "distributionkfold (class in mergernet.data.kfold)": [[60, "mergernet.data.kfold.DistributionKFold"]], "split() (mergernet.data.kfold.distributionkfold method)": [[60, "mergernet.data.kfold.DistributionKFold.split"]], "stratifieddistributionkfold (class in mergernet.data.kfold)": [[61, "mergernet.data.kfold.StratifiedDistributionKFold"]], "compute_max_bins() (mergernet.data.kfold.stratifieddistributionkfold static method)": [[61, "mergernet.data.kfold.StratifiedDistributionKFold.compute_max_bins"]], "split_all() (mergernet.data.kfold.stratifieddistributionkfold method)": [[61, "mergernet.data.kfold.StratifiedDistributionKFold.split_all"]], "split_ids() (mergernet.data.kfold.stratifieddistributionkfold method)": [[61, "mergernet.data.kfold.StratifiedDistributionKFold.split_ids"]], "mergernet.data.match": [[62, "module-mergernet.data.match"]], "crossmatch (class in mergernet.data.match)": [[63, "mergernet.data.match.CrossMatch"]], "crossmatch() (mergernet.data.match.crossmatch method)": [[63, "mergernet.data.match.CrossMatch.crossmatch"]], "pair_match() (mergernet.data.match.crossmatch method)": [[63, "mergernet.data.match.CrossMatch.pair_match"]], "unique() (mergernet.data.match.crossmatch method)": [[63, "mergernet.data.match.CrossMatch.unique"]], "crossmatchresult (class in mergernet.data.match)": [[64, "mergernet.data.match.CrossMatchResult"]], "distance (mergernet.data.match.crossmatchresult attribute)": [[64, "mergernet.data.match.CrossMatchResult.distance"]], "primary_idx (mergernet.data.match.crossmatchresult attribute)": [[64, "mergernet.data.match.CrossMatchResult.primary_idx"]], "secondary_idx (mergernet.data.match.crossmatchresult attribute)": [[64, "mergernet.data.match.CrossMatchResult.secondary_idx"]], "table (mergernet.data.match.crossmatchresult attribute)": [[64, "mergernet.data.match.CrossMatchResult.table"]], "xtable (class in mergernet.data.match)": [[65, "mergernet.data.match.XTable"]], "get_coords() (mergernet.data.match.xtable method)": [[65, "mergernet.data.match.XTable.get_coords"]], "to_df() (mergernet.data.match.xtable method)": [[65, "mergernet.data.match.XTable.to_df"]], "mergernet.data.preprocessing": [[66, "module-mergernet.data.preprocessing"]], "load_jpg() (in module mergernet.data.preprocessing)": [[67, "mergernet.data.preprocessing.load_jpg"]], "load_png() (in module mergernet.data.preprocessing)": [[68, "mergernet.data.preprocessing.load_png"]], "normalize_rgb() (in module mergernet.data.preprocessing)": [[69, "mergernet.data.preprocessing.normalize_rgb"]], "one_hot_factory() (in module mergernet.data.preprocessing)": [[70, "mergernet.data.preprocessing.one_hot_factory"]], "standardize_rgb() (in module mergernet.data.preprocessing)": [[71, "mergernet.data.preprocessing.standardize_rgb"]], "mergernet.data.rgb": [[72, "module-mergernet.data.rgb"]], "rgb (class in mergernet.data.rgb)": [[73, "mergernet.data.rgb.RGB"]], "make_trilogy_fits() (mergernet.data.rgb.rgb method)": [[73, "mergernet.data.rgb.RGB.make_trilogy_fits"]], "trilogy_fits_to_png() (mergernet.data.rgb.rgb method)": [[73, "mergernet.data.rgb.RGB.trilogy_fits_to_png"]], "mergernet.data.sanitization": [[74, "module-mergernet.data.sanitization"]], "datasetsanitization (class in mergernet.data.sanitization)": [[75, "mergernet.data.sanitization.DatasetSanitization"]], "check_images() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.check_images"]], "drop_images_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_filesize"]], "drop_images_by_iauname() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_iauname"]], "filesize_histogram() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.filesize_histogram"]], "get_filesize_distribution() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.get_filesize_distribution"]], "get_iauname_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.get_iauname_by_filesize"]], "sample() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.sample"]], "sanitize() (mergernet.data.sanitization.datasetsanitization method)": [[75, "mergernet.data.sanitization.DatasetSanitization.sanitize"]], "mergernet.data.trilogy": [[76, "module-mergernet.data.trilogy"]], "makeimg (class in mergernet.data.trilogy)": [[77, "mergernet.data.trilogy.MakeImg"]], "color() (mergernet.data.trilogy.makeimg method)": [[77, "mergernet.data.trilogy.MakeImg.color"]], "get_array() (mergernet.data.trilogy.makeimg method)": [[77, "mergernet.data.trilogy.MakeImg.get_array"]], "savefig() (mergernet.data.trilogy.makeimg method)": [[77, "mergernet.data.trilogy.MakeImg.savefig"]], "rgb2im() (in module mergernet.data.trilogy)": [[78, "mergernet.data.trilogy.RGB2im"]], "adjust_saturation() (in module mergernet.data.trilogy)": [[79, "mergernet.data.trilogy.adjust_saturation"]], "da() (in module mergernet.data.trilogy)": [[80, "mergernet.data.trilogy.da"]], "get_clip() (in module mergernet.data.trilogy)": [[81, "mergernet.data.trilogy.get_clip"]], "get_levels() (in module mergernet.data.trilogy)": [[82, "mergernet.data.trilogy.get_levels"]], "imscale() (in module mergernet.data.trilogy)": [[83, "mergernet.data.trilogy.imscale"]], "meanstd() (in module mergernet.data.trilogy)": [[84, "mergernet.data.trilogy.meanstd"]], "rms() (in module mergernet.data.trilogy)": [[85, "mergernet.data.trilogy.rms"]], "satk2m() (in module mergernet.data.trilogy)": [[86, "mergernet.data.trilogy.satK2m"]], "setlevel() (in module mergernet.data.trilogy)": [[87, "mergernet.data.trilogy.setLevel"]], "mergernet.estimators": [[88, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[89, "module-mergernet.estimators.automl"]], "optunaestimator (class in mergernet.estimators.automl)": [[90, "mergernet.estimators.automl.OptunaEstimator"]], "_abc_impl (mergernet.estimators.automl.optunaestimator attribute)": [[90, "mergernet.estimators.automl.OptunaEstimator._abc_impl"]], "_objective() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator._objective"]], "_save_optuna_db() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator._save_optuna_db"]], "build() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.build"]], "compile_model() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.compile_model"]], "download() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.download"]], "get_conv_arch() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.get_dataaug_block"]], "get_metric() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.get_metric"]], "get_optimizer() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.get_optimizer"]], "get_scheduler() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.get_scheduler"]], "plot() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.plot"]], "predict() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.predict"]], "registry (mergernet.estimators.automl.optunaestimator attribute)": [[90, "mergernet.estimators.automl.OptunaEstimator.registry"]], "set_trainable() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.set_trainable"]], "tf_model (mergernet.estimators.automl.optunaestimator property)": [[90, "mergernet.estimators.automl.OptunaEstimator.tf_model"]], "train() (mergernet.estimators.automl.optunaestimator method)": [[90, "mergernet.estimators.automl.OptunaEstimator.train"]], "mergernet.estimators.base": [[91, "module-mergernet.estimators.base"]], "estimator (class in mergernet.estimators.base)": [[92, "mergernet.estimators.base.Estimator"]], "_abc_impl (mergernet.estimators.base.estimator attribute)": [[92, "mergernet.estimators.base.Estimator._abc_impl"]], "build() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.build"]], "compile_model() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.compile_model"]], "download() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.download"]], "get_conv_arch() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.get_dataaug_block"]], "get_metric() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.get_metric"]], "get_optimizer() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.get_optimizer"]], "get_scheduler() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.get_scheduler"]], "plot() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.plot"]], "predict() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.predict"]], "registry (mergernet.estimators.base.estimator attribute)": [[92, "mergernet.estimators.base.Estimator.registry"]], "set_trainable() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.set_trainable"]], "tf_model (mergernet.estimators.base.estimator property)": [[92, "mergernet.estimators.base.Estimator.tf_model"]], "train() (mergernet.estimators.base.estimator method)": [[92, "mergernet.estimators.base.Estimator.train"]], "estimatorconfig (class in mergernet.estimators.base)": [[93, "mergernet.estimators.base.EstimatorConfig"]], "estimatorregistry (class in mergernet.estimators.base)": [[94, "mergernet.estimators.base.EstimatorRegistry"]], "zoobot_greyscale (mergernet.estimators.base.estimatorregistry attribute)": [[94, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_GREYSCALE"]], "zoobot_rgb (mergernet.estimators.base.estimatorregistry attribute)": [[94, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_RGB"]], "mergernet.estimators.decals": [[95, "module-mergernet.estimators.decals"]], "zoobotestimator (class in mergernet.estimators.decals)": [[96, "mergernet.estimators.decals.ZoobotEstimator"]], "_abc_impl (mergernet.estimators.decals.zoobotestimator attribute)": [[96, "mergernet.estimators.decals.ZoobotEstimator._abc_impl"]], "_prepare_dataset() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator._prepare_dataset"]], "build() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.build"]], "cnn_representations() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.cnn_representations"]], "compile_model() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.compile_model"]], "download() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.download"]], "get_conv_arch() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.get_dataaug_block"]], "get_metric() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.get_metric"]], "get_optimizer() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.get_optimizer"]], "get_scheduler() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.get_scheduler"]], "pca() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.pca"]], "plot() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.plot"]], "predict() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.predict"]], "registry (mergernet.estimators.decals.zoobotestimator attribute)": [[96, "mergernet.estimators.decals.ZoobotEstimator.registry"]], "set_trainable() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.set_trainable"]], "tf_model (mergernet.estimators.decals.zoobotestimator property)": [[96, "mergernet.estimators.decals.ZoobotEstimator.tf_model"]], "train() (mergernet.estimators.decals.zoobotestimator method)": [[96, "mergernet.estimators.decals.ZoobotEstimator.train"]], "mergernet.estimators.parametric": [[97, "module-mergernet.estimators.parametric"]], "parametricestimator (class in mergernet.estimators.parametric)": [[98, "mergernet.estimators.parametric.ParametricEstimator"]], "_abc_impl (mergernet.estimators.parametric.parametricestimator attribute)": [[98, "mergernet.estimators.parametric.ParametricEstimator._abc_impl"]], "build() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.build"]], "compile_model() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.compile_model"]], "download() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.download"]], "get_conv_arch() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.get_dataaug_block"]], "get_metric() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.get_metric"]], "get_optimizer() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.get_optimizer"]], "get_scheduler() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.get_scheduler"]], "plot() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.plot"]], "predict() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.predict"]], "registry (mergernet.estimators.parametric.parametricestimator attribute)": [[98, "mergernet.estimators.parametric.ParametricEstimator.registry"]], "set_trainable() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.set_trainable"]], "tf_model (mergernet.estimators.parametric.parametricestimator property)": [[98, "mergernet.estimators.parametric.ParametricEstimator.tf_model"]], "train() (mergernet.estimators.parametric.parametricestimator method)": [[98, "mergernet.estimators.parametric.ParametricEstimator.train"]], "mergernet.jobs": [[99, "module-mergernet.jobs"]], "mergernet.jobs.j001": [[100, "module-mergernet.jobs.j001"]], "job (class in mergernet.jobs.j001)": [[101, "mergernet.jobs.j001.Job"]], "job.tracker (class in mergernet.jobs.j001)": [[101, "mergernet.jobs.j001.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job._exp_created"]], "_post_run() (mergernet.jobs.j001.job method)": [[101, "mergernet.jobs.j001.Job._post_run"]], "_pre_run() (mergernet.jobs.j001.job method)": [[101, "mergernet.jobs.j001.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j001.job method)": [[101, "mergernet.jobs.j001.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.autoclean"]], "call() (mergernet.jobs.j001.job method)": [[101, "mergernet.jobs.j001.Job.call"]], "delete() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.delete"]], "download_file_gd() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.download_file_gd"]], "exp_id (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.exp_id"]], "exp_name (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.local_shared_path"]], "notes (mergernet.jobs.j001.job attribute)": [[101, "mergernet.jobs.j001.Job.notes"]], "register_artifact() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.register_artifact"]], "run() (mergernet.jobs.j001.job method)": [[101, "mergernet.jobs.j001.Job.run"]], "upload_file_gd() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j001.job class method)": [[101, "mergernet.jobs.j001.Job.upload_registered_artifacts"]], "mergernet.jobs.j002": [[102, "module-mergernet.jobs.j002"]], "job (class in mergernet.jobs.j002)": [[103, "mergernet.jobs.j002.Job"]], "job.tracker (class in mergernet.jobs.j002)": [[103, "mergernet.jobs.j002.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job._exp_created"]], "_post_run() (mergernet.jobs.j002.job method)": [[103, "mergernet.jobs.j002.Job._post_run"]], "_pre_run() (mergernet.jobs.j002.job method)": [[103, "mergernet.jobs.j002.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j002.job method)": [[103, "mergernet.jobs.j002.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.autoclean"]], "call() (mergernet.jobs.j002.job method)": [[103, "mergernet.jobs.j002.Job.call"]], "delete() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.delete"]], "download_file_gd() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.download_file_gd"]], "exp_id (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.exp_id"]], "exp_name (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.local_shared_path"]], "notes (mergernet.jobs.j002.job attribute)": [[103, "mergernet.jobs.j002.Job.notes"]], "register_artifact() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.register_artifact"]], "run() (mergernet.jobs.j002.job method)": [[103, "mergernet.jobs.j002.Job.run"]], "upload_file_gd() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j002.job class method)": [[103, "mergernet.jobs.j002.Job.upload_registered_artifacts"]], "mergernet.jobs.j009": [[104, "module-mergernet.jobs.j009"]], "job (class in mergernet.jobs.j009)": [[105, "mergernet.jobs.j009.Job"]], "job.tracker (class in mergernet.jobs.j009)": [[105, "mergernet.jobs.j009.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job._exp_created"]], "_post_run() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job._post_run"]], "_pre_run() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.autoclean"]], "call() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job.call"]], "delete() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.delete"]], "download_file_gd() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.download_file_gd"]], "exp_id (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.exp_id"]], "exp_name (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.local_shared_path"]], "notes (mergernet.jobs.j009.job attribute)": [[105, "mergernet.jobs.j009.Job.notes"]], "register_artifact() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.register_artifact"]], "run() (mergernet.jobs.j009.job method)": [[105, "mergernet.jobs.j009.Job.run"]], "upload_file_gd() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j009.job class method)": [[105, "mergernet.jobs.j009.Job.upload_registered_artifacts"]], "mergernet.jobs.j010": [[106, "module-mergernet.jobs.j010"]], "job (class in mergernet.jobs.j010)": [[107, "mergernet.jobs.j010.Job"]], "job.tracker (class in mergernet.jobs.j010)": [[107, "mergernet.jobs.j010.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job._exp_created"]], "_post_run() (mergernet.jobs.j010.job method)": [[107, "mergernet.jobs.j010.Job._post_run"]], "_pre_run() (mergernet.jobs.j010.job method)": [[107, "mergernet.jobs.j010.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j010.job method)": [[107, "mergernet.jobs.j010.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.autoclean"]], "call() (mergernet.jobs.j010.job method)": [[107, "mergernet.jobs.j010.Job.call"]], "delete() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.delete"]], "download_file_gd() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.download_file_gd"]], "exp_id (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.exp_id"]], "exp_name (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.local_shared_path"]], "notes (mergernet.jobs.j010.job attribute)": [[107, "mergernet.jobs.j010.Job.notes"]], "register_artifact() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.register_artifact"]], "run() (mergernet.jobs.j010.job method)": [[107, "mergernet.jobs.j010.Job.run"]], "upload_file_gd() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j010.job class method)": [[107, "mergernet.jobs.j010.Job.upload_registered_artifacts"]], "mergernet.jobs.j023": [[108, "module-mergernet.jobs.j023"]], "job (class in mergernet.jobs.j023)": [[109, "mergernet.jobs.j023.Job"]], "job.tracker (class in mergernet.jobs.j023)": [[109, "mergernet.jobs.j023.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job._exp_created"]], "_post_run() (mergernet.jobs.j023.job method)": [[109, "mergernet.jobs.j023.Job._post_run"]], "_pre_run() (mergernet.jobs.j023.job method)": [[109, "mergernet.jobs.j023.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j023.job method)": [[109, "mergernet.jobs.j023.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.autoclean"]], "call() (mergernet.jobs.j023.job method)": [[109, "mergernet.jobs.j023.Job.call"]], "delete() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.delete"]], "download_file_gd() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.download_file_gd"]], "exp_id (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.exp_id"]], "exp_name (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.local_shared_path"]], "notes (mergernet.jobs.j023.job attribute)": [[109, "mergernet.jobs.j023.Job.notes"]], "register_artifact() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.register_artifact"]], "run() (mergernet.jobs.j023.job method)": [[109, "mergernet.jobs.j023.Job.run"]], "upload_file_gd() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j023.job class method)": [[109, "mergernet.jobs.j023.Job.upload_registered_artifacts"]], "mergernet.jobs.j026": [[110, "module-mergernet.jobs.j026"]], "job (class in mergernet.jobs.j026)": [[111, "mergernet.jobs.j026.Job"]], "job.tracker (class in mergernet.jobs.j026)": [[111, "mergernet.jobs.j026.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job._exp_created"]], "_post_run() (mergernet.jobs.j026.job method)": [[111, "mergernet.jobs.j026.Job._post_run"]], "_pre_run() (mergernet.jobs.j026.job method)": [[111, "mergernet.jobs.j026.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j026.job method)": [[111, "mergernet.jobs.j026.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.autoclean"]], "call() (mergernet.jobs.j026.job method)": [[111, "mergernet.jobs.j026.Job.call"]], "delete() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.delete"]], "download_file_gd() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.download_file_gd"]], "exp_id (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.exp_id"]], "exp_name (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.local_shared_path"]], "notes (mergernet.jobs.j026.job attribute)": [[111, "mergernet.jobs.j026.Job.notes"]], "register_artifact() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.register_artifact"]], "run() (mergernet.jobs.j026.job method)": [[111, "mergernet.jobs.j026.Job.run"]], "upload_file_gd() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j026.job class method)": [[111, "mergernet.jobs.j026.Job.upload_registered_artifacts"]], "mergernet.jobs.j027": [[112, "module-mergernet.jobs.j027"]], "job (class in mergernet.jobs.j027)": [[113, "mergernet.jobs.j027.Job"]], "job.tracker (class in mergernet.jobs.j027)": [[113, "mergernet.jobs.j027.Job.Tracker"]], "_downloaded_artifacts (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job._downloaded_artifacts"]], "_exp_created (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job._exp_created"]], "_post_run() (mergernet.jobs.j027.job method)": [[113, "mergernet.jobs.j027.Job._post_run"]], "_pre_run() (mergernet.jobs.j027.job method)": [[113, "mergernet.jobs.j027.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j027.job method)": [[113, "mergernet.jobs.j027.Job._setup_experiment_attributes"]], "autoclean() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.autoclean"]], "call() (mergernet.jobs.j027.job method)": [[113, "mergernet.jobs.j027.Job.call"]], "delete() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.delete"]], "download_file_gd() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.download_file_gd"]], "exp_id (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.exp_id"]], "exp_name (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.local_shared_path"]], "notes (mergernet.jobs.j027.job attribute)": [[113, "mergernet.jobs.j027.Job.notes"]], "register_artifact() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.register_artifact"]], "run() (mergernet.jobs.j027.job method)": [[113, "mergernet.jobs.j027.Job.run"]], "upload_file_gd() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j027.job class method)": [[113, "mergernet.jobs.j027.Job.upload_registered_artifacts"]], "mergernet.model": [[114, "module-mergernet.model"]], "mergernet.model.automl": [[115, "module-mergernet.model.automl"]], "optuna_train() (in module mergernet.model.automl)": [[116, "mergernet.model.automl.optuna_train"]], "mergernet.model.baseline": [[117, "module-mergernet.model.baseline"]], "finetune_train() (in module mergernet.model.baseline)": [[118, "mergernet.model.baseline.finetune_train"]], "mergernet.model.callbacks": [[119, "module-mergernet.model.callbacks"]], "deltastopping (class in mergernet.model.callbacks)": [[120, "mergernet.model.callbacks.DeltaStopping"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.deltastopping attribute)": [[120, "mergernet.model.callbacks.DeltaStopping._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.deltastopping attribute)": [[120, "mergernet.model.callbacks.DeltaStopping._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.on_train_end"]], "set_model() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.set_model"]], "set_params() (mergernet.model.callbacks.deltastopping method)": [[120, "mergernet.model.callbacks.DeltaStopping.set_params"]], "mwandbcallback (class in mergernet.model.callbacks)": [[121, "mergernet.model.callbacks.MWandbCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mwandbcallback attribute)": [[121, "mergernet.model.callbacks.MWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mwandbcallback attribute)": [[121, "mergernet.model.callbacks.MWandbCallback._keras_api_names_v1"]], "get_flops() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mwandbcallback method)": [[121, "mergernet.model.callbacks.MWandbCallback.set_params"]], "mywandbcallback (class in mergernet.model.callbacks)": [[122, "mergernet.model.callbacks.MyWandbCallback"]], "_attempt_evaluation_log() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._attempt_evaluation_log"]], "_build_grad_accumulator_model() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._build_grad_accumulator_model"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mywandbcallback attribute)": [[122, "mergernet.model.callbacks.MyWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mywandbcallback attribute)": [[122, "mergernet.model.callbacks.MyWandbCallback._keras_api_names_v1"]], "_log_dataframe() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._log_dataframe"]], "_log_gradients() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._log_gradients"]], "_log_images() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._log_images"]], "_log_weights() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._log_weights"]], "_logits_to_captions() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._logits_to_captions"]], "_masks_to_pixels() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._masks_to_pixels"]], "_save_model() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._save_model"]], "_save_model_as_artifact() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback._save_model_as_artifact"]], "get_flops() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mywandbcallback method)": [[122, "mergernet.model.callbacks.MyWandbCallback.set_params"]], "prunecallback (class in mergernet.model.callbacks)": [[123, "mergernet.model.callbacks.PruneCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.prunecallback attribute)": [[123, "mergernet.model.callbacks.PruneCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.prunecallback attribute)": [[123, "mergernet.model.callbacks.PruneCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.set_model"]], "set_params() (mergernet.model.callbacks.prunecallback method)": [[123, "mergernet.model.callbacks.PruneCallback.set_params"]], "savebesttrialcallback (class in mergernet.model.callbacks)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.savebesttrialcallback attribute)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.savebesttrialcallback attribute)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.set_model"]], "set_params() (mergernet.model.callbacks.savebesttrialcallback method)": [[124, "mergernet.model.callbacks.SaveBestTrialCallback.set_params"]], "tfkeraspruningcallback (class in mergernet.model.callbacks)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.tfkeraspruningcallback attribute)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.tfkeraspruningcallback attribute)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.set_model"]], "set_params() (mergernet.model.callbacks.tfkeraspruningcallback method)": [[125, "mergernet.model.callbacks.TFKerasPruningCallback.set_params"]], "wandbgraphicscallback (class in mergernet.model.callbacks)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.wandbgraphicscallback attribute)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.wandbgraphicscallback attribute)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.set_model"]], "set_params() (mergernet.model.callbacks.wandbgraphicscallback method)": [[126, "mergernet.model.callbacks.WandbGraphicsCallback.set_params"]], "mergernet.model.inference": [[127, "module-mergernet.model.inference"]], "predictor (class in mergernet.model.inference)": [[128, "mergernet.model.inference.Predictor"]], "predict() (mergernet.model.inference.predictor method)": [[128, "mergernet.model.inference.Predictor.predict"]], "upload() (mergernet.model.inference.predictor method)": [[128, "mergernet.model.inference.Predictor.upload"]], "mergernet.model.utils": [[129, "module-mergernet.model.utils"]], "get_conv_arch() (in module mergernet.model.utils)": [[130, "mergernet.model.utils.get_conv_arch"]], "history_to_dataframe() (in module mergernet.model.utils)": [[131, "mergernet.model.utils.history_to_dataframe"]], "load_model() (in module mergernet.model.utils)": [[132, "mergernet.model.utils.load_model"]], "set_trainable_state() (in module mergernet.model.utils)": [[133, "mergernet.model.utils.set_trainable_state"]], "setup_seeds() (in module mergernet.model.utils)": [[134, "mergernet.model.utils.setup_seeds"]], "mergernet.services": [[135, "module-mergernet.services"]], "mergernet.services.github": [[136, "module-mergernet.services.github"]], "githubservice (class in mergernet.services.github)": [[137, "mergernet.services.github.GithubService"]], "_encode_content() (mergernet.services.github.githubservice method)": [[137, "mergernet.services.github.GithubService._encode_content"]], "_get_url() (mergernet.services.github.githubservice method)": [[137, "mergernet.services.github.GithubService._get_url"]], "commit() (mergernet.services.github.githubservice method)": [[137, "mergernet.services.github.GithubService.commit"]], "download() (mergernet.services.github.githubservice method)": [[137, "mergernet.services.github.GithubService.download"]], "get_lastest_job_run() (mergernet.services.github.githubservice method)": [[137, "mergernet.services.github.GithubService.get_lastest_job_run"]], "list_dir() (mergernet.services.github.githubservice method)": [[137, "mergernet.services.github.GithubService.list_dir"]], "mergernet.services.google": [[138, "module-mergernet.services.google"]], "gdrive (class in mergernet.services.google)": [[139, "mergernet.services.google.GDrive"]], "base_path (mergernet.services.google.gdrive attribute)": [[139, "mergernet.services.google.GDrive.base_path"]], "exists() (mergernet.services.google.gdrive method)": [[139, "mergernet.services.google.GDrive.exists"]], "get() (mergernet.services.google.gdrive method)": [[139, "mergernet.services.google.GDrive.get"]], "get_url() (mergernet.services.google.gdrive static method)": [[139, "mergernet.services.google.GDrive.get_url"]], "is_mounted() (mergernet.services.google.gdrive method)": [[139, "mergernet.services.google.GDrive.is_mounted"]], "move() (mergernet.services.google.gdrive method)": [[139, "mergernet.services.google.GDrive.move"]], "send() (mergernet.services.google.gdrive method)": [[139, "mergernet.services.google.GDrive.send"]], "send_dir() (mergernet.services.google.gdrive method)": [[139, "mergernet.services.google.GDrive.send_dir"]], "mergernet.services.imaging": [[140, "module-mergernet.services.imaging"]], "imagingservice (class in mergernet.services.imaging)": [[141, "mergernet.services.imaging.ImagingService"]], "_abc_impl (mergernet.services.imaging.imagingservice attribute)": [[141, "mergernet.services.imaging.ImagingService._abc_impl"]], "_batch_download_rgb() (mergernet.services.imaging.imagingservice method)": [[141, "mergernet.services.imaging.ImagingService._batch_download_rgb"]], "_download_rgb() (mergernet.services.imaging.imagingservice method)": [[141, "mergernet.services.imaging.ImagingService._download_rgb"]], "batch_cutout() (mergernet.services.imaging.imagingservice method)": [[141, "mergernet.services.imaging.ImagingService.batch_cutout"]], "cutout() (mergernet.services.imaging.imagingservice method)": [[141, "mergernet.services.imaging.ImagingService.cutout"]], "mergernet.services.legacy": [[142, "module-mergernet.services.legacy"]], "legacyservice (class in mergernet.services.legacy)": [[143, "mergernet.services.legacy.LegacyService"]], "_abc_impl (mergernet.services.legacy.legacyservice attribute)": [[143, "mergernet.services.legacy.LegacyService._abc_impl"]], "_batch_download_rgb() (mergernet.services.legacy.legacyservice method)": [[143, "mergernet.services.legacy.LegacyService._batch_download_rgb"]], "_download_rgb() (mergernet.services.legacy.legacyservice method)": [[143, "mergernet.services.legacy.LegacyService._download_rgb"]], "batch_cutout() (mergernet.services.legacy.legacyservice method)": [[143, "mergernet.services.legacy.LegacyService.batch_cutout"]], "cutout() (mergernet.services.legacy.legacyservice method)": [[143, "mergernet.services.legacy.LegacyService.cutout"]], "mergernet.services.sciserver": [[144, "module-mergernet.services.sciserver"]], "sciserver (class in mergernet.services.sciserver)": [[145, "mergernet.services.sciserver.SciServer"]], "get_url() (mergernet.services.sciserver.sciserver static method)": [[145, "mergernet.services.sciserver.SciServer.get_url"]], "mergernet.services.sdss": [[146, "module-mergernet.services.sdss"]], "sloanservice (class in mergernet.services.sdss)": [[147, "mergernet.services.sdss.SloanService"]], "batch_download_fits() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.batch_download_fits"]], "batch_download_rgb() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.batch_download_rgb"]], "crossmatch() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.crossmatch"]], "cutout() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.cutout"]], "download_fits() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.download_fits"]], "download_rgb() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.download_rgb"]], "get_image_filename() (mergernet.services.sdss.sloanservice method)": [[147, "mergernet.services.sdss.SloanService.get_image_filename"]], "mergernet.services.splus": [[148, "module-mergernet.services.splus"]], "imagetype (class in mergernet.services.splus)": [[149, "mergernet.services.splus.ImageType"]], "fits (mergernet.services.splus.imagetype attribute)": [[149, "mergernet.services.splus.ImageType.fits"]], "lupton (mergernet.services.splus.imagetype attribute)": [[149, "mergernet.services.splus.ImageType.lupton"]], "trilogy (mergernet.services.splus.imagetype attribute)": [[149, "mergernet.services.splus.ImageType.trilogy"]], "splusservice (class in mergernet.services.splus)": [[150, "mergernet.services.splus.SplusService"]], "_batch_download() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService._batch_download"]], "_download_image() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService._download_image"]], "_get_url() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService._get_url"]], "_lock (mergernet.services.splus.splusservice attribute)": [[150, "mergernet.services.splus.SplusService._lock"]], "_track_tap_job() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService._track_tap_job"]], "batch_image_download() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.batch_image_download"]], "batch_query() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.batch_query"]], "download_fits() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.download_fits"]], "download_lupton_rgb() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.download_lupton_rgb"]], "download_trilogy_rgb() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.download_trilogy_rgb"]], "query() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.query"]], "update_token() (mergernet.services.splus.splusservice method)": [[150, "mergernet.services.splus.SplusService.update_token"]], "update_authorization() (in module mergernet.services.splus)": [[151, "mergernet.services.splus.update_authorization"]], "mergernet.services.tap": [[152, "module-mergernet.services.tap"]], "tapservice (class in mergernet.services.tap)": [[153, "mergernet.services.tap.TapService"]], "batch_sync_query() (mergernet.services.tap.tapservice method)": [[153, "mergernet.services.tap.TapService.batch_sync_query"]], "sync_query() (mergernet.services.tap.tapservice method)": [[153, "mergernet.services.tap.TapService.sync_query"]], "mergernet.services.tensorboard": [[154, "module-mergernet.services.tensorboard"]], "tensorboardservice (class in mergernet.services.tensorboard)": [[155, "mergernet.services.tensorboard.TensorboardService"]], "upload_assets() (mergernet.services.tensorboard.tensorboardservice method)": [[155, "mergernet.services.tensorboard.TensorboardService.upload_assets"]], "mergernet.services.utils": [[156, "module-mergernet.services.utils"]], "append_query_params() (in module mergernet.services.utils)": [[157, "mergernet.services.utils.append_query_params"]], "batch_download_file() (in module mergernet.services.utils)": [[158, "mergernet.services.utils.batch_download_file"]], "download_file() (in module mergernet.services.utils)": [[159, "mergernet.services.utils.download_file"]], "parallel_function_executor() (in module mergernet.services.utils)": [[160, "mergernet.services.utils.parallel_function_executor"]], "mergernet.visualization": [[161, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[162, "module-mergernet.visualization.plot"]], "serie (class in mergernet.visualization.plot)": [[163, "mergernet.visualization.plot.Serie"]], "get_serie() (mergernet.visualization.plot.serie method)": [[163, "mergernet.visualization.plot.Serie.get_serie"]], "get_std() (mergernet.visualization.plot.serie method)": [[163, "mergernet.visualization.plot.Serie.get_std"]], "has_std() (mergernet.visualization.plot.serie method)": [[163, "mergernet.visualization.plot.Serie.has_std"]], "color_color() (in module mergernet.visualization.plot)": [[164, "mergernet.visualization.plot.color_color"]], "conf_matrix() (in module mergernet.visualization.plot)": [[165, "mergernet.visualization.plot.conf_matrix"]], "data_distribution() (in module mergernet.visualization.plot)": [[166, "mergernet.visualization.plot.data_distribution"]], "mag_class_distribution() (in module mergernet.visualization.plot)": [[167, "mergernet.visualization.plot.mag_class_distribution"]], "object_position() (in module mergernet.visualization.plot)": [[168, "mergernet.visualization.plot.object_position"]], "roc() (in module mergernet.visualization.plot)": [[169, "mergernet.visualization.plot.roc"]], "train_metrics() (in module mergernet.visualization.plot)": [[170, "mergernet.visualization.plot.train_metrics"]]}})