Search.setIndex({"docnames": ["api/mergernet.core", "api/mergernet.core.constants", "api/mergernet.core.experiment", "api/mergernet.core.experiment.Experiment", "api/mergernet.core.experiment.backup_model", "api/mergernet.core.hp", "api/mergernet.core.hp.CategoricalHyperParameter", "api/mergernet.core.hp.ConstantHyperParameter", "api/mergernet.core.hp.FloatHyperParameter", "api/mergernet.core.hp.HP", "api/mergernet.core.hp.HyperParameter", "api/mergernet.core.hp.HyperParameterSet", "api/mergernet.core.hp.IntHyperParameter", "api/mergernet.core.logging", "api/mergernet.core.logging.configure_root_logger", "api/mergernet.core.utils", "api/mergernet.core.utils.CachedDataFrame", "api/mergernet.core.utils.SingletonMeta", "api/mergernet.core.utils.Timming", "api/mergernet.core.utils.array_fallback", "api/mergernet.core.utils.classproperty", "api/mergernet.core.utils.deep_update", "api/mergernet.core.utils.find_by_value", "api/mergernet.core.utils.heading", "api/mergernet.core.utils.iauname", "api/mergernet.core.utils.load_image", "api/mergernet.core.utils.load_table", "api/mergernet.core.utils.not_in", "api/mergernet.core.utils.save_table", "api/mergernet.core.utils.serialize", "api/mergernet.core.utils.unique_path", "api/mergernet.data", "api/mergernet.data.dataset", "api/mergernet.data.dataset.Dataset", "api/mergernet.data.dataset_config", "api/mergernet.data.dataset_config.DatasetConfig", "api/mergernet.data.dataset_config.DatasetRegistry", "api/mergernet.data.image", "api/mergernet.data.image.ColorImage", "api/mergernet.data.kfold", "api/mergernet.data.kfold.DistributionKFold", "api/mergernet.data.kfold.StratifiedDistributionKFold", "api/mergernet.data.match", "api/mergernet.data.match.CrossMatch", "api/mergernet.data.match.CrossMatchResult", "api/mergernet.data.match.XTable", "api/mergernet.data.preprocessing", "api/mergernet.data.preprocessing.load_jpg", "api/mergernet.data.preprocessing.load_png", "api/mergernet.data.preprocessing.normalize_rgb", "api/mergernet.data.preprocessing.one_hot_factory", "api/mergernet.data.preprocessing.standardize_rgb", "api/mergernet.data.rgb", "api/mergernet.data.rgb.RGB", "api/mergernet.data.sanitization", "api/mergernet.data.sanitization.DatasetSanitization", "api/mergernet.data.trilogy", "api/mergernet.data.trilogy.MakeImg", "api/mergernet.data.trilogy.RGB2im", "api/mergernet.data.trilogy.adjust_saturation", "api/mergernet.data.trilogy.da", "api/mergernet.data.trilogy.get_clip", "api/mergernet.data.trilogy.get_levels", "api/mergernet.data.trilogy.imscale", "api/mergernet.data.trilogy.meanstd", "api/mergernet.data.trilogy.rms", "api/mergernet.data.trilogy.satK2m", "api/mergernet.data.trilogy.setLevel", "api/mergernet.estimators", "api/mergernet.estimators.automl", "api/mergernet.estimators.automl.OptunaEstimator", "api/mergernet.estimators.base", "api/mergernet.estimators.base.Estimator", "api/mergernet.estimators.base.EstimatorConfig", "api/mergernet.estimators.base.EstimatorRegistry", "api/mergernet.estimators.decals", "api/mergernet.estimators.decals.ZoobotEstimator", "api/mergernet.estimators.parametric", "api/mergernet.estimators.parametric.ParametricEstimator", "api/mergernet.jobs", "api/mergernet.jobs.j005", "api/mergernet.jobs.j005.Job", "api/mergernet.jobs.j006", "api/mergernet.jobs.j006.Job", "api/mergernet.model", "api/mergernet.model.automl", "api/mergernet.model.automl.optuna_train", "api/mergernet.model.baseline", "api/mergernet.model.baseline.finetune_train", "api/mergernet.model.callbacks", "api/mergernet.model.callbacks.DeltaStopping", "api/mergernet.model.callbacks.MyWandbCallback", "api/mergernet.model.callbacks.PruneCallback", "api/mergernet.model.callbacks.SaveBestTrialCallback", "api/mergernet.model.inference", "api/mergernet.model.inference.Predictor", "api/mergernet.model.utils", "api/mergernet.model.utils.get_conv_arch", "api/mergernet.model.utils.history_to_dataframe", "api/mergernet.model.utils.load_model", "api/mergernet.model.utils.set_trainable_state", "api/mergernet.model.utils.setup_seeds", "api/mergernet.services", "api/mergernet.services.github", "api/mergernet.services.github.GithubService", "api/mergernet.services.google", "api/mergernet.services.google.GDrive", "api/mergernet.services.imaging", "api/mergernet.services.imaging.BaseImagingService", "api/mergernet.services.legacy", "api/mergernet.services.legacy.LegacyService", "api/mergernet.services.sciserver", "api/mergernet.services.sciserver.SciServer", "api/mergernet.services.sdss", "api/mergernet.services.sdss.SloanService", "api/mergernet.services.splus", "api/mergernet.services.splus.ImageType", "api/mergernet.services.splus.SplusService", "api/mergernet.services.splus.update_authorization", "api/mergernet.services.tap", "api/mergernet.services.tap.TapService", "api/mergernet.services.tensorboard", "api/mergernet.services.tensorboard.TensorboardService", "api/mergernet.services.utils", "api/mergernet.services.utils.append_query_params", "api/mergernet.services.utils.batch_download_file", "api/mergernet.services.utils.download_file", "api/mergernet.services.utils.parallel_function_executor", "api/mergernet.visualization", "api/mergernet.visualization.plot", "api/mergernet.visualization.plot.Serie", "api/mergernet.visualization.plot.color_color", "api/mergernet.visualization.plot.conf_matrix", "api/mergernet.visualization.plot.data_distribution", "api/mergernet.visualization.plot.mag_class_distribution", "api/mergernet.visualization.plot.object_position", "api/mergernet.visualization.plot.roc", "api/mergernet.visualization.plot.train_metrics", "experiments", "index", "reference"], "filenames": ["api/mergernet.core.rst", "api/mergernet.core.constants.rst", "api/mergernet.core.experiment.rst", "api/mergernet.core.experiment.Experiment.rst", "api/mergernet.core.experiment.backup_model.rst", "api/mergernet.core.hp.rst", "api/mergernet.core.hp.CategoricalHyperParameter.rst", "api/mergernet.core.hp.ConstantHyperParameter.rst", "api/mergernet.core.hp.FloatHyperParameter.rst", "api/mergernet.core.hp.HP.rst", "api/mergernet.core.hp.HyperParameter.rst", "api/mergernet.core.hp.HyperParameterSet.rst", "api/mergernet.core.hp.IntHyperParameter.rst", "api/mergernet.core.logging.rst", "api/mergernet.core.logging.configure_root_logger.rst", "api/mergernet.core.utils.rst", "api/mergernet.core.utils.CachedDataFrame.rst", "api/mergernet.core.utils.SingletonMeta.rst", "api/mergernet.core.utils.Timming.rst", "api/mergernet.core.utils.array_fallback.rst", "api/mergernet.core.utils.classproperty.rst", "api/mergernet.core.utils.deep_update.rst", "api/mergernet.core.utils.find_by_value.rst", "api/mergernet.core.utils.heading.rst", "api/mergernet.core.utils.iauname.rst", "api/mergernet.core.utils.load_image.rst", "api/mergernet.core.utils.load_table.rst", "api/mergernet.core.utils.not_in.rst", "api/mergernet.core.utils.save_table.rst", "api/mergernet.core.utils.serialize.rst", "api/mergernet.core.utils.unique_path.rst", "api/mergernet.data.rst", "api/mergernet.data.dataset.rst", "api/mergernet.data.dataset.Dataset.rst", "api/mergernet.data.dataset_config.rst", "api/mergernet.data.dataset_config.DatasetConfig.rst", "api/mergernet.data.dataset_config.DatasetRegistry.rst", "api/mergernet.data.image.rst", "api/mergernet.data.image.ColorImage.rst", "api/mergernet.data.kfold.rst", "api/mergernet.data.kfold.DistributionKFold.rst", "api/mergernet.data.kfold.StratifiedDistributionKFold.rst", "api/mergernet.data.match.rst", "api/mergernet.data.match.CrossMatch.rst", "api/mergernet.data.match.CrossMatchResult.rst", "api/mergernet.data.match.XTable.rst", "api/mergernet.data.preprocessing.rst", "api/mergernet.data.preprocessing.load_jpg.rst", "api/mergernet.data.preprocessing.load_png.rst", "api/mergernet.data.preprocessing.normalize_rgb.rst", "api/mergernet.data.preprocessing.one_hot_factory.rst", "api/mergernet.data.preprocessing.standardize_rgb.rst", "api/mergernet.data.rgb.rst", "api/mergernet.data.rgb.RGB.rst", "api/mergernet.data.sanitization.rst", "api/mergernet.data.sanitization.DatasetSanitization.rst", "api/mergernet.data.trilogy.rst", "api/mergernet.data.trilogy.MakeImg.rst", "api/mergernet.data.trilogy.RGB2im.rst", "api/mergernet.data.trilogy.adjust_saturation.rst", "api/mergernet.data.trilogy.da.rst", "api/mergernet.data.trilogy.get_clip.rst", "api/mergernet.data.trilogy.get_levels.rst", "api/mergernet.data.trilogy.imscale.rst", "api/mergernet.data.trilogy.meanstd.rst", "api/mergernet.data.trilogy.rms.rst", "api/mergernet.data.trilogy.satK2m.rst", "api/mergernet.data.trilogy.setLevel.rst", "api/mergernet.estimators.rst", "api/mergernet.estimators.automl.rst", "api/mergernet.estimators.automl.OptunaEstimator.rst", "api/mergernet.estimators.base.rst", "api/mergernet.estimators.base.Estimator.rst", "api/mergernet.estimators.base.EstimatorConfig.rst", "api/mergernet.estimators.base.EstimatorRegistry.rst", "api/mergernet.estimators.decals.rst", "api/mergernet.estimators.decals.ZoobotEstimator.rst", "api/mergernet.estimators.parametric.rst", "api/mergernet.estimators.parametric.ParametricEstimator.rst", "api/mergernet.jobs.rst", "api/mergernet.jobs.j005.rst", "api/mergernet.jobs.j005.Job.rst", "api/mergernet.jobs.j006.rst", "api/mergernet.jobs.j006.Job.rst", "api/mergernet.model.rst", "api/mergernet.model.automl.rst", "api/mergernet.model.automl.optuna_train.rst", "api/mergernet.model.baseline.rst", "api/mergernet.model.baseline.finetune_train.rst", "api/mergernet.model.callbacks.rst", "api/mergernet.model.callbacks.DeltaStopping.rst", "api/mergernet.model.callbacks.MyWandbCallback.rst", "api/mergernet.model.callbacks.PruneCallback.rst", "api/mergernet.model.callbacks.SaveBestTrialCallback.rst", "api/mergernet.model.inference.rst", "api/mergernet.model.inference.Predictor.rst", "api/mergernet.model.utils.rst", "api/mergernet.model.utils.get_conv_arch.rst", "api/mergernet.model.utils.history_to_dataframe.rst", "api/mergernet.model.utils.load_model.rst", "api/mergernet.model.utils.set_trainable_state.rst", "api/mergernet.model.utils.setup_seeds.rst", "api/mergernet.services.rst", "api/mergernet.services.github.rst", "api/mergernet.services.github.GithubService.rst", "api/mergernet.services.google.rst", "api/mergernet.services.google.GDrive.rst", "api/mergernet.services.imaging.rst", "api/mergernet.services.imaging.BaseImagingService.rst", "api/mergernet.services.legacy.rst", "api/mergernet.services.legacy.LegacyService.rst", "api/mergernet.services.sciserver.rst", "api/mergernet.services.sciserver.SciServer.rst", "api/mergernet.services.sdss.rst", "api/mergernet.services.sdss.SloanService.rst", "api/mergernet.services.splus.rst", "api/mergernet.services.splus.ImageType.rst", "api/mergernet.services.splus.SplusService.rst", "api/mergernet.services.splus.update_authorization.rst", "api/mergernet.services.tap.rst", "api/mergernet.services.tap.TapService.rst", "api/mergernet.services.tensorboard.rst", "api/mergernet.services.tensorboard.TensorboardService.rst", "api/mergernet.services.utils.rst", "api/mergernet.services.utils.append_query_params.rst", "api/mergernet.services.utils.batch_download_file.rst", "api/mergernet.services.utils.download_file.rst", "api/mergernet.services.utils.parallel_function_executor.rst", "api/mergernet.visualization.rst", "api/mergernet.visualization.plot.rst", "api/mergernet.visualization.plot.Serie.rst", "api/mergernet.visualization.plot.color_color.rst", "api/mergernet.visualization.plot.conf_matrix.rst", "api/mergernet.visualization.plot.data_distribution.rst", "api/mergernet.visualization.plot.mag_class_distribution.rst", "api/mergernet.visualization.plot.object_position.rst", "api/mergernet.visualization.plot.roc.rst", "api/mergernet.visualization.plot.train_metrics.rst", "experiments.rst", "index.rst", "reference.rst"], "titles": ["mergernet.core", "mergernet.core.constants", "mergernet.core.experiment", "Experiment", "mergernet.core.experiment.backup_model", "mergernet.core.hp", "CategoricalHyperParameter", "ConstantHyperParameter", "FloatHyperParameter", "HP", "HyperParameter", "HyperParameterSet", "IntHyperParameter", "mergernet.core.logging", "mergernet.core.logging.configure_root_logger", "mergernet.core.utils", "CachedDataFrame", "SingletonMeta", "Timming", "mergernet.core.utils.array_fallback", "classproperty", "mergernet.core.utils.deep_update", "mergernet.core.utils.find_by_value", "mergernet.core.utils.heading", "mergernet.core.utils.iauname", "mergernet.core.utils.load_image", "mergernet.core.utils.load_table", "mergernet.core.utils.not_in", "mergernet.core.utils.save_table", "mergernet.core.utils.serialize", "mergernet.core.utils.unique_path", "mergernet.data", "mergernet.data.dataset", "Dataset", "mergernet.data.dataset_config", "DatasetConfig", "DatasetRegistry", "mergernet.data.image", "ColorImage", "mergernet.data.kfold", "DistributionKFold", "StratifiedDistributionKFold", "mergernet.data.match", "CrossMatch", "CrossMatchResult", "XTable", "mergernet.data.preprocessing", "mergernet.data.preprocessing.load_jpg", "mergernet.data.preprocessing.load_png", "mergernet.data.preprocessing.normalize_rgb", "mergernet.data.preprocessing.one_hot_factory", "mergernet.data.preprocessing.standardize_rgb", "mergernet.data.rgb", "RGB", "mergernet.data.sanitization", "DatasetSanitization", "mergernet.data.trilogy", "MakeImg", "mergernet.data.trilogy.RGB2im", "mergernet.data.trilogy.adjust_saturation", "mergernet.data.trilogy.da", "mergernet.data.trilogy.get_clip", "mergernet.data.trilogy.get_levels", "mergernet.data.trilogy.imscale", "mergernet.data.trilogy.meanstd", "mergernet.data.trilogy.rms", "mergernet.data.trilogy.satK2m", "mergernet.data.trilogy.setLevel", "mergernet.estimators", "mergernet.estimators.automl", "OptunaEstimator", "mergernet.estimators.base", "Estimator", "EstimatorConfig", "EstimatorRegistry", "mergernet.estimators.decals", "ZoobotEstimator", "mergernet.estimators.parametric", "ParametricEstimator", "mergernet.jobs", "mergernet.jobs.j005", "Job", "mergernet.jobs.j006", "Job", "mergernet.model", "mergernet.model.automl", "mergernet.model.automl.optuna_train", "mergernet.model.baseline", "mergernet.model.baseline.finetune_train", "mergernet.model.callbacks", "DeltaStopping", "MyWandbCallback", "PruneCallback", "SaveBestTrialCallback", "mergernet.model.inference", "Predictor", "mergernet.model.utils", "mergernet.model.utils.get_conv_arch", "mergernet.model.utils.history_to_dataframe", "mergernet.model.utils.load_model", "mergernet.model.utils.set_trainable_state", "mergernet.model.utils.setup_seeds", "mergernet.services", "mergernet.services.github", "GithubService", "mergernet.services.google", "GDrive", "mergernet.services.imaging", "BaseImagingService", "mergernet.services.legacy", "LegacyService", "mergernet.services.sciserver", "SciServer", "mergernet.services.sdss", "SloanService", "mergernet.services.splus", "ImageType", "SplusService", "mergernet.services.splus.update_authorization", "mergernet.services.tap", "TapService", "mergernet.services.tensorboard", "TensorboardService", "mergernet.services.utils", "mergernet.services.utils.append_query_params", "mergernet.services.utils.batch_download_file", "mergernet.services.utils.download_file", "mergernet.services.utils.parallel_function_executor", "mergernet.visualization", "mergernet.visualization.plot", "Serie", "mergernet.visualization.plot.color_color", "mergernet.visualization.plot.conf_matrix", "mergernet.visualization.plot.data_distribution", "mergernet.visualization.plot.mag_class_distribution", "mergernet.visualization.plot.object_position", "mergernet.visualization.plot.roc", "mergernet.visualization.plot.train_metrics", "Experiments", "Welcome to mergernet\u2019s documentation!", "API Reference"], "terms": {"modul": [0, 31, 32, 54, 68, 79, 84, 102, 115, 128, 139], "function": [2, 13, 15, 32, 46, 55, 56, 70, 85, 86, 87, 90, 91, 92, 93, 96, 110, 115, 117, 118, 123, 129], "class": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 129, 130, 136], "mergernet": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 33, 35, 36, 38, 40, 41, 43, 44, 45, 53, 55, 57, 70, 72, 73, 74, 76, 78, 81, 83, 90, 91, 92, 93, 95, 104, 106, 108, 110, 112, 114, 116, 117, 120, 122, 130, 138], "core": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 55, 81, 83, 139], "sourc": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 76, 78, 81, 83, 86, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 106, 108, 110, 112, 114, 116, 117, 118, 120, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137], "base": [3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 33, 35, 36, 38, 40, 41, 43, 44, 45, 53, 55, 57, 70, 72, 73, 74, 76, 78, 81, 83, 90, 91, 92, 93, 95, 104, 106, 108, 110, 112, 114, 116, 117, 120, 122, 130], "object": [3, 9, 10, 11, 16, 17, 18, 24, 29, 33, 35, 36, 38, 40, 41, 43, 44, 45, 53, 55, 57, 70, 72, 73, 74, 76, 78, 81, 83, 95, 104, 106, 108, 110, 112, 114, 117, 120, 122, 130], "thi": [3, 11, 32, 33, 55, 81, 83, 90, 91, 92, 93, 115, 117, 118], "store": [3, 55, 81, 83, 91, 110], "all": [3, 11, 27, 32, 33, 36, 38, 55, 56, 81, 83, 91, 117, 136], "relev": [3, 11, 81, 83], "inform": 3, "an": [3, 29, 38, 55, 81, 83, 90, 91, 92, 93], "which": [3, 32, 33, 38, 55, 91], "can": [3, 32, 81, 83, 91, 117, 118, 136], "access": [3, 11, 16, 17, 138], "from": [3, 25, 33, 38, 55, 81, 83, 91], "anywher": 3, "applic": 3, "": [3, 11, 17, 24, 36, 38, 90, 91, 92, 93, 116, 117, 118], "implement": [3, 17, 38], "singleton": [3, 17], "pattern": 3, "The": [3, 4, 11, 16, 22, 23, 24, 27, 29, 32, 33, 55, 70, 81, 83, 91, 110, 117, 118, 136], "ar": [3, 27, 33, 55, 81, 83, 90, 91, 92, 93, 110, 117], "track": 3, "us": [3, 11, 17, 32, 33, 38, 55, 91, 110, 115, 117], "two": [3, 33, 55, 91], "valu": [3, 6, 7, 8, 9, 10, 11, 12, 22, 33, 38, 55, 90, 91, 92, 93, 117, 136], "exp_id": [3, 81, 83, 99], "run_id": [3, 99], "first": [3, 17, 33], "i": [3, 32, 33, 55, 81, 83, 90, 91, 92, 93, 117, 136], "human": [3, 38], "readabl": 3, "integ": [3, 90, 91, 92, 93], "set": [3, 11, 33, 38, 55, 81, 83, 90, 91, 92, 93], "user": [3, 81, 83], "relat": 3, "task": [3, 32, 55, 81, 83], "specifi": [3, 11, 33, 55, 81, 83], "entrypoint": 3, "file": [3, 25, 33, 55, 81, 83, 110, 114, 117], "And": 3, "second": 3, "auto": [3, 91], "gener": [3, 32, 33, 40, 81, 83, 91, 117], "hex": 3, "token": [3, 117, 118], "differ": [3, 11], "re": 3, "run": [3, 55, 78, 81, 83, 88, 90, 91, 92, 93, 114], "same": [3, 23, 55, 81, 83, 91, 110, 117], "attribut": [3, 20, 33, 36, 44, 70, 72, 74, 76, 78, 81, 83, 91, 106, 116], "tracer": [3, 81, 83], "context": [3, 81, 83], "manag": [3, 81, 83], "creat": [3, 11, 33, 38, 55, 81, 83, 91], "wandb": [3, 81, 83, 91], "project": [3, 81, 83], "paramet": [3, 4, 11, 16, 22, 23, 24, 25, 27, 29, 33, 38, 55, 70, 81, 83, 90, 91, 92, 93, 110, 117, 118, 136], "config": [3, 33, 70, 72, 76, 78, 81, 83], "dict": [3, 6, 7, 8, 10, 11, 12, 22, 33, 38, 41, 53, 81, 83, 90, 91, 92, 93, 95, 98, 104, 114, 117, 124, 127, 134], "configur": [3, 14, 33, 35, 36, 81, 83], "job_typ": [3, 81, 83], "str": [3, 9, 11, 16, 18, 23, 24, 25, 26, 28, 29, 30, 33, 38, 53, 55, 70, 72, 76, 78, 81, 83, 86, 88, 91, 92, 93, 95, 97, 99, 100, 104, 106, 108, 110, 114, 117, 120, 122, 124, 125, 126, 127, 132, 134, 135], "job": [3, 139], "type": [3, 9, 11, 16, 17, 22, 24, 25, 27, 29, 33, 38, 53, 55, 70, 81, 83, 91, 116, 117, 118], "name": [3, 9, 11, 24, 55, 81, 83, 91, 95, 99, 122], "tag": [3, 81, 83], "list": [3, 11, 24, 27, 33, 38, 41, 55, 70, 72, 76, 78, 81, 83, 88, 91, 95, 108, 110, 114, 117, 120, 125, 136], "init_wandb": [3, 81, 83], "_post_run": [3, 81, 83], "post": [3, 81, 83], "automat": [3, 81, 83, 91], "perform": [3, 29, 32, 55, 81, 83, 90, 91, 92, 93, 115, 117], "when": [3, 11, 81, 83, 91], "call": [3, 55, 81, 83, 90, 91, 92, 93, 118], "includ": [3, 55, 81, 83, 136], "upload": [3, 81, 83, 95], "regist": [3, 11, 81, 83], "artifact": [3, 81, 83], "upload_registered_artifact": [3, 81, 83], "_pre_run": [3, 81, 83], "pre": [3, 81, 83], "clear": [3, 11, 81, 83], "log": [3, 9, 81, 83, 90, 91, 92, 93], "setup": [3, 81, 83], "global": [3, 81, 83], "_setup_experiment_attribut": [3, 81, 83], "identifi": [3, 11, 81, 83], "system": [3, 81, 83], "need": [3, 25, 81, 83, 91, 118], "e": [3, 33, 81, 83, 117], "g": [3, 33, 81, 83, 117], "dataset": [3, 4, 35, 36, 54, 55, 81, 83, 86, 88], "model": [3, 4, 32, 70, 72, 76, 78, 81, 83, 90, 91, 92, 93, 95, 136, 139], "predict": [3, 4, 70, 72, 76, 78, 81, 83, 90, 91, 92, 93, 95, 136], "classmethod": [3, 16, 81, 83], "download_file_gd": [3, 81, 83], "fname": [3, 81, 83], "option": [3, 6, 7, 8, 9, 10, 11, 12, 33, 38, 55, 76, 81, 83, 86, 88, 91, 95, 98, 104, 106, 108, 110, 114, 117, 125, 126, 132, 134, 135], "int": [3, 9, 12, 33, 38, 41, 43, 53, 55, 76, 81, 83, 86, 91, 92, 99, 104, 108, 110, 114, 117, 120, 125, 127, 134, 136], "none": [3, 6, 7, 8, 9, 10, 11, 12, 19, 33, 38, 44, 47, 48, 49, 51, 55, 61, 76, 81, 83, 86, 88, 90, 91, 92, 93, 95, 104, 106, 108, 110, 114, 117, 125, 126, 131, 132, 133, 134, 135, 136, 137], "share": [3, 81, 83], "bool": [3, 4, 6, 7, 8, 9, 10, 12, 26, 28, 33, 38, 55, 57, 70, 72, 76, 78, 81, 83, 91, 100, 104, 106, 110, 114, 117, 120, 125, 126, 132], "fals": [3, 6, 7, 8, 9, 10, 12, 33, 38, 55, 70, 72, 76, 78, 81, 83, 91, 104, 110, 114, 117, 120, 125, 126, 130, 131, 132], "download": [3, 33, 70, 72, 76, 78, 81, 83, 104, 110, 115, 117], "googl": [3, 4, 81, 83, 106], "drive": [3, 4, 81, 83], "insid": [3, 81, 83], "gd_artifact_path": [3, 81, 83], "default": [3, 11, 26, 28, 36, 81, 83, 91, 117], "current": [3, 70, 81, 83, 90, 91, 92, 93], "id": [3, 81, 83], "onli": [3, 81, 83, 90, 91, 92, 93, 117], "folder": [3, 33, 55, 81, 83], "finish_wandb": [3, 81, 83], "close": [3, 81, 83], "connect": [3, 81, 83], "register_artifact": [3, 81, 83], "servic": [3, 81, 83, 104, 106, 108, 110, 112, 114, 116, 117, 120, 122, 139], "correspond": [3, 22, 55, 81, 83], "end": [3, 18, 81, 83, 90, 91, 92, 93], "filenam": [3, 33, 70, 72, 76, 78, 81, 83, 131, 133, 136, 137], "one": [3, 81, 83, 91], "gdrive": [3, 81, 83], "github": [3, 4, 56, 81, 83, 104], "both": [3, 81, 83, 91], "defin": [3, 32, 81, 83, 91, 110], "abstract": [3, 32, 33, 70, 72, 78, 81, 83], "method": [3, 11, 17, 55, 81, 83, 90, 91, 92, 93, 115, 117], "execut": [3, 81, 83, 117], "upload_file_gd": [3, 81, 83], "data": [3, 28, 33, 35, 36, 38, 40, 41, 43, 44, 45, 53, 55, 57, 81, 83, 90, 91, 92, 93, 104, 139], "ani": [3, 4, 6, 7, 9, 11, 22, 29, 55, 81, 83, 90, 91, 92, 93, 117, 127], "content": [3, 81, 83, 104], "If": [3, 38, 55, 81, 83, 91, 117, 136], "consid": [3, 81, 83], "local_artifact_path": [3, 81, 83], "json": [3, 81, 83], "serializ": [3, 81, 83], "python": [3, 81, 83, 91], "byte": [3, 81, 83], "_exp_creat": [3, 81, 83], "flag": [3, 81, 83], "wa": [3, 81, 83, 117], "start": [3, 18, 70, 81, 83, 90, 91, 92, 93], "_registered_artifact": [3, 81, 83], "exp_nam": [3, 81, 83], "exp_": [3, 81, 83], "gd_exp_path": [3, 81, 83], "path": [3, 16, 25, 26, 28, 30, 33, 38, 53, 55, 57, 76, 81, 83, 104, 106, 108, 110, 114, 117, 120, 122, 125, 126, 134], "where": [3, 55, 81, 83, 91, 110, 117, 136], "gd_shared_path": [3, 81, 83], "extern": [3, 81, 83], "local_exp_path": [3, 81, 83], "local": [3, 25, 33, 81, 83, 106], "environ": [3, 81, 83, 117], "output": [3, 81, 83, 90, 91, 92, 93, 117], "local_shared_path": [3, 33, 81, 83], "experiemnt": [3, 81, 83], "note": [3, 81, 83, 90, 91, 92, 93], "save_histori": 4, "true": [4, 26, 28, 33, 38, 55, 57, 70, 72, 76, 78, 91, 117, 136], "save_test_pr": 4, "save_dataset_config": 4, "save_model": [4, 91], "tf": [4, 33, 70, 90, 91, 92, 93], "kera": [4, 70, 90, 91, 92, 93], "backup": 4, "instanc": [4, 11], "train": [4, 11, 33, 70, 72, 76, 78, 90, 91, 92, 93], "histori": [4, 70, 72, 78, 91, 98], "must": [4, 55, 110, 117], "save": [4, 55, 91, 110, 117, 134, 135], "test": [4, 33, 90, 91, 92, 93], "dataset_config": [4, 33, 35, 36], "tensorflow": 4, "hp": [6, 7, 8, 10, 11, 12, 86, 88], "hyperparamet": [6, 7, 8, 11, 12], "clear_last_valu": [6, 7, 8, 10, 12], "static": [6, 7, 8, 9, 10, 12, 33, 38, 41, 106, 112], "from_dict": [6, 7, 8, 10, 12], "param": [6, 7, 8, 10, 12, 35, 90, 91, 92, 93, 117, 127, 136], "set_attr": [6, 7, 8, 10, 12], "kei": [6, 7, 8, 10, 11, 12, 22, 33, 90, 91, 92, 93], "set_trial": [6, 7, 8, 10, 11, 12], "trial": [6, 7, 8, 10, 11, 12, 70], "frozentri": [6, 7, 8, 10, 11, 12], "suggest": [6, 7, 8, 10, 11, 12], "to_dict": [6, 7, 8, 10, 12], "show_nam": [6, 7, 8, 10, 12], "float": [8, 9, 24, 38, 41, 43, 53, 55, 57, 70, 72, 76, 78, 91, 108, 110, 114, 117, 134], "cat": 9, "choic": [9, 38], "sequenc": [9, 11, 114, 127, 132], "categoricalhyperparamet": 9, "const": 9, "constanthyperparamet": [9, 11], "num": 9, "low": [9, 38], "union": [9, 11, 16, 24, 25, 26, 28, 30, 38, 55, 70, 72, 76, 78, 104, 106, 114, 117, 120, 122, 125, 126, 134], "high": [9, 32, 33], "step": [9, 91], "dtype": 9, "floathyperparamet": 9, "inthyperparamet": 9, "repres": [11, 38, 91, 116], "handl": 11, "arg": [11, 21, 70, 110], "factori": 11, "add": 11, "pars": 11, "dictionari": [11, 22], "arrai": [11, 19, 24, 25, 38, 55, 91], "like": [11, 55], "arrar": 11, "ad": [11, 55], "clear_values_dict": 11, "last_valu": 11, "properti": [11, 20, 70, 72, 76, 78], "condit": 11, "get": [11, 33, 106, 117], "its": [11, 55], "For": [11, 90, 91, 92, 93], "than": [11, 55], "optuna": [11, 70], "seggest": 11, "api": [11, 110, 139], "hyperparam": 11, "optuan": 11, "return": [11, 16, 17, 22, 24, 25, 27, 29, 33, 38, 55, 70, 90, 91, 92, 93, 117, 118], "wasn": 11, "t": [11, 91], "found": [11, 33], "to_values_dict": 11, "represent": [11, 32, 33], "last": [11, 90, 91, 92, 93], "root": 14, "logger": 14, "util": [16, 17, 18, 20, 55], "hold": 16, "cach": 16, "version": 16, "panda": 16, "datafram": [16, 26, 28, 33, 44, 55, 98, 114, 134], "memori": 16, "later": [16, 91], "load": [16, 25, 32], "pd": 16, "_cach": 16, "thread": [17, 110, 117], "safe": 17, "__new__": [17, 20], "kwarg": [17, 20, 38, 55, 70, 108, 110, 114, 117], "mro": 17, "resolut": 17, "order": [17, 38, 55, 91], "_instanc": 17, "_lock": [17, 117], "allocate_lock": 17, "unlock": 17, "_thread": 17, "lock": [17, 117], "synchron": 17, "dure": [17, 38, 90, 91, 92, 93], "_format_tim": 18, "dt": 18, "timedelta": 18, "durat": 18, "prefix": [19, 90, 91, 92, 93], "delet": 20, "descriptor": 20, "chang": [20, 55, 90, 91, 92, 93], "getter": 20, "setter": 20, "fdel": 20, "fget": 20, "fset": 20, "origin": [21, 56], "new": [21, 55], "d": [22, 33], "search": [22, 139], "msg": 23, "sep": 23, "print": [23, 55], "messag": 23, "rule": [23, 32], "bellow": 23, "width": [23, 108, 110, 114], "string": [23, 55, 91, 117], "charact": [23, 38], "ra": [24, 53, 108, 110, 114, 117, 135], "ndarrai": [24, 25, 33, 38, 43, 44, 55, 57, 76, 91, 114], "dec": [24, 53, 108, 110, 114, 117, 135], "receiv": [24, 91, 117], "angular": 24, "posit": 24, "iau2000": [24, 55], "right": [24, 110, 117], "ascens": [24, 110, 117], "declin": [24, 110, 117], "187": 24, "70592": 24, "12": [24, 134, 135], "39112": 24, "j123049": 24, "42": [24, 117], "122328": 24, "03": 24, "format": [24, 91, 110], "iau": 24, "imag": [25, 33, 36, 38, 55, 57, 91, 108, 110, 115, 116, 117], "storag": 25, "numpi": 25, "support": 25, "sever": 25, "inclu": 25, "jpg": [25, 110, 114], "png": [25, 70, 72, 76, 78, 117], "npy": 25, "npz": 25, "fit": [25, 90, 91, 92, 93, 110, 115, 116, 117], "pathlib": 25, "desir": [25, 110], "convert": [25, 91], "ref": 27, "comp": 27, "comput": [27, 55, 91, 136], "element": [27, 55], "refer": [27, 139], "comparison": 27, "A": [27, 33, 36, 55, 90, 91, 92, 93, 117], "contain": [27, 33, 55, 91], "obj": 29, "cast": 29, "depend": 29, "level": [32, 33, 63], "previous": 32, "tfrecord": 32, "main": 32, "develop": 32, "process": [32, 117], "deep": 32, "learn": 32, "other": [32, 33, 91], "well": 32, "who": 32, "complementari": 32, "io": 33, "oper": 33, "prepar": 33, "split": [33, 40], "datasetconfig": [33, 36], "databas": [33, 115, 117], "registri": [33, 36, 70, 72, 76, 78], "_create_table_for_preds_dataset": 33, "scan": 33, "tabl": [33, 43, 44, 55, 91], "csv": [33, 117], "ha": [33, 91], "_detect_img_extens": 33, "x_column_suffix": 33, "detect": 33, "extens": [33, 114], "_discretize_label": 33, "y": [33, 38, 41, 47, 48, 49, 51, 91], "find": 33, "ocurr": 33, "match": [33, 43, 44, 45], "label_map": [33, 95, 134], "replac": [33, 70, 72, 76, 78, 110, 114, 117, 125, 126], "respect": 33, "np": [33, 38], "compute_class_weight": 33, "concat_fold_column": 33, "df": [33, 134], "fname_column": 33, "class_column": 33, "r_column": 33, "n_split": [33, 41], "5": [33, 36, 64, 76, 135], "bin": [33, 55], "3": [33, 38, 55, 64, 117, 120], "check": [33, 55, 117], "destin": 33, "exist": [33, 106, 110, 117], "miss": [33, 91], "web": 33, "resourc": 33, "get_x": 33, "get_x_by_fold": 33, "fold": 33, "kind": 33, "get_fold": 33, "tupl": [33, 38, 43, 55, 70, 72, 76, 78, 91, 97, 110, 114, 134], "datasetv2": 33, "select": 33, "retrun": 33, "secound": 33, "get_images_path": 33, "get_preds_dataset": 33, "is_dataset_download": 33, "experi": [33, 81, 83, 139], "dir": 33, "otherwis": [33, 117], "prepare_data": 33, "batch_siz": 33, "64": 33, "buffer_s": 33, "1000": 33, "datasetregistri": 33, "bin_legacy_north_rgb_128": 36, "binari": [36, 91], "merger": 36, "non": [36, 38], "legaci": [36, 110], "128x128": 36, "rgb": [36, 38, 58, 59, 91, 110, 115, 117], "north": 36, "sky": [36, 38, 110], "pixscal": [36, 110], "0": [36, 38, 55, 57, 70, 72, 76, 78, 90, 91, 92, 93, 108, 110, 114, 117, 135, 136], "55": [36, 108, 114], "arcsec": 36, "pixel": [36, 38, 110, 117], "bin_sdss_128": 36, "sdss": [36, 53, 114], "blind_splus_gal80_ls10_rgb_128": 36, "plu": [36, 116, 117, 118], "blind": 36, "sampl": [36, 55, 135], "13": 36, "r_auto": 36, "17": 36, "l": [36, 110], "10": [36, 38, 55], "earli": 36, "grz": [36, 38, 110], "blind_splus_lupton_128": 36, "lupton": [36, 38, 115, 116, 117], "blind_splus_lupton_150": 36, "150x150": 36, "blind_splus_trilogy_128": 36, "trilogi": [36, 57, 115, 116, 117], "blind_splus_trilogy_150": 36, "darg_no_inspect": 36, "mesd_legacy_128": 36, "mesd": 36, "survei": [36, 110], "mesd_sdss_128": 36, "asinh_map": 38, "x": [38, 41, 47, 48, 49, 51, 65, 91], "arcsinh": 38, "1": [38, 43, 55, 91, 117, 134, 135], "appli": [38, 91], "linear": 38, "map": [38, 117], "input": [38, 55, 91], "matrix": 38, "rescal": 38, "telescop": 38, "view": 38, "have": [38, 110, 117], "gain": 38, "transform": 38, "asinh_map2": 38, "apena": 38, "uma": 38, "coisinha": 38, "coisa": 38, "frac": 38, "alpha": [38, 135], "sqrt": 38, "batch_legacy_rgb": 38, "save_path": [38, 53, 108, 110, 114, 117, 120, 125, 126], "legacy_rgb": 38, "img": [38, 91], "band": [38, 110, 114, 115, 117], "bright": 38, "scale": [38, 108, 110, 114], "desatur": 38, "minmax": 38, "nl_func": 38, "normal": 38, "lupton_rgb": 38, "mn": 38, "mx": 38, "100": [38, 91], "desaturate_factor": 38, "01": 38, "interpret": 38, "multi": [38, 117], "follow": [38, 55], "comment": 38, "2004": 38, "preserv": 38, "colour": 38, "linearli": 38, "each": [38, 90, 91, 92, 93, 136], "good": 38, "spread": 38, "subject": 38, "2": [38, 55, 57, 90, 91, 92, 93, 117, 125, 127], "nonlinear": 38, "total": 38, "intens": 38, "lie": 38, "between": 38, "4": [38, 53, 114, 117], "clip": 38, "signal": 38, "nois": [38, 117], "avoid": 38, "speckl": 38, "partial": 38, "shape": [38, 136], "h": 38, "w": 38, "c": 38, "dim": 38, "soften": 38, "factor": 38, "min": [38, 91], "befor": [38, 117, 118], "max": [38, 91], "reduc": 38, "satur": [38, 117], "n": [38, 64, 90, 91, 92, 93, 136], "control": 38, "proport": 38, "arai": 38, "kfold": [40, 41], "distribut": [40, 41, 55], "compute_max_bin": 41, "n_class": [41, 50, 136], "split_al": 41, "split_id": 41, "table1": 43, "xtabl": 43, "table2": 43, "radiu": [43, 114], "pair_match": 43, "nthneighbor": 43, "uniqu": 43, "distanc": 44, "primary_idx": 44, "secondary_idx": 44, "get_coord": 45, "to_df": 45, "make_trilogy_fit": 53, "source_dict": 53, "r_path": 53, "g_path": 53, "b_path": 53, "trilogy_fits_to_png": 53, "r_fit": 53, "g_fit": 53, "b_fit": 53, "sky_siz": 53, "70": 53, "fig_siz": 53, "128": [53, 117], "sanit": 55, "tool": 55, "visual": [55, 91, 130, 139], "size": [55, 117, 135], "stamp": [55, 110], "drop": 55, "corrupt": 55, "after": 55, "inspect": 55, "remov": 55, "row": [55, 91], "without": 55, "images_fold": 55, "iaunam": 55, "check_imag": 55, "imeg": 55, "drop_images_by_files": 55, "threshold": 55, "lower": 55, "cutoff": 55, "drop_images_by_iaunam": 55, "filesize_histogram": 55, "plot": [55, 70, 72, 76, 78, 130], "histogram": [55, 91], "number": [55, 91, 117, 136], "argument": [55, 90, 91, 92, 93, 117], "pass": [55, 90, 91, 92, 93, 117], "directli": 55, "plt": 55, "hist": 55, "get_filesize_distribut": 55, "files": 55, "get_iauname_by_files": 55, "upper": 55, "filter": 55, "iaunaem": 55, "temp": 55, "dry_run": 55, "follw": 55, "kb": 55, "_sanit": 55, "suffix": 55, "dry": 55, "mode": [55, 90, 91, 92, 93], "made": 55, "just": 55, "would": 55, "instead": [55, 91, 117], "kilobyt": 55, "program": 56, "credit": 56, "author": [56, 117, 118], "dan": 56, "coe": 56, "http": [56, 115, 117], "www": 56, "stsci": 56, "edu": 56, "dcoe": 56, "intro": 56, "html": 56, "modif": 56, "gustavo": 56, "b": [56, 117], "o": 56, "schwarz": 56, "com": 56, "schwarzam": 56, "color": [57, 115], "noiselum": 57, "15": [57, 70, 72, 76, 78, 117], "satperc": 57, "colorsatfac": 57, "inplac": 57, "get_arrai": 57, "savefig": 57, "k": [59, 60, 66], "m": 61, "m_min": 61, "m_max": 61, "stampsrgb": 62, "unsatperc": 62, "y1": 63, "datasort": 64, "n_sigma": 64, "pp": 67, "estim": [70, 73, 74, 76, 78, 139], "automl": 70, "_object": 70, "optim": [70, 72, 76, 78], "oputna": 70, "metric": [70, 72, 76, 78, 90, 91, 92, 93], "build": [70, 72, 76, 78, 91], "freeze_conv": [70, 72, 78], "compile_model": [70, 72, 76, 78], "tf_model": [70, 72, 76, 78], "estimatorconfig": [70, 72, 74, 76, 78], "get_conv_arch": [70, 72, 76, 78], "pretrained_arch": [70, 72, 76, 78, 97], "callabl": [70, 72, 76, 78, 91, 97, 118, 127], "get_dataaug_block": [70, 72, 76, 78], "flip_horizont": [70, 72, 76, 78], "flip_vert": [70, 72, 76, 78], "rotat": [70, 72, 76, 78], "08": [70, 72, 76, 78], "zoom": [70, 72, 76, 78], "set_train": [70, 72, 76, 78], "layer": [70, 72, 76, 78, 91, 100, 110], "trainabl": [70, 72, 76, 78, 100], "best": [70, 91, 133, 134, 137], "_abc_impl": [70, 72, 76, 78, 108], "_abc_data": [70, 72, 76, 78, 108], "estimatorregistri": [70, 72, 76, 78], "abc": [72, 108], "run_nam": [72, 78, 88], "zoobot_greyscal": 74, "zoobot_rgb": 74, "decal": 76, "_prepare_dataset": 76, "include_top": 76, "cnn_represent": 76, "rebuild": 76, "pca": 76, "featur": 76, "n_compon": 76, "n_sampl": 76, "parametr": 78, "j005": 81, "j006": 83, "train_func": 86, "hyperparameterset": [86, 88], "n_trial": 86, "pruner": 86, "hyperband": 86, "objective_metr": 86, "val_loss": [86, 91], "objective_direct": 86, "minim": [86, 91], "resume_hash": 86, "callback": [88, 90, 91, 92, 93], "_implements_predict_batch_hook": [90, 91, 92, 93], "determin": [90, 91, 92, 93], "should": [90, 91, 92, 93, 110], "batch": [90, 91, 92, 93, 115, 117], "_implements_test_batch_hook": [90, 91, 92, 93], "_implements_train_batch_hook": [90, 91, 92, 93], "on_batch_begin": [90, 91, 92, 93], "backward": [90, 91, 92, 93], "compat": [90, 91, 92, 93], "alia": [90, 91, 92, 93], "on_train_batch_begin": [90, 91, 92, 93], "on_batch_end": [90, 91, 92, 93], "on_train_batch_end": [90, 91, 92, 93], "on_epoch_begin": [90, 91, 92, 93], "epoch": [90, 91, 92, 93], "subclass": [90, 91, 92, 93], "overrid": [90, 91, 92, 93], "action": [90, 91, 92, 93], "index": [90, 91, 92, 93, 139], "mai": [90, 91, 92, 93], "futur": [90, 91, 92, 93], "on_epoch_end": [90, 91, 92, 93], "result": [90, 91, 92, 93], "valid": [90, 91, 92, 93], "val_": [90, 91, 92, 93], "exampl": [90, 92, 93, 136], "loss": [90, 91, 92, 93], "accuraci": [90, 91, 92, 93], "7": [90, 91, 92, 93], "on_predict_batch_begin": [90, 91, 92, 93], "begin": [90, 91, 92, 93], "steps_per_execut": [90, 91, 92, 93], "compil": [90, 91, 92, 93], "everi": [90, 91, 92, 93], "within": [90, 91, 92, 93], "on_predict_batch_end": [90, 91, 92, 93], "aggreg": [90, 91, 92, 93], "up": [90, 91, 92, 93], "until": [90, 91, 92, 93], "on_predict_begin": [90, 91, 92, 93], "on_predict_end": [90, 91, 92, 93], "on_test_batch_begin": [90, 91, 92, 93], "evalu": [90, 91, 92, 93], "also": [90, 91, 92, 93], "provid": [90, 91, 92, 93], "on_test_batch_end": [90, 91, 92, 93], "on_test_begin": [90, 91, 92, 93], "on_test_end": [90, 91, 92, 93], "on_train_begin": [90, 91, 92, 93], "on_train_end": [90, 91, 92, 93], "set_model": [90, 91, 92, 93], "set_param": [90, 91, 92, 93], "_keras_api_nam": [90, 91, 92, 93], "_keras_api_names_v1": [90, 91, 92, 93], "wandbcallback": 91, "integr": 91, "collect": 91, "anyth": 91, "keras_model": 91, "summari": 91, "associ": 91, "monitor": 91, "minimum": 91, "gradient": 91, "maxim": 91, "try": 91, "guess": 91, "beat": 91, "previou": 91, "don": 91, "save_graph": 91, "boolean": 91, "graph": 91, "save_weights_onli": 91, "weight": 91, "save_weight": 91, "filepath": 91, "els": 91, "full": [91, 117], "log_weight": 91, "log_gradi": 91, "training_data": 91, "calcul": 91, "mandatori": [91, 110], "validation_data": 91, "make": 91, "small": 91, "In": 91, "case": 91, "you": [91, 117], "work": 91, "pleas": 91, "input_typ": 91, "output_typ": 91, "correctli": 91, "either": 91, "validate_data": 91, "specif": [91, 136], "validation_step": 91, "how": 91, "mani": 91, "label": [91, 132, 136], "your": 91, "numer": 91, "understand": 91, "multiclass": 91, "classifi": 91, "won": 91, "do": 91, "help": 91, "segmentation_mask": 91, "log_evalu": 91, "see": 91, "validation_index": 91, "validation_row_processor": 91, "output_row_processor": 91, "addit": 91, "detail": 91, "class_color": 91, "segment": 91, "mask": 91, "rang": 91, "log_batch_frequ": 91, "log_best_prefix": 91, "extra": 91, "prepend": 91, "data_typ": 91, "_tablelinkmixin": 91, "tablelinkmixin": 91, "most": 91, "common": 91, "wai": 91, "obtain": 91, "get_index": 91, "commonli": 91, "ndx": 91, "singl": [91, 110, 115, 117], "slot": 91, "take": 91, "target": 91, "wish": 91, "lambda": 91, "processor": 91, "ignor": 91, "present": 91, "infer_missing_processor": 91, "infer": [91, 95], "we": 91, "attempt": 91, "classif": 91, "appropri": 91, "log_evaluation_frequ": 91, "frequenc": 91, "so": 91, "effect": 91, "compute_flop": 91, "flop": 91, "sequenti": 91, "gigaflop": 91, "unit": [91, 127], "x_train": 91, "y_train": 91, "x_test": 91, "y_test": 91, "_attempt_evaluation_log": 91, "commit": [91, 104], "_build_grad_accumulator_model": 91, "_log_datafram": 91, "_log_gradi": 91, "_log_imag": 91, "num_imag": 91, "36": 91, "_log_weight": 91, "_logits_to_capt": 91, "logit": 91, "_masks_to_pixel": 91, "_save_model": 91, "_save_model_as_artifact": 91, "get_flop": 91, "gflop": 91, "It": 91, "v1": 91, "profil": 91, "under": 91, "hood": 91, "_encode_cont": 104, "from_byt": 104, "_get_url": [104, 117], "rout": [104, 117], "branch": 104, "remote_path": 104, "dest_path": 104, "get_lastest_job_run": 104, "jobid": 104, "list_dir": 104, "remot": 106, "get_url": [106, 112], "fileid": [106, 112], "is_mount": 106, "move": 106, "from_path": 106, "to_path": 106, "send": [106, 117], "send_dir": 106, "base_path": 106, "batch_download_rgb": [108, 114], "worker": [108, 110, 114, 117, 120, 125, 127], "download_rgb": [108, 114], "256": [108, 110, 114, 117], "height": [108, 110, 114], "opt": [108, 114], "batch_cutout": 110, "coordin": 110, "length": 110, "maximum": 110, "spawn": [110, 117], "download_legacy_rgb": 110, "cutout": [110, 114], "27": 110, "dr9": 110, "use_dev": 110, "fmt": [110, 117], "locat": [110, 117], "dev": 110, "env": 110, "One": 110, "batch_download_fit": 114, "rerun": 114, "camcol": 114, "field": 114, "crossmatch": 114, "search_typ": 114, "photo": 114, "search_radiu": 114, "02": 114, "chunk_siz": 114, "500": 114, "download_fit": [114, 117], "get_image_filenam": 114, "dr8objid": 114, "dr7objid": 114, "basepath": 114, "request": 115, "cloud": [115, 117], "server": [115, 117], "over": [115, 117], "donwload": [115, 117], "fast": 115, "multiprocess": 115, "async": 115, "queri": [115, 117, 120], "natanael": 115, "magalh\u00e3": 115, "cardoso": 115, "net": 115, "splu": [116, 117], "enum": 116, "interact": 117, "usernam": 117, "authent": [117, 118], "splus_us": 117, "variabl": 117, "password": 117, "splus_pass": 117, "_batch_download": 117, "download_funct": 117, "download_arg": 117, "theread": 117, "multipl": 117, "parallel": 117, "_download_imag": 117, "url": [117, 124, 125, 126], "_track_tap_job": 117, "batch_image_download": 117, "img_typ": 117, "imagetyp": 117, "posist": 117, "accept": 117, "custom": 117, "degre": 117, "download_lupton_rgb": 117, "download_trilogy_rgb": 117, "download_fits_rgb": 117, "These": 117, "mention": 117, "172": 117, "193": 117, "9": 117, "63": 117, "24": 117, "fig1": 117, "fig2": 117, "fig3": 117, "batch_queri": 117, "sql": 117, "scope": 117, "public": 117, "text": 117, "repalac": 117, "ovewrit": 117, "sava_path": 117, "skip": 117, "privat": 117, "assign": 117, "collabor": 117, "mimi": 117, "r": [117, 134], "r_band": 117, "g_band": 117, "b_band": 117, "stretch": 117, "q": 117, "8": [117, 134], "channel": 117, "formula": 117, "f861": 117, "z": 117, "f515": 117, "f660": 117, "u": 117, "f378": 117, "f395": 117, "f410": 117, "f430": 117, "algorithm": 117, "update_token": 117, "updat": [117, 118], "owner": 117, "f": 118, "decor": 118, "place": 118, "tap": 120, "batch_sync_queri": 120, "join_output": 120, "sync_queri": 120, "tensorboard": 122, "upload_asset": 122, "logdir": 122, "descript": 122, "query_param": 124, "http_client": [125, 126], "session": [125, 126], "extract": 126, "func": 127, "get_seri": 130, "median": 130, "get_std": 130, "has_std": 130, "table_": 131, "xlim": [131, 137], "ylim": [131, 137], "rel": 131, "y_true": 132, "y_pred": 132, "one_hot": 132, "train_seri": 133, "test_seri": 133, "blind_seri": 133, "min_rang": 133, "max_rang": 133, "xlabel": [133, 134], "ylabel": [133, 134], "loc": 133, "vline": 133, "n_fold": 134, "n_bin": 134, "color_map": [134, 135], "mag": 134, "count": 134, "titl": [134, 135], "figsiz": [134, 135], "legend_po": 134, "legend_col": 134, "6": 135, "true_seri": 136, "pred_seri": 136, "curv": 136, "zoom_rang": 136, "zoom_po": 136, "show": 136, "seri": 136, "rep": 136, "repetit": 136, "std": 136, "macro": 136, "micro": 136, "plote": 136, "averag": 136, "assert": 136, "len": 136, "mean_seri": 137, "error_seri": 137, "legend_loc": 137, "page": 139}, "objects": {"mergernet": [[0, 0, 0, "-", "core"], [31, 0, 0, "-", "data"], [68, 0, 0, "-", "estimators"], [79, 0, 0, "-", "jobs"], [84, 0, 0, "-", "model"], [102, 0, 0, "-", "services"], [128, 0, 0, "-", "visualization"]], "mergernet.core": [[1, 0, 0, "-", "constants"], [2, 0, 0, "-", "experiment"], [5, 0, 0, "-", "hp"], [13, 0, 0, "-", "logging"], [15, 0, 0, "-", "utils"]], "mergernet.core.experiment": [[3, 1, 1, "", "Experiment"], [4, 4, 1, "", "backup_model"]], "mergernet.core.experiment.Experiment": [[3, 1, 1, "", "Tracer"], [3, 2, 1, "", "_exp_created"], [3, 3, 1, "", "_post_run"], [3, 3, 1, "", "_pre_run"], [3, 2, 1, "", "_registered_artifacts"], [3, 3, 1, "", "_setup_experiment_attributes"], [3, 3, 1, "", "download_file_gd"], [3, 2, 1, "", "exp_id"], [3, 2, 1, "", "exp_name"], [3, 3, 1, "", "finish_wandb"], [3, 2, 1, "", "gd_exp_path"], [3, 2, 1, "", "gd_shared_path"], [3, 3, 1, "", "init_wandb"], [3, 2, 1, "", "local_exp_path"], [3, 2, 1, "", "local_shared_path"], [3, 2, 1, "", "notes"], [3, 3, 1, "", "register_artifact"], [3, 3, 1, "", "run"], [3, 3, 1, "", "upload_file_gd"], [3, 3, 1, "", "upload_registered_artifacts"]], "mergernet.core.hp": [[6, 1, 1, "", "CategoricalHyperParameter"], [7, 1, 1, "", "ConstantHyperParameter"], [8, 1, 1, "", "FloatHyperParameter"], [9, 1, 1, "", "HP"], [10, 1, 1, "", "HyperParameter"], [11, 1, 1, "", "HyperParameterSet"], [12, 1, 1, "", "IntHyperParameter"]], "mergernet.core.hp.CategoricalHyperParameter": [[6, 3, 1, "", "clear_last_value"], [6, 3, 1, "", "from_dict"], [6, 3, 1, "", "set_attr"], [6, 3, 1, "", "set_trial"], [6, 3, 1, "", "suggest"], [6, 3, 1, "", "to_dict"]], "mergernet.core.hp.ConstantHyperParameter": [[7, 3, 1, "", "clear_last_value"], [7, 3, 1, "", "from_dict"], [7, 3, 1, "", "set_attr"], [7, 3, 1, "", "set_trial"], [7, 3, 1, "", "suggest"], [7, 3, 1, "", "to_dict"]], "mergernet.core.hp.FloatHyperParameter": [[8, 3, 1, "", "clear_last_value"], [8, 3, 1, "", "from_dict"], [8, 3, 1, "", "set_attr"], [8, 3, 1, "", "set_trial"], [8, 3, 1, "", "suggest"], [8, 3, 1, "", "to_dict"]], "mergernet.core.hp.HP": [[9, 3, 1, "", "cat"], [9, 3, 1, "", "const"], [9, 3, 1, "", "num"]], "mergernet.core.hp.HyperParameter": [[10, 3, 1, "", "clear_last_value"], [10, 3, 1, "", "from_dict"], [10, 3, 1, "", "set_attr"], [10, 3, 1, "", "set_trial"], [10, 3, 1, "", "suggest"], [10, 3, 1, "", "to_dict"]], "mergernet.core.hp.HyperParameterSet": [[11, 3, 1, "", "add"], [11, 3, 1, "", "clear_values_dict"], [11, 3, 1, "", "get"], [11, 3, 1, "", "set_trial"], [11, 3, 1, "", "to_values_dict"]], "mergernet.core.hp.IntHyperParameter": [[12, 3, 1, "", "clear_last_value"], [12, 3, 1, "", "from_dict"], [12, 3, 1, "", "set_attr"], [12, 3, 1, "", "set_trial"], [12, 3, 1, "", "suggest"], [12, 3, 1, "", "to_dict"]], "mergernet.core.logging": [[14, 4, 1, "", "configure_root_logger"]], "mergernet.core.utils": [[16, 1, 1, "", "CachedDataFrame"], [17, 1, 1, "", "SingletonMeta"], [18, 1, 1, "", "Timming"], [19, 4, 1, "", "array_fallback"], [20, 1, 1, "", "classproperty"], [21, 4, 1, "", "deep_update"], [22, 4, 1, "", "find_by_value"], [23, 4, 1, "", "heading"], [24, 4, 1, "", "iauname"], [25, 4, 1, "", "load_image"], [26, 4, 1, "", "load_table"], [27, 4, 1, "", "not_in"], [28, 4, 1, "", "save_table"], [29, 4, 1, "", "serialize"], [30, 4, 1, "", "unique_path"]], "mergernet.core.utils.CachedDataFrame": [[16, 2, 1, "", "_cache"], [16, 3, 1, "", "load"]], "mergernet.core.utils.SingletonMeta": [[17, 3, 1, "", "__new__"], [17, 2, 1, "", "_instances"], [17, 2, 1, "", "_lock"], [17, 3, 1, "", "mro"]], "mergernet.core.utils.Timming": [[18, 3, 1, "", "_format_time"], [18, 3, 1, "", "duration"], [18, 3, 1, "", "end"], [18, 3, 1, "", "start"]], "mergernet.core.utils.classproperty": [[20, 3, 1, "", "__new__"], [20, 3, 1, "", "deleter"], [20, 2, 1, "", "fdel"], [20, 2, 1, "", "fget"], [20, 2, 1, "", "fset"], [20, 3, 1, "", "getter"], [20, 3, 1, "", "setter"]], "mergernet.data": [[32, 0, 0, "-", "dataset"], [34, 0, 0, "-", "dataset_config"], [37, 0, 0, "-", "image"], [39, 0, 0, "-", "kfold"], [42, 0, 0, "-", "match"], [46, 0, 0, "-", "preprocessing"], [52, 0, 0, "-", "rgb"], [54, 0, 0, "-", "sanitization"], [56, 0, 0, "-", "trilogy"]], "mergernet.data.dataset": [[33, 1, 1, "", "Dataset"]], "mergernet.data.dataset.Dataset": [[33, 3, 1, "", "_create_table_for_preds_dataset"], [33, 3, 1, "", "_detect_img_extension"], [33, 3, 1, "", "_discretize_label"], [33, 3, 1, "", "compute_class_weight"], [33, 3, 1, "", "concat_fold_column"], [33, 3, 1, "", "download"], [33, 3, 1, "", "get_X"], [33, 3, 1, "", "get_X_by_fold"], [33, 3, 1, "", "get_fold"], [33, 3, 1, "", "get_images_paths"], [33, 3, 1, "", "get_preds_dataset"], [33, 3, 1, "", "is_dataset_downloaded"], [33, 3, 1, "", "prepare_data"], [33, 2, 1, "", "registry"]], "mergernet.data.dataset_config": [[35, 1, 1, "", "DatasetConfig"], [36, 1, 1, "", "DatasetRegistry"]], "mergernet.data.dataset_config.DatasetRegistry": [[36, 2, 1, "", "BIN_LEGACY_NORTH_RGB_128"], [36, 2, 1, "", "BIN_SDSS_128"], [36, 2, 1, "", "BLIND_SPLUS_GAL80_LS10_RGB_128"], [36, 2, 1, "", "BLIND_SPLUS_LUPTON_128"], [36, 2, 1, "", "BLIND_SPLUS_LUPTON_150"], [36, 2, 1, "", "BLIND_SPLUS_TRILOGY_128"], [36, 2, 1, "", "BLIND_SPLUS_TRILOGY_150"], [36, 2, 1, "", "DARG_NO_INSPECTION"], [36, 2, 1, "", "MESD_LEGACY_128"], [36, 2, 1, "", "MESD_SDSS_128"]], "mergernet.data.image": [[38, 1, 1, "", "ColorImage"]], "mergernet.data.image.ColorImage": [[38, 3, 1, "", "asinh_map"], [38, 3, 1, "", "asinh_map2"], [38, 3, 1, "", "batch_legacy_rgb"], [38, 3, 1, "", "legacy_rgb"], [38, 3, 1, "", "lupton_rgb"]], "mergernet.data.kfold": [[40, 1, 1, "", "DistributionKFold"], [41, 1, 1, "", "StratifiedDistributionKFold"]], "mergernet.data.kfold.DistributionKFold": [[40, 3, 1, "", "split"]], "mergernet.data.kfold.StratifiedDistributionKFold": [[41, 3, 1, "", "compute_max_bins"], [41, 3, 1, "", "split_all"], [41, 3, 1, "", "split_ids"]], "mergernet.data.match": [[43, 1, 1, "", "CrossMatch"], [44, 1, 1, "", "CrossMatchResult"], [45, 1, 1, "", "XTable"]], "mergernet.data.match.CrossMatch": [[43, 3, 1, "", "crossmatch"], [43, 3, 1, "", "pair_match"], [43, 3, 1, "", "unique"]], "mergernet.data.match.CrossMatchResult": [[44, 2, 1, "", "distance"], [44, 2, 1, "", "primary_idx"], [44, 2, 1, "", "secondary_idx"], [44, 2, 1, "", "table"]], "mergernet.data.match.XTable": [[45, 3, 1, "", "get_coords"], [45, 3, 1, "", "to_df"]], "mergernet.data.preprocessing": [[47, 4, 1, "", "load_jpg"], [48, 4, 1, "", "load_png"], [49, 4, 1, "", "normalize_rgb"], [50, 4, 1, "", "one_hot_factory"], [51, 4, 1, "", "standardize_rgb"]], "mergernet.data.rgb": [[53, 1, 1, "", "RGB"]], "mergernet.data.rgb.RGB": [[53, 3, 1, "", "make_trilogy_fits"], [53, 3, 1, "", "trilogy_fits_to_png"]], "mergernet.data.sanitization": [[55, 1, 1, "", "DatasetSanitization"]], "mergernet.data.sanitization.DatasetSanitization": [[55, 3, 1, "", "check_images"], [55, 3, 1, "", "drop_images_by_filesize"], [55, 3, 1, "", "drop_images_by_iauname"], [55, 3, 1, "", "filesize_histogram"], [55, 3, 1, "", "get_filesize_distribution"], [55, 3, 1, "", "get_iauname_by_filesize"], [55, 3, 1, "", "sample"], [55, 3, 1, "", "sanitize"]], "mergernet.data.trilogy": [[57, 1, 1, "", "MakeImg"], [58, 4, 1, "", "RGB2im"], [59, 4, 1, "", "adjust_saturation"], [60, 4, 1, "", "da"], [61, 4, 1, "", "get_clip"], [62, 4, 1, "", "get_levels"], [63, 4, 1, "", "imscale"], [64, 4, 1, "", "meanstd"], [65, 4, 1, "", "rms"], [66, 4, 1, "", "satK2m"], [67, 4, 1, "", "setLevel"]], "mergernet.data.trilogy.MakeImg": [[57, 3, 1, "", "color"], [57, 3, 1, "", "get_array"], [57, 3, 1, "", "savefig"]], "mergernet.estimators": [[69, 0, 0, "-", "automl"], [71, 0, 0, "-", "base"], [75, 0, 0, "-", "decals"], [77, 0, 0, "-", "parametric"]], "mergernet.estimators.automl": [[70, 1, 1, "", "OptunaEstimator"]], "mergernet.estimators.automl.OptunaEstimator": [[70, 2, 1, "", "_abc_impl"], [70, 3, 1, "", "_objective"], [70, 3, 1, "", "build"], [70, 3, 1, "", "compile_model"], [70, 3, 1, "", "download"], [70, 3, 1, "", "get_conv_arch"], [70, 3, 1, "", "get_dataaug_block"], [70, 3, 1, "", "plot"], [70, 3, 1, "", "predict"], [70, 2, 1, "", "registry"], [70, 3, 1, "", "set_trainable"], [70, 5, 1, "", "tf_model"], [70, 3, 1, "", "train"]], "mergernet.estimators.base": [[72, 1, 1, "", "Estimator"], [73, 1, 1, "", "EstimatorConfig"], [74, 1, 1, "", "EstimatorRegistry"]], "mergernet.estimators.base.Estimator": [[72, 2, 1, "", "_abc_impl"], [72, 3, 1, "", "build"], [72, 3, 1, "", "compile_model"], [72, 3, 1, "", "download"], [72, 3, 1, "", "get_conv_arch"], [72, 3, 1, "", "get_dataaug_block"], [72, 3, 1, "", "plot"], [72, 3, 1, "", "predict"], [72, 2, 1, "", "registry"], [72, 3, 1, "", "set_trainable"], [72, 5, 1, "", "tf_model"], [72, 3, 1, "", "train"]], "mergernet.estimators.base.EstimatorRegistry": [[74, 2, 1, "", "ZOOBOT_GREYSCALE"], [74, 2, 1, "", "ZOOBOT_RGB"]], "mergernet.estimators.decals": [[76, 1, 1, "", "ZoobotEstimator"]], "mergernet.estimators.decals.ZoobotEstimator": [[76, 2, 1, "", "_abc_impl"], [76, 3, 1, "", "_prepare_dataset"], [76, 3, 1, "", "build"], [76, 3, 1, "", "cnn_representations"], [76, 3, 1, "", "compile_model"], [76, 3, 1, "", "download"], [76, 3, 1, "", "get_conv_arch"], [76, 3, 1, "", "get_dataaug_block"], [76, 3, 1, "", "pca"], [76, 3, 1, "", "plot"], [76, 3, 1, "", "predict"], [76, 2, 1, "", "registry"], [76, 3, 1, "", "set_trainable"], [76, 5, 1, "", "tf_model"], [76, 3, 1, "", "train"]], "mergernet.estimators.parametric": [[78, 1, 1, "", "ParametricEstimator"]], "mergernet.estimators.parametric.ParametricEstimator": [[78, 2, 1, "", "_abc_impl"], [78, 3, 1, "", "build"], [78, 3, 1, "", "compile_model"], [78, 3, 1, "", "download"], [78, 3, 1, "", "get_conv_arch"], [78, 3, 1, "", "get_dataaug_block"], [78, 3, 1, "", "plot"], [78, 3, 1, "", "predict"], [78, 2, 1, "", "registry"], [78, 3, 1, "", "set_trainable"], [78, 5, 1, "", "tf_model"], [78, 3, 1, "", "train"]], "mergernet.jobs": [[80, 0, 0, "-", "j005"], [82, 0, 0, "-", "j006"]], "mergernet.jobs.j005": [[81, 1, 1, "", "Job"]], "mergernet.jobs.j005.Job": [[81, 1, 1, "", "Tracer"], [81, 2, 1, "", "_exp_created"], [81, 3, 1, "", "_post_run"], [81, 3, 1, "", "_pre_run"], [81, 2, 1, "", "_registered_artifacts"], [81, 3, 1, "", "_setup_experiment_attributes"], [81, 3, 1, "", "call"], [81, 3, 1, "", "download_file_gd"], [81, 2, 1, "", "exp_id"], [81, 2, 1, "", "exp_name"], [81, 3, 1, "", "finish_wandb"], [81, 2, 1, "", "gd_exp_path"], [81, 2, 1, "", "gd_shared_path"], [81, 3, 1, "", "init_wandb"], [81, 2, 1, "", "local_exp_path"], [81, 2, 1, "", "local_shared_path"], [81, 2, 1, "", "notes"], [81, 3, 1, "", "register_artifact"], [81, 3, 1, "", "run"], [81, 3, 1, "", "upload_file_gd"], [81, 3, 1, "", "upload_registered_artifacts"]], "mergernet.jobs.j006": [[83, 1, 1, "", "Job"]], "mergernet.jobs.j006.Job": [[83, 1, 1, "", "Tracer"], [83, 2, 1, "", "_exp_created"], [83, 3, 1, "", "_post_run"], [83, 3, 1, "", "_pre_run"], [83, 2, 1, "", "_registered_artifacts"], [83, 3, 1, "", "_setup_experiment_attributes"], [83, 3, 1, "", "call"], [83, 3, 1, "", "download_file_gd"], [83, 2, 1, "", "exp_id"], [83, 2, 1, "", "exp_name"], [83, 3, 1, "", "finish_wandb"], [83, 2, 1, "", "gd_exp_path"], [83, 2, 1, "", "gd_shared_path"], [83, 3, 1, "", "init_wandb"], [83, 2, 1, "", "local_exp_path"], [83, 2, 1, "", "local_shared_path"], [83, 2, 1, "", "notes"], [83, 3, 1, "", "register_artifact"], [83, 3, 1, "", "run"], [83, 3, 1, "", "upload_file_gd"], [83, 3, 1, "", "upload_registered_artifacts"]], "mergernet.model": [[85, 0, 0, "-", "automl"], [87, 0, 0, "-", "baseline"], [89, 0, 0, "-", "callbacks"], [94, 0, 0, "-", "inference"], [96, 0, 0, "-", "utils"]], "mergernet.model.automl": [[86, 4, 1, "", "optuna_train"]], "mergernet.model.baseline": [[88, 4, 1, "", "finetune_train"]], "mergernet.model.callbacks": [[90, 1, 1, "", "DeltaStopping"], [91, 1, 1, "", "MyWandbCallback"], [92, 1, 1, "", "PruneCallback"], [93, 1, 1, "", "SaveBestTrialCallback"]], "mergernet.model.callbacks.DeltaStopping": [[90, 3, 1, "", "_implements_predict_batch_hooks"], [90, 3, 1, "", "_implements_test_batch_hooks"], [90, 3, 1, "", "_implements_train_batch_hooks"], [90, 2, 1, "", "_keras_api_names"], [90, 2, 1, "", "_keras_api_names_v1"], [90, 3, 1, "", "on_batch_begin"], [90, 3, 1, "", "on_batch_end"], [90, 3, 1, "", "on_epoch_begin"], [90, 3, 1, "", "on_epoch_end"], [90, 3, 1, "", "on_predict_batch_begin"], [90, 3, 1, "", "on_predict_batch_end"], [90, 3, 1, "", "on_predict_begin"], [90, 3, 1, "", "on_predict_end"], [90, 3, 1, "", "on_test_batch_begin"], [90, 3, 1, "", "on_test_batch_end"], [90, 3, 1, "", "on_test_begin"], [90, 3, 1, "", "on_test_end"], [90, 3, 1, "", "on_train_batch_begin"], [90, 3, 1, "", "on_train_batch_end"], [90, 3, 1, "", "on_train_begin"], [90, 3, 1, "", "on_train_end"], [90, 3, 1, "", "set_model"], [90, 3, 1, "", "set_params"]], "mergernet.model.callbacks.MyWandbCallback": [[91, 3, 1, "", "_attempt_evaluation_log"], [91, 3, 1, "", "_build_grad_accumulator_model"], [91, 3, 1, "", "_implements_predict_batch_hooks"], [91, 3, 1, "", "_implements_test_batch_hooks"], [91, 3, 1, "", "_implements_train_batch_hooks"], [91, 2, 1, "", "_keras_api_names"], [91, 2, 1, "", "_keras_api_names_v1"], [91, 3, 1, "", "_log_dataframe"], [91, 3, 1, "", "_log_gradients"], [91, 3, 1, "", "_log_images"], [91, 3, 1, "", "_log_weights"], [91, 3, 1, "", "_logits_to_captions"], [91, 3, 1, "", "_masks_to_pixels"], [91, 3, 1, "", "_save_model"], [91, 3, 1, "", "_save_model_as_artifact"], [91, 3, 1, "", "get_flops"], [91, 3, 1, "", "on_batch_begin"], [91, 3, 1, "", "on_batch_end"], [91, 3, 1, "", "on_epoch_begin"], [91, 3, 1, "", "on_epoch_end"], [91, 3, 1, "", "on_predict_batch_begin"], [91, 3, 1, "", "on_predict_batch_end"], [91, 3, 1, "", "on_predict_begin"], [91, 3, 1, "", "on_predict_end"], [91, 3, 1, "", "on_test_batch_begin"], [91, 3, 1, "", "on_test_batch_end"], [91, 3, 1, "", "on_test_begin"], [91, 3, 1, "", "on_test_end"], [91, 3, 1, "", "on_train_batch_begin"], [91, 3, 1, "", "on_train_batch_end"], [91, 3, 1, "", "on_train_begin"], [91, 3, 1, "", "on_train_end"], [91, 3, 1, "", "set_model"], [91, 3, 1, "", "set_params"]], "mergernet.model.callbacks.PruneCallback": [[92, 3, 1, "", "_implements_predict_batch_hooks"], [92, 3, 1, "", "_implements_test_batch_hooks"], [92, 3, 1, "", "_implements_train_batch_hooks"], [92, 2, 1, "", "_keras_api_names"], [92, 2, 1, "", "_keras_api_names_v1"], [92, 3, 1, "", "on_batch_begin"], [92, 3, 1, "", "on_batch_end"], [92, 3, 1, "", "on_epoch_begin"], [92, 3, 1, "", "on_epoch_end"], [92, 3, 1, "", "on_predict_batch_begin"], [92, 3, 1, "", "on_predict_batch_end"], [92, 3, 1, "", "on_predict_begin"], [92, 3, 1, "", "on_predict_end"], [92, 3, 1, "", "on_test_batch_begin"], [92, 3, 1, "", "on_test_batch_end"], [92, 3, 1, "", "on_test_begin"], [92, 3, 1, "", "on_test_end"], [92, 3, 1, "", "on_train_batch_begin"], [92, 3, 1, "", "on_train_batch_end"], [92, 3, 1, "", "on_train_begin"], [92, 3, 1, "", "on_train_end"], [92, 3, 1, "", "set_model"], [92, 3, 1, "", "set_params"]], "mergernet.model.callbacks.SaveBestTrialCallback": [[93, 3, 1, "", "_implements_predict_batch_hooks"], [93, 3, 1, "", "_implements_test_batch_hooks"], [93, 3, 1, "", "_implements_train_batch_hooks"], [93, 2, 1, "", "_keras_api_names"], [93, 2, 1, "", "_keras_api_names_v1"], [93, 3, 1, "", "on_batch_begin"], [93, 3, 1, "", "on_batch_end"], [93, 3, 1, "", "on_epoch_begin"], [93, 3, 1, "", "on_epoch_end"], [93, 3, 1, "", "on_predict_batch_begin"], [93, 3, 1, "", "on_predict_batch_end"], [93, 3, 1, "", "on_predict_begin"], [93, 3, 1, "", "on_predict_end"], [93, 3, 1, "", "on_test_batch_begin"], [93, 3, 1, "", "on_test_batch_end"], [93, 3, 1, "", "on_test_begin"], [93, 3, 1, "", "on_test_end"], [93, 3, 1, "", "on_train_batch_begin"], [93, 3, 1, "", "on_train_batch_end"], [93, 3, 1, "", "on_train_begin"], [93, 3, 1, "", "on_train_end"], [93, 3, 1, "", "set_model"], [93, 3, 1, "", "set_params"]], "mergernet.model.inference": [[95, 1, 1, "", "Predictor"]], "mergernet.model.inference.Predictor": [[95, 3, 1, "", "predict"], [95, 3, 1, "", "upload"]], "mergernet.model.utils": [[97, 4, 1, "", "get_conv_arch"], [98, 4, 1, "", "history_to_dataframe"], [99, 4, 1, "", "load_model"], [100, 4, 1, "", "set_trainable_state"], [101, 4, 1, "", "setup_seeds"]], "mergernet.services": [[103, 0, 0, "-", "github"], [105, 0, 0, "-", "google"], [107, 0, 0, "-", "imaging"], [109, 0, 0, "-", "legacy"], [111, 0, 0, "-", "sciserver"], [113, 0, 0, "-", "sdss"], [115, 0, 0, "-", "splus"], [119, 0, 0, "-", "tap"], [121, 0, 0, "-", "tensorboard"], [123, 0, 0, "-", "utils"]], "mergernet.services.github": [[104, 1, 1, "", "GithubService"]], "mergernet.services.github.GithubService": [[104, 3, 1, "", "_encode_content"], [104, 3, 1, "", "_get_url"], [104, 3, 1, "", "commit"], [104, 3, 1, "", "download"], [104, 3, 1, "", "get_lastest_job_run"], [104, 3, 1, "", "list_dir"]], "mergernet.services.google": [[106, 1, 1, "", "GDrive"]], "mergernet.services.google.GDrive": [[106, 2, 1, "", "base_path"], [106, 3, 1, "", "exists"], [106, 3, 1, "", "get"], [106, 3, 1, "", "get_url"], [106, 3, 1, "", "is_mounted"], [106, 3, 1, "", "move"], [106, 3, 1, "", "send"], [106, 3, 1, "", "send_dir"]], "mergernet.services.imaging": [[108, 1, 1, "", "BaseImagingService"]], "mergernet.services.imaging.BaseImagingService": [[108, 2, 1, "", "_abc_impl"], [108, 3, 1, "", "batch_download_rgb"], [108, 3, 1, "", "download_rgb"]], "mergernet.services.legacy": [[110, 1, 1, "", "LegacyService"]], "mergernet.services.legacy.LegacyService": [[110, 3, 1, "", "batch_cutout"], [110, 3, 1, "", "cutout"]], "mergernet.services.sciserver": [[112, 1, 1, "", "SciServer"]], "mergernet.services.sciserver.SciServer": [[112, 3, 1, "", "get_url"]], "mergernet.services.sdss": [[114, 1, 1, "", "SloanService"]], "mergernet.services.sdss.SloanService": [[114, 3, 1, "", "batch_download_fits"], [114, 3, 1, "", "batch_download_rgb"], [114, 3, 1, "", "crossmatch"], [114, 3, 1, "", "cutout"], [114, 3, 1, "", "download_fits"], [114, 3, 1, "", "download_rgb"], [114, 3, 1, "", "get_image_filename"]], "mergernet.services.splus": [[116, 1, 1, "", "ImageType"], [117, 1, 1, "", "SplusService"], [118, 4, 1, "", "update_authorization"]], "mergernet.services.splus.ImageType": [[116, 2, 1, "", "fits"], [116, 2, 1, "", "lupton"], [116, 2, 1, "", "trilogy"]], "mergernet.services.splus.SplusService": [[117, 3, 1, "", "_batch_download"], [117, 3, 1, "", "_download_image"], [117, 3, 1, "", "_get_url"], [117, 2, 1, "", "_lock"], [117, 3, 1, "", "_track_tap_job"], [117, 3, 1, "", "batch_image_download"], [117, 3, 1, "", "batch_query"], [117, 3, 1, "", "download_fits"], [117, 3, 1, "", "download_lupton_rgb"], [117, 3, 1, "", "download_trilogy_rgb"], [117, 3, 1, "", "query"], [117, 3, 1, "", "update_token"]], "mergernet.services.tap": [[120, 1, 1, "", "TapService"]], "mergernet.services.tap.TapService": [[120, 3, 1, "", "batch_sync_query"], [120, 3, 1, "", "sync_query"]], "mergernet.services.tensorboard": [[122, 1, 1, "", "TensorboardService"]], "mergernet.services.tensorboard.TensorboardService": [[122, 3, 1, "", "upload_assets"]], "mergernet.services.utils": [[124, 4, 1, "", "append_query_params"], [125, 4, 1, "", "batch_download_file"], [126, 4, 1, "", "download_file"], [127, 4, 1, "", "parallel_function_executor"]], "mergernet.visualization": [[129, 0, 0, "-", "plot"]], "mergernet.visualization.plot": [[130, 1, 1, "", "Serie"], [131, 4, 1, "", "color_color"], [132, 4, 1, "", "conf_matrix"], [133, 4, 1, "", "data_distribution"], [134, 4, 1, "", "mag_class_distribution"], [135, 4, 1, "", "object_position"], [136, 4, 1, "", "roc"], [137, 4, 1, "", "train_metrics"]], "mergernet.visualization.plot.Serie": [[130, 3, 1, "", "get_serie"], [130, 3, 1, "", "get_std"], [130, 3, 1, "", "has_std"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"mergernet": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 42, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 111, 113, 115, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139], "core": [0, 1, 2, 4, 5, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "constant": 1, "experi": [2, 3, 4, 138], "backup_model": 4, "hp": [5, 9], "categoricalhyperparamet": 6, "constanthyperparamet": 7, "floathyperparamet": 8, "hyperparamet": 10, "hyperparameterset": 11, "inthyperparamet": 12, "log": [13, 14], "configure_root_logg": 14, "util": [15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 96, 97, 98, 99, 100, 101, 123, 124, 125, 126, 127], "cacheddatafram": 16, "singletonmeta": 17, "tim": 18, "array_fallback": 19, "classproperti": 20, "deep_upd": 21, "find_by_valu": 22, "head": 23, "iaunam": 24, "exampl": [24, 91, 117], "load_imag": 25, "load_tabl": 26, "not_in": 27, "save_t": 28, "serial": 29, "unique_path": 30, "data": [31, 32, 34, 37, 39, 42, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "dataset": [32, 33], "dataset_config": 34, "datasetconfig": 35, "datasetregistri": 36, "imag": [37, 107], "colorimag": 38, "kfold": 39, "distributionkfold": 40, "stratifieddistributionkfold": 41, "match": 42, "crossmatch": 43, "crossmatchresult": 44, "xtabl": 45, "preprocess": [46, 47, 48, 49, 50, 51], "load_jpg": 47, "load_png": 48, "normalize_rgb": 49, "one_hot_factori": 50, "standardize_rgb": 51, "rgb": [52, 53], "sanit": 54, "datasetsanit": 55, "trilogi": [56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "makeimg": 57, "rgb2im": 58, "adjust_satur": 59, "da": 60, "get_clip": 61, "get_level": 62, "imscal": 63, "meanstd": 64, "rm": 65, "satk2m": 66, "setlevel": 67, "estim": [68, 69, 71, 72, 75, 77], "automl": [69, 85, 86], "optunaestim": 70, "base": 71, "estimatorconfig": 73, "estimatorregistri": 74, "decal": 75, "zoobotestim": 76, "parametr": 77, "parametricestim": 78, "job": [79, 80, 81, 82, 83], "j005": 80, "j006": 82, "model": [84, 85, 86, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101], "optuna_train": 86, "baselin": [87, 88], "finetune_train": 88, "callback": 89, "deltastop": 90, "mywandbcallback": 91, "prunecallback": 92, "savebesttrialcallback": 93, "infer": 94, "predictor": 95, "get_conv_arch": 97, "history_to_datafram": 98, "load_model": 99, "set_trainable_st": 100, "setup_se": 101, "servic": [102, 103, 105, 107, 109, 111, 113, 115, 118, 119, 121, 123, 124, 125, 126, 127], "github": 103, "githubservic": 104, "googl": 105, "gdrive": 106, "baseimagingservic": 108, "legaci": 109, "legacyservic": 110, "sciserv": [111, 112], "sdss": 113, "sloanservic": 114, "splu": [115, 118], "featur": 115, "author": 115, "imagetyp": 116, "splusservic": 117, "update_author": 118, "tap": 119, "tapservic": 120, "tensorboard": 121, "tensorboardservic": 122, "append_query_param": 124, "batch_download_fil": 125, "download_fil": 126, "parallel_function_executor": 127, "visual": [128, 129, 131, 132, 133, 134, 135, 136, 137], "plot": [129, 131, 132, 133, 134, 135, 136, 137], "seri": 130, "color_color": 131, "conf_matrix": 132, "data_distribut": 133, "mag_class_distribut": 134, "object_posit": 135, "roc": 136, "note": 136, "train_metr": 137, "welcom": 139, "": 139, "document": 139, "content": 139, "indic": 139, "tabl": 139, "api": 140, "refer": 140}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"mergernet.core": [[0, "module-mergernet.core"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "Experiment": [[3, "experiment"]], "mergernet.core.experiment.backup_model": [[4, "mergernet-core-experiment-backup-model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "CategoricalHyperParameter": [[6, "categoricalhyperparameter"]], "ConstantHyperParameter": [[7, "constanthyperparameter"]], "FloatHyperParameter": [[8, "floathyperparameter"]], "HP": [[9, "hp"]], "HyperParameter": [[10, "hyperparameter"]], "HyperParameterSet": [[11, "hyperparameterset"]], "IntHyperParameter": [[12, "inthyperparameter"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "mergernet.core.logging.configure_root_logger": [[14, "mergernet-core-logging-configure-root-logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "CachedDataFrame": [[16, "cacheddataframe"]], "SingletonMeta": [[17, "singletonmeta"]], "Timming": [[18, "timming"]], "mergernet.core.utils.array_fallback": [[19, "mergernet-core-utils-array-fallback"]], "classproperty": [[20, "classproperty"]], "mergernet.core.utils.deep_update": [[21, "mergernet-core-utils-deep-update"]], "mergernet.core.utils.find_by_value": [[22, "mergernet-core-utils-find-by-value"]], "mergernet.core.utils.heading": [[23, "mergernet-core-utils-heading"]], "mergernet.core.utils.iauname": [[24, "mergernet-core-utils-iauname"]], "Example": [[24, null]], "mergernet.core.utils.load_image": [[25, "mergernet-core-utils-load-image"]], "mergernet.core.utils.load_table": [[26, "mergernet-core-utils-load-table"]], "mergernet.core.utils.not_in": [[27, "mergernet-core-utils-not-in"]], "mergernet.core.utils.save_table": [[28, "mergernet-core-utils-save-table"]], "mergernet.core.utils.serialize": [[29, "mergernet-core-utils-serialize"]], "mergernet.core.utils.unique_path": [[30, "mergernet-core-utils-unique-path"]], "mergernet.data": [[31, "module-mergernet.data"]], "mergernet.data.dataset": [[32, "module-mergernet.data.dataset"]], "Dataset": [[33, "dataset"]], "mergernet.data.dataset_config": [[34, "module-mergernet.data.dataset_config"]], "DatasetConfig": [[35, "datasetconfig"]], "DatasetRegistry": [[36, "datasetregistry"]], "mergernet.data.image": [[37, "module-mergernet.data.image"]], "ColorImage": [[38, "colorimage"]], "mergernet.data.kfold": [[39, "module-mergernet.data.kfold"]], "DistributionKFold": [[40, "distributionkfold"]], "StratifiedDistributionKFold": [[41, "stratifieddistributionkfold"]], "mergernet.data.match": [[42, "module-mergernet.data.match"]], "CrossMatch": [[43, "crossmatch"]], "CrossMatchResult": [[44, "crossmatchresult"]], "XTable": [[45, "xtable"]], "mergernet.data.preprocessing": [[46, "module-mergernet.data.preprocessing"]], "mergernet.data.preprocessing.load_jpg": [[47, "mergernet-data-preprocessing-load-jpg"]], "mergernet.data.preprocessing.load_png": [[48, "mergernet-data-preprocessing-load-png"]], "mergernet.data.preprocessing.normalize_rgb": [[49, "mergernet-data-preprocessing-normalize-rgb"]], "mergernet.data.preprocessing.one_hot_factory": [[50, "mergernet-data-preprocessing-one-hot-factory"]], "mergernet.data.preprocessing.standardize_rgb": [[51, "mergernet-data-preprocessing-standardize-rgb"]], "mergernet.data.rgb": [[52, "module-mergernet.data.rgb"]], "RGB": [[53, "rgb"]], "mergernet.data.sanitization": [[54, "module-mergernet.data.sanitization"]], "DatasetSanitization": [[55, "datasetsanitization"]], "mergernet.data.trilogy": [[56, "module-mergernet.data.trilogy"]], "MakeImg": [[57, "makeimg"]], "mergernet.data.trilogy.RGB2im": [[58, "mergernet-data-trilogy-rgb2im"]], "mergernet.data.trilogy.adjust_saturation": [[59, "mergernet-data-trilogy-adjust-saturation"]], "mergernet.data.trilogy.da": [[60, "mergernet-data-trilogy-da"]], "mergernet.data.trilogy.get_clip": [[61, "mergernet-data-trilogy-get-clip"]], "mergernet.data.trilogy.get_levels": [[62, "mergernet-data-trilogy-get-levels"]], "mergernet.data.trilogy.imscale": [[63, "mergernet-data-trilogy-imscale"]], "mergernet.data.trilogy.meanstd": [[64, "mergernet-data-trilogy-meanstd"]], "mergernet.data.trilogy.rms": [[65, "mergernet-data-trilogy-rms"]], "mergernet.data.trilogy.satK2m": [[66, "mergernet-data-trilogy-satk2m"]], "mergernet.data.trilogy.setLevel": [[67, "mergernet-data-trilogy-setlevel"]], "mergernet.estimators": [[68, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[69, "module-mergernet.estimators.automl"]], "OptunaEstimator": [[70, "optunaestimator"]], "mergernet.estimators.base": [[71, "module-mergernet.estimators.base"]], "Estimator": [[72, "estimator"]], "EstimatorConfig": [[73, "estimatorconfig"]], "EstimatorRegistry": [[74, "estimatorregistry"]], "mergernet.estimators.decals": [[75, "module-mergernet.estimators.decals"]], "ZoobotEstimator": [[76, "zoobotestimator"]], "mergernet.estimators.parametric": [[77, "module-mergernet.estimators.parametric"]], "ParametricEstimator": [[78, "parametricestimator"]], "mergernet.jobs": [[79, "module-mergernet.jobs"]], "mergernet.jobs.j005": [[80, "module-mergernet.jobs.j005"]], "Job": [[81, "job"], [83, "job"]], "mergernet.jobs.j006": [[82, "module-mergernet.jobs.j006"]], "mergernet.model": [[84, "module-mergernet.model"]], "mergernet.model.automl": [[85, "module-mergernet.model.automl"]], "mergernet.model.automl.optuna_train": [[86, "mergernet-model-automl-optuna-train"]], "mergernet.model.baseline": [[87, "module-mergernet.model.baseline"]], "mergernet.model.baseline.finetune_train": [[88, "mergernet-model-baseline-finetune-train"]], "mergernet.model.callbacks": [[89, "module-mergernet.model.callbacks"]], "DeltaStopping": [[90, "deltastopping"]], "MyWandbCallback": [[91, "mywandbcallback"]], "Examples": [[91, null], [117, null]], "PruneCallback": [[92, "prunecallback"]], "SaveBestTrialCallback": [[93, "savebesttrialcallback"]], "mergernet.model.inference": [[94, "module-mergernet.model.inference"]], "Predictor": [[95, "predictor"]], "mergernet.model.utils": [[96, "module-mergernet.model.utils"]], "mergernet.model.utils.get_conv_arch": [[97, "mergernet-model-utils-get-conv-arch"]], "mergernet.model.utils.history_to_dataframe": [[98, "mergernet-model-utils-history-to-dataframe"]], "mergernet.model.utils.load_model": [[99, "mergernet-model-utils-load-model"]], "mergernet.model.utils.set_trainable_state": [[100, "mergernet-model-utils-set-trainable-state"]], "mergernet.model.utils.setup_seeds": [[101, "mergernet-model-utils-setup-seeds"]], "mergernet.services": [[102, "module-mergernet.services"]], "mergernet.services.github": [[103, "module-mergernet.services.github"]], "GithubService": [[104, "githubservice"]], "mergernet.services.google": [[105, "module-mergernet.services.google"]], "GDrive": [[106, "gdrive"]], "mergernet.services.imaging": [[107, "module-mergernet.services.imaging"]], "BaseImagingService": [[108, "baseimagingservice"]], "mergernet.services.legacy": [[109, "module-mergernet.services.legacy"]], "LegacyService": [[110, "legacyservice"]], "mergernet.services.sciserver": [[111, "module-mergernet.services.sciserver"]], "SciServer": [[112, "sciserver"]], "mergernet.services.sdss": [[113, "module-mergernet.services.sdss"]], "SloanService": [[114, "sloanservice"]], "mergernet.services.splus": [[115, "module-mergernet.services.splus"]], "Features": [[115, "features"]], "Authors": [[115, "authors"]], "ImageType": [[116, "imagetype"]], "SplusService": [[117, "splusservice"]], "mergernet.services.splus.update_authorization": [[118, "mergernet-services-splus-update-authorization"]], "mergernet.services.tap": [[119, "module-mergernet.services.tap"]], "TapService": [[120, "tapservice"]], "mergernet.services.tensorboard": [[121, "module-mergernet.services.tensorboard"]], "TensorboardService": [[122, "tensorboardservice"]], "mergernet.services.utils": [[123, "module-mergernet.services.utils"]], "mergernet.services.utils.append_query_params": [[124, "mergernet-services-utils-append-query-params"]], "mergernet.services.utils.batch_download_file": [[125, "mergernet-services-utils-batch-download-file"]], "mergernet.services.utils.download_file": [[126, "mergernet-services-utils-download-file"]], "mergernet.services.utils.parallel_function_executor": [[127, "mergernet-services-utils-parallel-function-executor"]], "mergernet.visualization": [[128, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[129, "module-mergernet.visualization.plot"]], "Serie": [[130, "serie"]], "mergernet.visualization.plot.color_color": [[131, "mergernet-visualization-plot-color-color"]], "mergernet.visualization.plot.conf_matrix": [[132, "mergernet-visualization-plot-conf-matrix"]], "mergernet.visualization.plot.data_distribution": [[133, "mergernet-visualization-plot-data-distribution"]], "mergernet.visualization.plot.mag_class_distribution": [[134, "mergernet-visualization-plot-mag-class-distribution"]], "mergernet.visualization.plot.object_position": [[135, "mergernet-visualization-plot-object-position"]], "mergernet.visualization.plot.roc": [[136, "mergernet-visualization-plot-roc"]], "Notes": [[136, null]], "mergernet.visualization.plot.train_metrics": [[137, "mergernet-visualization-plot-train-metrics"]], "Experiments": [[138, "experiments"]], "Welcome to mergernet\u2019s documentation!": [[139, "welcome-to-mergernet-s-documentation"]], "Contents:": [[139, null]], "Indices and tables": [[139, "indices-and-tables"]], "API Reference": [[140, "api-reference"]]}, "indexentries": {"mergernet.core": [[0, "module-mergernet.core"]], "module": [[0, "module-mergernet.core"], [1, "module-mergernet.core.constants"], [2, "module-mergernet.core.experiment"], [5, "module-mergernet.core.hp"], [13, "module-mergernet.core.logging"], [15, "module-mergernet.core.utils"], [31, "module-mergernet.data"], [32, "module-mergernet.data.dataset"], [34, "module-mergernet.data.dataset_config"], [37, "module-mergernet.data.image"], [39, "module-mergernet.data.kfold"], [42, "module-mergernet.data.match"], [46, "module-mergernet.data.preprocessing"], [52, "module-mergernet.data.rgb"], [54, "module-mergernet.data.sanitization"], [56, "module-mergernet.data.trilogy"], [68, "module-mergernet.estimators"], [69, "module-mergernet.estimators.automl"], [71, "module-mergernet.estimators.base"], [75, "module-mergernet.estimators.decals"], [77, "module-mergernet.estimators.parametric"], [79, "module-mergernet.jobs"], [80, "module-mergernet.jobs.j005"], [82, "module-mergernet.jobs.j006"], [84, "module-mergernet.model"], [85, "module-mergernet.model.automl"], [87, "module-mergernet.model.baseline"], [89, "module-mergernet.model.callbacks"], [94, "module-mergernet.model.inference"], [96, "module-mergernet.model.utils"], [102, "module-mergernet.services"], [103, "module-mergernet.services.github"], [105, "module-mergernet.services.google"], [107, "module-mergernet.services.imaging"], [109, "module-mergernet.services.legacy"], [111, "module-mergernet.services.sciserver"], [113, "module-mergernet.services.sdss"], [115, "module-mergernet.services.splus"], [119, "module-mergernet.services.tap"], [121, "module-mergernet.services.tensorboard"], [123, "module-mergernet.services.utils"], [128, "module-mergernet.visualization"], [129, "module-mergernet.visualization.plot"]], "mergernet.core.constants": [[1, "module-mergernet.core.constants"]], "mergernet.core.experiment": [[2, "module-mergernet.core.experiment"]], "experiment (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment"]], "experiment.tracer (class in mergernet.core.experiment)": [[3, "mergernet.core.experiment.Experiment.Tracer"]], "_exp_created (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._exp_created"]], "_post_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._post_run"]], "_pre_run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._pre_run"]], "_registered_artifacts (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment._setup_experiment_attributes"]], "download_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.download_file_gd"]], "exp_id (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_id"]], "exp_name (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.exp_name"]], "finish_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.finish_wandb"]], "gd_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_exp_path"]], "gd_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.gd_shared_path"]], "init_wandb() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.init_wandb"]], "local_exp_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_exp_path"]], "local_shared_path (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.local_shared_path"]], "notes (mergernet.core.experiment.experiment attribute)": [[3, "mergernet.core.experiment.Experiment.notes"]], "register_artifact() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.register_artifact"]], "run() (mergernet.core.experiment.experiment method)": [[3, "mergernet.core.experiment.Experiment.run"]], "upload_file_gd() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_file_gd"]], "upload_registered_artifacts() (mergernet.core.experiment.experiment class method)": [[3, "mergernet.core.experiment.Experiment.upload_registered_artifacts"]], "backup_model() (in module mergernet.core.experiment)": [[4, "mergernet.core.experiment.backup_model"]], "mergernet.core.hp": [[5, "module-mergernet.core.hp"]], "categoricalhyperparameter (class in mergernet.core.hp)": [[6, "mergernet.core.hp.CategoricalHyperParameter"]], "clear_last_value() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.categoricalhyperparameter static method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.categoricalhyperparameter method)": [[6, "mergernet.core.hp.CategoricalHyperParameter.to_dict"]], "constanthyperparameter (class in mergernet.core.hp)": [[7, "mergernet.core.hp.ConstantHyperParameter"]], "clear_last_value() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.constanthyperparameter static method)": [[7, "mergernet.core.hp.ConstantHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.constanthyperparameter method)": [[7, "mergernet.core.hp.ConstantHyperParameter.to_dict"]], "floathyperparameter (class in mergernet.core.hp)": [[8, "mergernet.core.hp.FloatHyperParameter"]], "clear_last_value() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.floathyperparameter static method)": [[8, "mergernet.core.hp.FloatHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.floathyperparameter method)": [[8, "mergernet.core.hp.FloatHyperParameter.to_dict"]], "hp (class in mergernet.core.hp)": [[9, "mergernet.core.hp.HP"]], "cat() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.cat"]], "const() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.const"]], "num() (mergernet.core.hp.hp static method)": [[9, "mergernet.core.hp.HP.num"]], "hyperparameter (class in mergernet.core.hp)": [[10, "mergernet.core.hp.HyperParameter"]], "clear_last_value() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.hyperparameter static method)": [[10, "mergernet.core.hp.HyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.set_trial"]], "suggest() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.suggest"]], "to_dict() (mergernet.core.hp.hyperparameter method)": [[10, "mergernet.core.hp.HyperParameter.to_dict"]], "hyperparameterset (class in mergernet.core.hp)": [[11, "mergernet.core.hp.HyperParameterSet"]], "add() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.add"]], "clear_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.clear_values_dict"]], "get() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.get"]], "set_trial() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.set_trial"]], "to_values_dict() (mergernet.core.hp.hyperparameterset method)": [[11, "mergernet.core.hp.HyperParameterSet.to_values_dict"]], "inthyperparameter (class in mergernet.core.hp)": [[12, "mergernet.core.hp.IntHyperParameter"]], "clear_last_value() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.clear_last_value"]], "from_dict() (mergernet.core.hp.inthyperparameter static method)": [[12, "mergernet.core.hp.IntHyperParameter.from_dict"]], "set_attr() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_attr"]], "set_trial() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.set_trial"]], "suggest() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.suggest"]], "to_dict() (mergernet.core.hp.inthyperparameter method)": [[12, "mergernet.core.hp.IntHyperParameter.to_dict"]], "mergernet.core.logging": [[13, "module-mergernet.core.logging"]], "configure_root_logger() (in module mergernet.core.logging)": [[14, "mergernet.core.logging.configure_root_logger"]], "mergernet.core.utils": [[15, "module-mergernet.core.utils"]], "cacheddataframe (class in mergernet.core.utils)": [[16, "mergernet.core.utils.CachedDataFrame"]], "_cache (mergernet.core.utils.cacheddataframe attribute)": [[16, "mergernet.core.utils.CachedDataFrame._cache"]], "load() (mergernet.core.utils.cacheddataframe class method)": [[16, "mergernet.core.utils.CachedDataFrame.load"]], "singletonmeta (class in mergernet.core.utils)": [[17, "mergernet.core.utils.SingletonMeta"]], "__new__() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.__new__"]], "_instances (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._instances"]], "_lock (mergernet.core.utils.singletonmeta attribute)": [[17, "mergernet.core.utils.SingletonMeta._lock"]], "mro() (mergernet.core.utils.singletonmeta method)": [[17, "mergernet.core.utils.SingletonMeta.mro"]], "timming (class in mergernet.core.utils)": [[18, "mergernet.core.utils.Timming"]], "_format_time() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming._format_time"]], "duration() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.duration"]], "end() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.end"]], "start() (mergernet.core.utils.timming method)": [[18, "mergernet.core.utils.Timming.start"]], "array_fallback() (in module mergernet.core.utils)": [[19, "mergernet.core.utils.array_fallback"]], "__new__() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.__new__"]], "classproperty (class in mergernet.core.utils)": [[20, "mergernet.core.utils.classproperty"]], "deleter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.deleter"]], "fdel (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fdel"]], "fget (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fget"]], "fset (mergernet.core.utils.classproperty attribute)": [[20, "mergernet.core.utils.classproperty.fset"]], "getter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.getter"]], "setter() (mergernet.core.utils.classproperty method)": [[20, "mergernet.core.utils.classproperty.setter"]], "deep_update() (in module mergernet.core.utils)": [[21, "mergernet.core.utils.deep_update"]], "find_by_value() (in module mergernet.core.utils)": [[22, "mergernet.core.utils.find_by_value"]], "heading() (in module mergernet.core.utils)": [[23, "mergernet.core.utils.heading"]], "iauname() (in module mergernet.core.utils)": [[24, "mergernet.core.utils.iauname"]], "load_image() (in module mergernet.core.utils)": [[25, "mergernet.core.utils.load_image"]], "load_table() (in module mergernet.core.utils)": [[26, "mergernet.core.utils.load_table"]], "not_in() (in module mergernet.core.utils)": [[27, "mergernet.core.utils.not_in"]], "save_table() (in module mergernet.core.utils)": [[28, "mergernet.core.utils.save_table"]], "serialize() (in module mergernet.core.utils)": [[29, "mergernet.core.utils.serialize"]], "unique_path() (in module mergernet.core.utils)": [[30, "mergernet.core.utils.unique_path"]], "mergernet.data": [[31, "module-mergernet.data"]], "mergernet.data.dataset": [[32, "module-mergernet.data.dataset"]], "dataset (class in mergernet.data.dataset)": [[33, "mergernet.data.dataset.Dataset"]], "_create_table_for_preds_dataset() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset._create_table_for_preds_dataset"]], "_detect_img_extension() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset._detect_img_extension"]], "_discretize_label() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset._discretize_label"]], "compute_class_weight() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.compute_class_weight"]], "concat_fold_column() (mergernet.data.dataset.dataset static method)": [[33, "mergernet.data.dataset.Dataset.concat_fold_column"]], "download() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.download"]], "get_x() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.get_X"]], "get_x_by_fold() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.get_X_by_fold"]], "get_fold() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.get_fold"]], "get_images_paths() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.get_images_paths"]], "get_preds_dataset() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.get_preds_dataset"]], "is_dataset_downloaded() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.is_dataset_downloaded"]], "prepare_data() (mergernet.data.dataset.dataset method)": [[33, "mergernet.data.dataset.Dataset.prepare_data"]], "registry (mergernet.data.dataset.dataset attribute)": [[33, "mergernet.data.dataset.Dataset.registry"]], "mergernet.data.dataset_config": [[34, "module-mergernet.data.dataset_config"]], "datasetconfig (class in mergernet.data.dataset_config)": [[35, "mergernet.data.dataset_config.DatasetConfig"]], "bin_legacy_north_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BIN_LEGACY_NORTH_RGB_128"]], "bin_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BIN_SDSS_128"]], "blind_splus_gal80_ls10_rgb_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_GAL80_LS10_RGB_128"]], "blind_splus_lupton_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_128"]], "blind_splus_lupton_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_LUPTON_150"]], "blind_splus_trilogy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_128"]], "blind_splus_trilogy_150 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.BLIND_SPLUS_TRILOGY_150"]], "darg_no_inspection (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.DARG_NO_INSPECTION"]], "datasetregistry (class in mergernet.data.dataset_config)": [[36, "mergernet.data.dataset_config.DatasetRegistry"]], "mesd_legacy_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.MESD_LEGACY_128"]], "mesd_sdss_128 (mergernet.data.dataset_config.datasetregistry attribute)": [[36, "mergernet.data.dataset_config.DatasetRegistry.MESD_SDSS_128"]], "mergernet.data.image": [[37, "module-mergernet.data.image"]], "colorimage (class in mergernet.data.image)": [[38, "mergernet.data.image.ColorImage"]], "asinh_map() (mergernet.data.image.colorimage static method)": [[38, "mergernet.data.image.ColorImage.asinh_map"]], "asinh_map2() (mergernet.data.image.colorimage static method)": [[38, "mergernet.data.image.ColorImage.asinh_map2"]], "batch_legacy_rgb() (mergernet.data.image.colorimage static method)": [[38, "mergernet.data.image.ColorImage.batch_legacy_rgb"]], "legacy_rgb() (mergernet.data.image.colorimage static method)": [[38, "mergernet.data.image.ColorImage.legacy_rgb"]], "lupton_rgb() (mergernet.data.image.colorimage static method)": [[38, "mergernet.data.image.ColorImage.lupton_rgb"]], "mergernet.data.kfold": [[39, "module-mergernet.data.kfold"]], "distributionkfold (class in mergernet.data.kfold)": [[40, "mergernet.data.kfold.DistributionKFold"]], "split() (mergernet.data.kfold.distributionkfold method)": [[40, "mergernet.data.kfold.DistributionKFold.split"]], "stratifieddistributionkfold (class in mergernet.data.kfold)": [[41, "mergernet.data.kfold.StratifiedDistributionKFold"]], "compute_max_bins() (mergernet.data.kfold.stratifieddistributionkfold static method)": [[41, "mergernet.data.kfold.StratifiedDistributionKFold.compute_max_bins"]], "split_all() (mergernet.data.kfold.stratifieddistributionkfold method)": [[41, "mergernet.data.kfold.StratifiedDistributionKFold.split_all"]], "split_ids() (mergernet.data.kfold.stratifieddistributionkfold method)": [[41, "mergernet.data.kfold.StratifiedDistributionKFold.split_ids"]], "mergernet.data.match": [[42, "module-mergernet.data.match"]], "crossmatch (class in mergernet.data.match)": [[43, "mergernet.data.match.CrossMatch"]], "crossmatch() (mergernet.data.match.crossmatch method)": [[43, "mergernet.data.match.CrossMatch.crossmatch"]], "pair_match() (mergernet.data.match.crossmatch method)": [[43, "mergernet.data.match.CrossMatch.pair_match"]], "unique() (mergernet.data.match.crossmatch method)": [[43, "mergernet.data.match.CrossMatch.unique"]], "crossmatchresult (class in mergernet.data.match)": [[44, "mergernet.data.match.CrossMatchResult"]], "distance (mergernet.data.match.crossmatchresult attribute)": [[44, "mergernet.data.match.CrossMatchResult.distance"]], "primary_idx (mergernet.data.match.crossmatchresult attribute)": [[44, "mergernet.data.match.CrossMatchResult.primary_idx"]], "secondary_idx (mergernet.data.match.crossmatchresult attribute)": [[44, "mergernet.data.match.CrossMatchResult.secondary_idx"]], "table (mergernet.data.match.crossmatchresult attribute)": [[44, "mergernet.data.match.CrossMatchResult.table"]], "xtable (class in mergernet.data.match)": [[45, "mergernet.data.match.XTable"]], "get_coords() (mergernet.data.match.xtable method)": [[45, "mergernet.data.match.XTable.get_coords"]], "to_df() (mergernet.data.match.xtable method)": [[45, "mergernet.data.match.XTable.to_df"]], "mergernet.data.preprocessing": [[46, "module-mergernet.data.preprocessing"]], "load_jpg() (in module mergernet.data.preprocessing)": [[47, "mergernet.data.preprocessing.load_jpg"]], "load_png() (in module mergernet.data.preprocessing)": [[48, "mergernet.data.preprocessing.load_png"]], "normalize_rgb() (in module mergernet.data.preprocessing)": [[49, "mergernet.data.preprocessing.normalize_rgb"]], "one_hot_factory() (in module mergernet.data.preprocessing)": [[50, "mergernet.data.preprocessing.one_hot_factory"]], "standardize_rgb() (in module mergernet.data.preprocessing)": [[51, "mergernet.data.preprocessing.standardize_rgb"]], "mergernet.data.rgb": [[52, "module-mergernet.data.rgb"]], "rgb (class in mergernet.data.rgb)": [[53, "mergernet.data.rgb.RGB"]], "make_trilogy_fits() (mergernet.data.rgb.rgb method)": [[53, "mergernet.data.rgb.RGB.make_trilogy_fits"]], "trilogy_fits_to_png() (mergernet.data.rgb.rgb method)": [[53, "mergernet.data.rgb.RGB.trilogy_fits_to_png"]], "mergernet.data.sanitization": [[54, "module-mergernet.data.sanitization"]], "datasetsanitization (class in mergernet.data.sanitization)": [[55, "mergernet.data.sanitization.DatasetSanitization"]], "check_images() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.check_images"]], "drop_images_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_filesize"]], "drop_images_by_iauname() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.drop_images_by_iauname"]], "filesize_histogram() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.filesize_histogram"]], "get_filesize_distribution() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.get_filesize_distribution"]], "get_iauname_by_filesize() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.get_iauname_by_filesize"]], "sample() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.sample"]], "sanitize() (mergernet.data.sanitization.datasetsanitization method)": [[55, "mergernet.data.sanitization.DatasetSanitization.sanitize"]], "mergernet.data.trilogy": [[56, "module-mergernet.data.trilogy"]], "makeimg (class in mergernet.data.trilogy)": [[57, "mergernet.data.trilogy.MakeImg"]], "color() (mergernet.data.trilogy.makeimg method)": [[57, "mergernet.data.trilogy.MakeImg.color"]], "get_array() (mergernet.data.trilogy.makeimg method)": [[57, "mergernet.data.trilogy.MakeImg.get_array"]], "savefig() (mergernet.data.trilogy.makeimg method)": [[57, "mergernet.data.trilogy.MakeImg.savefig"]], "rgb2im() (in module mergernet.data.trilogy)": [[58, "mergernet.data.trilogy.RGB2im"]], "adjust_saturation() (in module mergernet.data.trilogy)": [[59, "mergernet.data.trilogy.adjust_saturation"]], "da() (in module mergernet.data.trilogy)": [[60, "mergernet.data.trilogy.da"]], "get_clip() (in module mergernet.data.trilogy)": [[61, "mergernet.data.trilogy.get_clip"]], "get_levels() (in module mergernet.data.trilogy)": [[62, "mergernet.data.trilogy.get_levels"]], "imscale() (in module mergernet.data.trilogy)": [[63, "mergernet.data.trilogy.imscale"]], "meanstd() (in module mergernet.data.trilogy)": [[64, "mergernet.data.trilogy.meanstd"]], "rms() (in module mergernet.data.trilogy)": [[65, "mergernet.data.trilogy.rms"]], "satk2m() (in module mergernet.data.trilogy)": [[66, "mergernet.data.trilogy.satK2m"]], "setlevel() (in module mergernet.data.trilogy)": [[67, "mergernet.data.trilogy.setLevel"]], "mergernet.estimators": [[68, "module-mergernet.estimators"]], "mergernet.estimators.automl": [[69, "module-mergernet.estimators.automl"]], "optunaestimator (class in mergernet.estimators.automl)": [[70, "mergernet.estimators.automl.OptunaEstimator"]], "_abc_impl (mergernet.estimators.automl.optunaestimator attribute)": [[70, "mergernet.estimators.automl.OptunaEstimator._abc_impl"]], "_objective() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator._objective"]], "build() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.build"]], "compile_model() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.compile_model"]], "download() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.download"]], "get_conv_arch() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.plot"]], "predict() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.predict"]], "registry (mergernet.estimators.automl.optunaestimator attribute)": [[70, "mergernet.estimators.automl.OptunaEstimator.registry"]], "set_trainable() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.set_trainable"]], "tf_model (mergernet.estimators.automl.optunaestimator property)": [[70, "mergernet.estimators.automl.OptunaEstimator.tf_model"]], "train() (mergernet.estimators.automl.optunaestimator method)": [[70, "mergernet.estimators.automl.OptunaEstimator.train"]], "mergernet.estimators.base": [[71, "module-mergernet.estimators.base"]], "estimator (class in mergernet.estimators.base)": [[72, "mergernet.estimators.base.Estimator"]], "_abc_impl (mergernet.estimators.base.estimator attribute)": [[72, "mergernet.estimators.base.Estimator._abc_impl"]], "build() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.build"]], "compile_model() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.compile_model"]], "download() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.download"]], "get_conv_arch() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.get_dataaug_block"]], "plot() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.plot"]], "predict() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.predict"]], "registry (mergernet.estimators.base.estimator attribute)": [[72, "mergernet.estimators.base.Estimator.registry"]], "set_trainable() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.set_trainable"]], "tf_model (mergernet.estimators.base.estimator property)": [[72, "mergernet.estimators.base.Estimator.tf_model"]], "train() (mergernet.estimators.base.estimator method)": [[72, "mergernet.estimators.base.Estimator.train"]], "estimatorconfig (class in mergernet.estimators.base)": [[73, "mergernet.estimators.base.EstimatorConfig"]], "estimatorregistry (class in mergernet.estimators.base)": [[74, "mergernet.estimators.base.EstimatorRegistry"]], "zoobot_greyscale (mergernet.estimators.base.estimatorregistry attribute)": [[74, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_GREYSCALE"]], "zoobot_rgb (mergernet.estimators.base.estimatorregistry attribute)": [[74, "mergernet.estimators.base.EstimatorRegistry.ZOOBOT_RGB"]], "mergernet.estimators.decals": [[75, "module-mergernet.estimators.decals"]], "zoobotestimator (class in mergernet.estimators.decals)": [[76, "mergernet.estimators.decals.ZoobotEstimator"]], "_abc_impl (mergernet.estimators.decals.zoobotestimator attribute)": [[76, "mergernet.estimators.decals.ZoobotEstimator._abc_impl"]], "_prepare_dataset() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator._prepare_dataset"]], "build() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.build"]], "cnn_representations() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.cnn_representations"]], "compile_model() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.compile_model"]], "download() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.download"]], "get_conv_arch() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.get_dataaug_block"]], "pca() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.pca"]], "plot() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.plot"]], "predict() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.predict"]], "registry (mergernet.estimators.decals.zoobotestimator attribute)": [[76, "mergernet.estimators.decals.ZoobotEstimator.registry"]], "set_trainable() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.set_trainable"]], "tf_model (mergernet.estimators.decals.zoobotestimator property)": [[76, "mergernet.estimators.decals.ZoobotEstimator.tf_model"]], "train() (mergernet.estimators.decals.zoobotestimator method)": [[76, "mergernet.estimators.decals.ZoobotEstimator.train"]], "mergernet.estimators.parametric": [[77, "module-mergernet.estimators.parametric"]], "parametricestimator (class in mergernet.estimators.parametric)": [[78, "mergernet.estimators.parametric.ParametricEstimator"]], "_abc_impl (mergernet.estimators.parametric.parametricestimator attribute)": [[78, "mergernet.estimators.parametric.ParametricEstimator._abc_impl"]], "build() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.build"]], "compile_model() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.compile_model"]], "download() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.download"]], "get_conv_arch() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.get_conv_arch"]], "get_dataaug_block() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.get_dataaug_block"]], "plot() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.plot"]], "predict() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.predict"]], "registry (mergernet.estimators.parametric.parametricestimator attribute)": [[78, "mergernet.estimators.parametric.ParametricEstimator.registry"]], "set_trainable() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.set_trainable"]], "tf_model (mergernet.estimators.parametric.parametricestimator property)": [[78, "mergernet.estimators.parametric.ParametricEstimator.tf_model"]], "train() (mergernet.estimators.parametric.parametricestimator method)": [[78, "mergernet.estimators.parametric.ParametricEstimator.train"]], "mergernet.jobs": [[79, "module-mergernet.jobs"]], "mergernet.jobs.j005": [[80, "module-mergernet.jobs.j005"]], "job (class in mergernet.jobs.j005)": [[81, "mergernet.jobs.j005.Job"]], "job.tracer (class in mergernet.jobs.j005)": [[81, "mergernet.jobs.j005.Job.Tracer"]], "_exp_created (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job._exp_created"]], "_post_run() (mergernet.jobs.j005.job method)": [[81, "mergernet.jobs.j005.Job._post_run"]], "_pre_run() (mergernet.jobs.j005.job method)": [[81, "mergernet.jobs.j005.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j005.job method)": [[81, "mergernet.jobs.j005.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j005.job method)": [[81, "mergernet.jobs.j005.Job.call"]], "download_file_gd() (mergernet.jobs.j005.job class method)": [[81, "mergernet.jobs.j005.Job.download_file_gd"]], "exp_id (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.exp_id"]], "exp_name (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j005.job class method)": [[81, "mergernet.jobs.j005.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j005.job class method)": [[81, "mergernet.jobs.j005.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.local_shared_path"]], "notes (mergernet.jobs.j005.job attribute)": [[81, "mergernet.jobs.j005.Job.notes"]], "register_artifact() (mergernet.jobs.j005.job class method)": [[81, "mergernet.jobs.j005.Job.register_artifact"]], "run() (mergernet.jobs.j005.job method)": [[81, "mergernet.jobs.j005.Job.run"]], "upload_file_gd() (mergernet.jobs.j005.job class method)": [[81, "mergernet.jobs.j005.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j005.job class method)": [[81, "mergernet.jobs.j005.Job.upload_registered_artifacts"]], "mergernet.jobs.j006": [[82, "module-mergernet.jobs.j006"]], "job (class in mergernet.jobs.j006)": [[83, "mergernet.jobs.j006.Job"]], "job.tracer (class in mergernet.jobs.j006)": [[83, "mergernet.jobs.j006.Job.Tracer"]], "_exp_created (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job._exp_created"]], "_post_run() (mergernet.jobs.j006.job method)": [[83, "mergernet.jobs.j006.Job._post_run"]], "_pre_run() (mergernet.jobs.j006.job method)": [[83, "mergernet.jobs.j006.Job._pre_run"]], "_registered_artifacts (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job._registered_artifacts"]], "_setup_experiment_attributes() (mergernet.jobs.j006.job method)": [[83, "mergernet.jobs.j006.Job._setup_experiment_attributes"]], "call() (mergernet.jobs.j006.job method)": [[83, "mergernet.jobs.j006.Job.call"]], "download_file_gd() (mergernet.jobs.j006.job class method)": [[83, "mergernet.jobs.j006.Job.download_file_gd"]], "exp_id (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.exp_id"]], "exp_name (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.exp_name"]], "finish_wandb() (mergernet.jobs.j006.job class method)": [[83, "mergernet.jobs.j006.Job.finish_wandb"]], "gd_exp_path (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.gd_exp_path"]], "gd_shared_path (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.gd_shared_path"]], "init_wandb() (mergernet.jobs.j006.job class method)": [[83, "mergernet.jobs.j006.Job.init_wandb"]], "local_exp_path (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.local_exp_path"]], "local_shared_path (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.local_shared_path"]], "notes (mergernet.jobs.j006.job attribute)": [[83, "mergernet.jobs.j006.Job.notes"]], "register_artifact() (mergernet.jobs.j006.job class method)": [[83, "mergernet.jobs.j006.Job.register_artifact"]], "run() (mergernet.jobs.j006.job method)": [[83, "mergernet.jobs.j006.Job.run"]], "upload_file_gd() (mergernet.jobs.j006.job class method)": [[83, "mergernet.jobs.j006.Job.upload_file_gd"]], "upload_registered_artifacts() (mergernet.jobs.j006.job class method)": [[83, "mergernet.jobs.j006.Job.upload_registered_artifacts"]], "mergernet.model": [[84, "module-mergernet.model"]], "mergernet.model.automl": [[85, "module-mergernet.model.automl"]], "optuna_train() (in module mergernet.model.automl)": [[86, "mergernet.model.automl.optuna_train"]], "mergernet.model.baseline": [[87, "module-mergernet.model.baseline"]], "finetune_train() (in module mergernet.model.baseline)": [[88, "mergernet.model.baseline.finetune_train"]], "mergernet.model.callbacks": [[89, "module-mergernet.model.callbacks"]], "deltastopping (class in mergernet.model.callbacks)": [[90, "mergernet.model.callbacks.DeltaStopping"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.deltastopping attribute)": [[90, "mergernet.model.callbacks.DeltaStopping._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.deltastopping attribute)": [[90, "mergernet.model.callbacks.DeltaStopping._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.on_train_end"]], "set_model() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.set_model"]], "set_params() (mergernet.model.callbacks.deltastopping method)": [[90, "mergernet.model.callbacks.DeltaStopping.set_params"]], "mywandbcallback (class in mergernet.model.callbacks)": [[91, "mergernet.model.callbacks.MyWandbCallback"]], "_attempt_evaluation_log() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._attempt_evaluation_log"]], "_build_grad_accumulator_model() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._build_grad_accumulator_model"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.mywandbcallback attribute)": [[91, "mergernet.model.callbacks.MyWandbCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.mywandbcallback attribute)": [[91, "mergernet.model.callbacks.MyWandbCallback._keras_api_names_v1"]], "_log_dataframe() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._log_dataframe"]], "_log_gradients() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._log_gradients"]], "_log_images() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._log_images"]], "_log_weights() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._log_weights"]], "_logits_to_captions() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._logits_to_captions"]], "_masks_to_pixels() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._masks_to_pixels"]], "_save_model() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._save_model"]], "_save_model_as_artifact() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback._save_model_as_artifact"]], "get_flops() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.get_flops"]], "on_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.set_model"]], "set_params() (mergernet.model.callbacks.mywandbcallback method)": [[91, "mergernet.model.callbacks.MyWandbCallback.set_params"]], "prunecallback (class in mergernet.model.callbacks)": [[92, "mergernet.model.callbacks.PruneCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.prunecallback attribute)": [[92, "mergernet.model.callbacks.PruneCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.prunecallback attribute)": [[92, "mergernet.model.callbacks.PruneCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.set_model"]], "set_params() (mergernet.model.callbacks.prunecallback method)": [[92, "mergernet.model.callbacks.PruneCallback.set_params"]], "savebesttrialcallback (class in mergernet.model.callbacks)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback"]], "_implements_predict_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback._implements_predict_batch_hooks"]], "_implements_test_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback._implements_test_batch_hooks"]], "_implements_train_batch_hooks() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback._implements_train_batch_hooks"]], "_keras_api_names (mergernet.model.callbacks.savebesttrialcallback attribute)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names"]], "_keras_api_names_v1 (mergernet.model.callbacks.savebesttrialcallback attribute)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback._keras_api_names_v1"]], "on_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_begin"]], "on_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_batch_end"]], "on_epoch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_begin"]], "on_epoch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_epoch_end"]], "on_predict_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_begin"]], "on_predict_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_batch_end"]], "on_predict_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_begin"]], "on_predict_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_predict_end"]], "on_test_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_begin"]], "on_test_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_batch_end"]], "on_test_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_begin"]], "on_test_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_test_end"]], "on_train_batch_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_begin"]], "on_train_batch_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_batch_end"]], "on_train_begin() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_begin"]], "on_train_end() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.on_train_end"]], "set_model() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.set_model"]], "set_params() (mergernet.model.callbacks.savebesttrialcallback method)": [[93, "mergernet.model.callbacks.SaveBestTrialCallback.set_params"]], "mergernet.model.inference": [[94, "module-mergernet.model.inference"]], "predictor (class in mergernet.model.inference)": [[95, "mergernet.model.inference.Predictor"]], "predict() (mergernet.model.inference.predictor method)": [[95, "mergernet.model.inference.Predictor.predict"]], "upload() (mergernet.model.inference.predictor method)": [[95, "mergernet.model.inference.Predictor.upload"]], "mergernet.model.utils": [[96, "module-mergernet.model.utils"]], "get_conv_arch() (in module mergernet.model.utils)": [[97, "mergernet.model.utils.get_conv_arch"]], "history_to_dataframe() (in module mergernet.model.utils)": [[98, "mergernet.model.utils.history_to_dataframe"]], "load_model() (in module mergernet.model.utils)": [[99, "mergernet.model.utils.load_model"]], "set_trainable_state() (in module mergernet.model.utils)": [[100, "mergernet.model.utils.set_trainable_state"]], "setup_seeds() (in module mergernet.model.utils)": [[101, "mergernet.model.utils.setup_seeds"]], "mergernet.services": [[102, "module-mergernet.services"]], "mergernet.services.github": [[103, "module-mergernet.services.github"]], "githubservice (class in mergernet.services.github)": [[104, "mergernet.services.github.GithubService"]], "_encode_content() (mergernet.services.github.githubservice method)": [[104, "mergernet.services.github.GithubService._encode_content"]], "_get_url() (mergernet.services.github.githubservice method)": [[104, "mergernet.services.github.GithubService._get_url"]], "commit() (mergernet.services.github.githubservice method)": [[104, "mergernet.services.github.GithubService.commit"]], "download() (mergernet.services.github.githubservice method)": [[104, "mergernet.services.github.GithubService.download"]], "get_lastest_job_run() (mergernet.services.github.githubservice method)": [[104, "mergernet.services.github.GithubService.get_lastest_job_run"]], "list_dir() (mergernet.services.github.githubservice method)": [[104, "mergernet.services.github.GithubService.list_dir"]], "mergernet.services.google": [[105, "module-mergernet.services.google"]], "gdrive (class in mergernet.services.google)": [[106, "mergernet.services.google.GDrive"]], "base_path (mergernet.services.google.gdrive attribute)": [[106, "mergernet.services.google.GDrive.base_path"]], "exists() (mergernet.services.google.gdrive method)": [[106, "mergernet.services.google.GDrive.exists"]], "get() (mergernet.services.google.gdrive method)": [[106, "mergernet.services.google.GDrive.get"]], "get_url() (mergernet.services.google.gdrive static method)": [[106, "mergernet.services.google.GDrive.get_url"]], "is_mounted() (mergernet.services.google.gdrive method)": [[106, "mergernet.services.google.GDrive.is_mounted"]], "move() (mergernet.services.google.gdrive method)": [[106, "mergernet.services.google.GDrive.move"]], "send() (mergernet.services.google.gdrive method)": [[106, "mergernet.services.google.GDrive.send"]], "send_dir() (mergernet.services.google.gdrive method)": [[106, "mergernet.services.google.GDrive.send_dir"]], "mergernet.services.imaging": [[107, "module-mergernet.services.imaging"]], "baseimagingservice (class in mergernet.services.imaging)": [[108, "mergernet.services.imaging.BaseImagingService"]], "_abc_impl (mergernet.services.imaging.baseimagingservice attribute)": [[108, "mergernet.services.imaging.BaseImagingService._abc_impl"]], "batch_download_rgb() (mergernet.services.imaging.baseimagingservice method)": [[108, "mergernet.services.imaging.BaseImagingService.batch_download_rgb"]], "download_rgb() (mergernet.services.imaging.baseimagingservice method)": [[108, "mergernet.services.imaging.BaseImagingService.download_rgb"]], "mergernet.services.legacy": [[109, "module-mergernet.services.legacy"]], "legacyservice (class in mergernet.services.legacy)": [[110, "mergernet.services.legacy.LegacyService"]], "batch_cutout() (mergernet.services.legacy.legacyservice method)": [[110, "mergernet.services.legacy.LegacyService.batch_cutout"]], "cutout() (mergernet.services.legacy.legacyservice method)": [[110, "mergernet.services.legacy.LegacyService.cutout"]], "mergernet.services.sciserver": [[111, "module-mergernet.services.sciserver"]], "sciserver (class in mergernet.services.sciserver)": [[112, "mergernet.services.sciserver.SciServer"]], "get_url() (mergernet.services.sciserver.sciserver static method)": [[112, "mergernet.services.sciserver.SciServer.get_url"]], "mergernet.services.sdss": [[113, "module-mergernet.services.sdss"]], "sloanservice (class in mergernet.services.sdss)": [[114, "mergernet.services.sdss.SloanService"]], "batch_download_fits() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.batch_download_fits"]], "batch_download_rgb() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.batch_download_rgb"]], "crossmatch() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.crossmatch"]], "cutout() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.cutout"]], "download_fits() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.download_fits"]], "download_rgb() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.download_rgb"]], "get_image_filename() (mergernet.services.sdss.sloanservice method)": [[114, "mergernet.services.sdss.SloanService.get_image_filename"]], "mergernet.services.splus": [[115, "module-mergernet.services.splus"]], "imagetype (class in mergernet.services.splus)": [[116, "mergernet.services.splus.ImageType"]], "fits (mergernet.services.splus.imagetype attribute)": [[116, "mergernet.services.splus.ImageType.fits"]], "lupton (mergernet.services.splus.imagetype attribute)": [[116, "mergernet.services.splus.ImageType.lupton"]], "trilogy (mergernet.services.splus.imagetype attribute)": [[116, "mergernet.services.splus.ImageType.trilogy"]], "splusservice (class in mergernet.services.splus)": [[117, "mergernet.services.splus.SplusService"]], "_batch_download() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService._batch_download"]], "_download_image() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService._download_image"]], "_get_url() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService._get_url"]], "_lock (mergernet.services.splus.splusservice attribute)": [[117, "mergernet.services.splus.SplusService._lock"]], "_track_tap_job() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService._track_tap_job"]], "batch_image_download() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.batch_image_download"]], "batch_query() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.batch_query"]], "download_fits() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.download_fits"]], "download_lupton_rgb() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.download_lupton_rgb"]], "download_trilogy_rgb() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.download_trilogy_rgb"]], "query() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.query"]], "update_token() (mergernet.services.splus.splusservice method)": [[117, "mergernet.services.splus.SplusService.update_token"]], "update_authorization() (in module mergernet.services.splus)": [[118, "mergernet.services.splus.update_authorization"]], "mergernet.services.tap": [[119, "module-mergernet.services.tap"]], "tapservice (class in mergernet.services.tap)": [[120, "mergernet.services.tap.TapService"]], "batch_sync_query() (mergernet.services.tap.tapservice method)": [[120, "mergernet.services.tap.TapService.batch_sync_query"]], "sync_query() (mergernet.services.tap.tapservice method)": [[120, "mergernet.services.tap.TapService.sync_query"]], "mergernet.services.tensorboard": [[121, "module-mergernet.services.tensorboard"]], "tensorboardservice (class in mergernet.services.tensorboard)": [[122, "mergernet.services.tensorboard.TensorboardService"]], "upload_assets() (mergernet.services.tensorboard.tensorboardservice method)": [[122, "mergernet.services.tensorboard.TensorboardService.upload_assets"]], "mergernet.services.utils": [[123, "module-mergernet.services.utils"]], "append_query_params() (in module mergernet.services.utils)": [[124, "mergernet.services.utils.append_query_params"]], "batch_download_file() (in module mergernet.services.utils)": [[125, "mergernet.services.utils.batch_download_file"]], "download_file() (in module mergernet.services.utils)": [[126, "mergernet.services.utils.download_file"]], "parallel_function_executor() (in module mergernet.services.utils)": [[127, "mergernet.services.utils.parallel_function_executor"]], "mergernet.visualization": [[128, "module-mergernet.visualization"]], "mergernet.visualization.plot": [[129, "module-mergernet.visualization.plot"]], "serie (class in mergernet.visualization.plot)": [[130, "mergernet.visualization.plot.Serie"]], "get_serie() (mergernet.visualization.plot.serie method)": [[130, "mergernet.visualization.plot.Serie.get_serie"]], "get_std() (mergernet.visualization.plot.serie method)": [[130, "mergernet.visualization.plot.Serie.get_std"]], "has_std() (mergernet.visualization.plot.serie method)": [[130, "mergernet.visualization.plot.Serie.has_std"]], "color_color() (in module mergernet.visualization.plot)": [[131, "mergernet.visualization.plot.color_color"]], "conf_matrix() (in module mergernet.visualization.plot)": [[132, "mergernet.visualization.plot.conf_matrix"]], "data_distribution() (in module mergernet.visualization.plot)": [[133, "mergernet.visualization.plot.data_distribution"]], "mag_class_distribution() (in module mergernet.visualization.plot)": [[134, "mergernet.visualization.plot.mag_class_distribution"]], "object_position() (in module mergernet.visualization.plot)": [[135, "mergernet.visualization.plot.object_position"]], "roc() (in module mergernet.visualization.plot)": [[136, "mergernet.visualization.plot.roc"]], "train_metrics() (in module mergernet.visualization.plot)": [[137, "mergernet.visualization.plot.train_metrics"]]}})